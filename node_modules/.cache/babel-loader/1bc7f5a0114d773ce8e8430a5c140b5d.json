{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\diom working project\\\\staging\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(loginUser),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(logoutUser),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(watchUserLogin),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(watchUserLogout),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(loginSaga);import{takeEvery,fork,put,all,call}from\"redux-saga/effects\";import{toast}from\"react-toastify\";// Login Redux States\nimport{CHECK_LOGIN,LOGOUT_USER}from\"./actionTypes\";import{apiError,loginUserSuccessful,logoutUserSuccess}from\"./actions\";// AUTH related methods\nimport{postLogin}from\"../../../helpers/fackBackend_Helper\";import{getFirebaseBackend}from\"../../../helpers/firebase_helper\";//Initilize firebase\nvar fireBaseBackend=getFirebaseBackend();//If user is login then dispatch redux action's are directly from here.\nfunction loginUser(_ref){var _ref$payload,user,history,response;return _regeneratorRuntime.wrap(function loginUser$(_context){while(1){switch(_context.prev=_context.next){case 0:_ref$payload=_ref.payload,user=_ref$payload.user,history=_ref$payload.history;_context.prev=1;_context.next=4;return call(postLogin,\"/post-login\",{username:user.username,password:user.password});case 4:response=_context.sent;_context.next=7;return put(loginUserSuccessful(response));case 7:// debugger\nlocalStorage.setItem(\"authUser\",JSON.stringify(response));history.push(\"/mydashboard\");// console.log(\"saga success 1\", response);\n_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);// console.log(\"error error\", error);\ntoast.error(\"UserName or password is incorrect\");// yield put(apiError(error));\ncase 14:case\"end\":return _context.stop();}}},_marked,null,[[1,11]]);}function logoutUser(_ref2){var history,response;return _regeneratorRuntime.wrap(function logoutUser$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:history=_ref2.payload.history;_context2.prev=1;localStorage.removeItem(\"authUser\");if(!(process.env.REACT_APP_DEFAULTAUTH===\"firebase\")){_context2.next=9;break;}_context2.next=6;return call(fireBaseBackend.logout);case 6:response=_context2.sent;_context2.next=9;return put(logoutUserSuccess(response));case 9:history.push(\"/login\");localStorage.setItem(\"Token\",\"\");_context2.next=17;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](1);_context2.next=17;return put(apiError(_context2.t0));case 17:case\"end\":return _context2.stop();}}},_marked2,null,[[1,13]]);}export function watchUserLogin(){return _regeneratorRuntime.wrap(function watchUserLogin$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return takeEvery(CHECK_LOGIN,loginUser);case 2:case\"end\":return _context3.stop();}}},_marked3);}export function watchUserLogout(){return _regeneratorRuntime.wrap(function watchUserLogout$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return takeEvery(LOGOUT_USER,logoutUser);case 2:case\"end\":return _context4.stop();}}},_marked4);}function loginSaga(){return _regeneratorRuntime.wrap(function loginSaga$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return all([fork(watchUserLogin),fork(watchUserLogout)]);case 2:case\"end\":return _context5.stop();}}},_marked5);}export default loginSaga;","map":{"version":3,"sources":["D:/diom working project/staging/src/store/auth/login/saga.js"],"names":["loginUser","logoutUser","watchUserLogin","watchUserLogout","loginSaga","takeEvery","fork","put","all","call","toast","CHECK_LOGIN","LOGOUT_USER","apiError","loginUserSuccessful","logoutUserSuccess","postLogin","getFirebaseBackend","fireBaseBackend","payload","user","history","username","password","response","localStorage","setItem","JSON","stringify","push","error","removeItem","process","env","REACT_APP_DEFAULTAUTH","logout"],"mappings":"2KAcUA,S,iDAqBAC,U,iDAgBOC,c,iDAIAC,e,iDAIPC,S,EA3DV,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,GAA1B,CAA+BC,GAA/B,CAAoCC,IAApC,KAAgD,oBAAhD,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA;AACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,eAAzC,CACA,OAASC,QAAT,CAAmBC,mBAAnB,CAAwCC,iBAAxC,KAAiE,WAAjE,CAEA;AACA,OAASC,SAAT,KAA0B,qCAA1B,CACA,OAASC,kBAAT,KAAmC,kCAAnC,CAEA;AACA,GAAMC,CAAAA,eAAe,CAAGD,kBAAkB,EAA1C,CAEA;AACA,QAAUjB,CAAAA,SAAV,kLAAsBmB,OAAtB,CAAiCC,IAAjC,cAAiCA,IAAjC,CAAuCC,OAAvC,cAAuCA,OAAvC,iCAGqB,MAAMZ,CAAAA,IAAI,CAACO,SAAD,CAAY,aAAZ,CAA2B,CACpDM,QAAQ,CAAEF,IAAI,CAACE,QADqC,CAEpDC,QAAQ,CAAEH,IAAI,CAACG,QAFqC,CAA3B,CAAV,CAHrB,OAGUC,QAHV,+BAOI,MAAMjB,CAAAA,GAAG,CAACO,mBAAmB,CAACU,QAAD,CAApB,CAAT,CAPJ,OAQI;AACAC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAjC,EACAH,OAAO,CAACQ,IAAR,CAAa,cAAb,EACA;AAXJ,iFAcI;AACAnB,KAAK,CAACoB,KAAN,CAAY,mCAAZ,EAEA;AAjBJ,qEAqBA,QAAU7B,CAAAA,UAAV,mJAAkCoB,OAAlC,OAAuBF,OAAvB,CAAkCE,OAAlC,kBAEII,YAAY,CAACM,UAAb,CAAwB,UAAxB,EAFJ,KAIQC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAsC,UAJ9C,4CAKuB,MAAMzB,CAAAA,IAAI,CAACS,eAAe,CAACiB,MAAjB,CAAV,CALvB,OAKYX,QALZ,iCAMM,MAAMjB,CAAAA,GAAG,CAACQ,iBAAiB,CAACS,QAAD,CAAlB,CAAT,CANN,OASIH,OAAO,CAACQ,IAAR,CAAa,QAAb,EACAJ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAA9B,EAVJ,uGAYI,MAAMnB,CAAAA,GAAG,CAACM,QAAQ,cAAT,CAAT,CAZJ,uEAgBA,MAAO,SAAUX,CAAAA,cAAV,8IACL,MAAMG,CAAAA,SAAS,CAACM,WAAD,CAAcX,SAAd,CAAf,CADK,wDAIP,MAAO,SAAUG,CAAAA,eAAV,+IACL,MAAME,CAAAA,SAAS,CAACO,WAAD,CAAcX,UAAd,CAAf,CADK,wDAIP,QAAUG,CAAAA,SAAV,yIACE,MAAMI,CAAAA,GAAG,CAAC,CAACF,IAAI,CAACJ,cAAD,CAAL,CAAuBI,IAAI,CAACH,eAAD,CAA3B,CAAD,CAAT,CADF,wDAIA,cAAeC,CAAAA,SAAf","sourcesContent":["import { takeEvery, fork, put, all, call } from \"redux-saga/effects\";\r\nimport { toast } from \"react-toastify\";\r\n// Login Redux States\r\nimport { CHECK_LOGIN, LOGOUT_USER } from \"./actionTypes\";\r\nimport { apiError, loginUserSuccessful, logoutUserSuccess } from \"./actions\";\r\n\r\n// AUTH related methods\r\nimport { postLogin } from \"../../../helpers/fackBackend_Helper\";\r\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\";\r\n\r\n//Initilize firebase\r\nconst fireBaseBackend = getFirebaseBackend();\r\n\r\n//If user is login then dispatch redux action's are directly from here.\r\nfunction* loginUser({ payload: { user, history } }) {\r\n  \r\n  try {\r\n    const response = yield call(postLogin, \"/post-login\", {\r\n      username: user.username,\r\n      password: user.password,\r\n    });\r\n    yield put(loginUserSuccessful(response));\r\n    // debugger\r\n    localStorage.setItem(\"authUser\", JSON.stringify(response));\r\n    history.push(\"/mydashboard\");\r\n    // console.log(\"saga success 1\", response);\r\n    \r\n  } catch (error) {\r\n    // console.log(\"error error\", error);\r\n    toast.error(\"UserName or password is incorrect\");\r\n  \r\n    // yield put(apiError(error));\r\n  }\r\n}\r\n\r\nfunction* logoutUser({ payload: { history } }) {\r\n  try {\r\n    localStorage.removeItem(\"authUser\");\r\n\r\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\r\n      const response = yield call(fireBaseBackend.logout);\r\n      yield put(logoutUserSuccess(response));\r\n    }\r\n\r\n    history.push(\"/login\");\r\n    localStorage.setItem(\"Token\", \"\");\r\n  } catch (error) {\r\n    yield put(apiError(error));\r\n  }\r\n}\r\n\r\nexport function* watchUserLogin() {\r\n  yield takeEvery(CHECK_LOGIN, loginUser);\r\n}\r\n\r\nexport function* watchUserLogout() {\r\n  yield takeEvery(LOGOUT_USER, logoutUser);\r\n}\r\n\r\nfunction* loginSaga() {\r\n  yield all([fork(watchUserLogin), fork(watchUserLogout)]);\r\n}\r\n\r\nexport default loginSaga;\r\n"]},"metadata":{},"sourceType":"module"}