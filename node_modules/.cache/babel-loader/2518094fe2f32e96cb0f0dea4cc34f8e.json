{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useQueryClient, useQuery } from \"react-query\";\nimport { getLocations } from \"../../APIS\";\nimport { getreportLocationBrand, getreportLocations } from \"../../APIS/reports\";\nimport { getUserByProfession } from \"../../APIS/userProfle\";\nimport { useAllDataQuery } from \"../../hooks/query\";\n\nconst UseReports = () => {\n  _s();\n\n  const token = localStorage.getItem(\"Token\");\n  const [reportFinalValues, setreportFinalValues] = useState({});\n  const [reportFinalLabels, setReportFinalLabels] = useState({});\n  const reportTypeOptions = [{\n    label: \"Booking Report\",\n    value: 0\n  }, {\n    label: \"User Report\",\n    value: 1\n  }, {\n    label: \"User Ananlysis Report\",\n    value: 2\n  }, {\n    label: \"Cancelled Bookings\",\n    value: 3\n  }];\n  const timeSlotOptions = [{\n    label: \"08_AM-04_PM\",\n    value: 0\n  }, {\n    label: \"04_PM-12_AM\",\n    value: 1\n  }, {\n    label: \"12_AM-08_AM\",\n    value: 2\n  }];\n\n  const reportTypeHandeler = e => {\n    // console.log(\"reportTypeHandeler : \", e);\n    setreportFinalValues({ ...reportFinalValues,\n      reportType: e\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      reportType: e\n    });\n  };\n\n  const timeSlotHandler = e => {\n    const timeSlotLabel = e.map(element => {\n      return element.label;\n    });\n    const timeSlotValue = e.map(element => {\n      return element.value;\n    });\n    setreportFinalValues({ ...reportFinalValues,\n      timeSlot: timeSlotLabel\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      timeSlot: timeSlotLabel\n    });\n  };\n\n  const diomBrandHandler = e => {\n    const brandValue = e.map(element => {\n      return element.value;\n    });\n    const brandLabel = e.map(element => {\n      return element.label;\n    });\n    setreportFinalValues({ ...reportFinalValues,\n      diomBrand: brandValue\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      diomBrand: brandLabel\n    });\n  };\n\n  const diomLocationHandler = e => {\n    const locationValue = e.map(element => {\n      return element.value;\n    });\n    const locationLabel = e.map(element => {\n      return element.label;\n    });\n    setreportFinalValues({ ...reportFinalValues,\n      diomLocations: locationValue\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      diomLocations: locationLabel\n    });\n  };\n\n  const resourceTypeHandler = e => {\n    const resourceTypeValue = e.map(element => {\n      return element.value;\n    });\n    const resourceTypeLabel = e.map(element => {\n      return element.label;\n    });\n    setreportFinalValues({ ...reportFinalValues,\n      resourceTypes: resourceTypeValue\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      resourceTypes: resourceTypeLabel\n    });\n  };\n\n  const userTypeIndustryHandler = e => {\n    const userTypeIndustryValue = e.map(element => {\n      return element.value;\n    });\n    const userTypeIndustryLabel = e.map(element => {\n      return element.label;\n    });\n    setreportFinalValues({ ...reportFinalValues,\n      userTypeByIndustry: userTypeIndustryValue\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      userTypeByIndustry: userTypeIndustryLabel\n    });\n  };\n\n  const userTypePositionHandler = e => {\n    const userTypePositionValue = e.map(element => {\n      return element.value;\n    });\n    const userTypePositionLabel = e.map(element => {\n      return element.label;\n    });\n    setreportFinalValues({ ...reportFinalValues,\n      userTypeByPosition: userTypePositionValue\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      userTypeByPosition: userTypePositionLabel\n    });\n  };\n\n  const startdateFunc = e => {\n    const starttdate = e.target.value;\n    const startdate = new Date(starttdate).toISOString();\n    setreportFinalValues({ ...reportFinalValues,\n      startDate: startdate\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      startDate: startdate\n    });\n  };\n\n  const endDateFunc = e => {\n    const endddate = e.target.value;\n    const enddate = new Date(endddate).toISOString();\n    setreportFinalValues({ ...reportFinalValues,\n      endDate: enddate\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      endDate: enddate\n    });\n  }; // ***************\n\n\n  const {\n    data: locationsData,\n    isLoading: loadingLocations\n  } = useAllDataQuery([\"locationsreports\", \"visible\"], () => getreportLocations(token));\n  const locationData = locationsData; // *******************\n\n  const {\n    data: brandData\n  } = useAllDataQuery([\"reportlocationbrandData\", \"visible\"], () => getreportLocationBrand(token)); // *************\n\n  const userByProfession = useQuery([\"getuserbyprofession\"], () => getUserByProfession(token));\n  const userByProfessionData = userByProfession.data;\n  const userByProfessionDataa = userByProfessionData === null || userByProfessionData === void 0 ? void 0 : userByProfessionData.data; // console.log(\"userByProfessionData \", userByProfessionDataa);\n\n  const userbyprofessionindustry = userByProfessionDataa === null || userByProfessionDataa === void 0 ? void 0 : userByProfessionDataa.industries.map((element, index) => ({\n    value: element.id,\n    label: element.name\n  })); // console.log(\"userbyprofessionindustry \", userbyprofessionindustry);\n\n  const userbyprofessionPosition = userByProfessionDataa === null || userByProfessionDataa === void 0 ? void 0 : userByProfessionDataa.positions.map((element, index) => {\n    return {\n      //   ...element,\n      value: element.id,\n      label: element.name\n    };\n  }); // console.log(\"userbyprofessionPosition \", userbyprofessionPosition);\n  // *************\n\n  const reportExport = () => {\n    console.log(\"reportFinalIDs : \", reportFinalValues);\n    console.log(\"reportFinalLabels: \", reportFinalLabels);\n  };\n\n  return {\n    reportTypeOptions,\n    userByProfessionData,\n    userbyprofessionPosition,\n    userbyprofessionindustry,\n    timeSlotOptions,\n    locationData,\n    brandData,\n    reportTypeHandeler,\n    timeSlotHandler,\n    diomBrandHandler,\n    diomLocationHandler,\n    resourceTypeHandler,\n    userTypeIndustryHandler,\n    userTypePositionHandler,\n    startdateFunc,\n    endDateFunc,\n    reportExport\n  };\n};\n\n_s(UseReports, \"jwRZdSFQRm4dSGPDB2nXmf8DaOo=\", false, function () {\n  return [useAllDataQuery, useAllDataQuery, useQuery];\n});\n\n_c = UseReports;\nexport default UseReports;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseReports\");","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/1diom-frontend/diom-frontend/src/pages/Reports/useReports.js"],"names":["React","useState","useQueryClient","useQuery","getLocations","getreportLocationBrand","getreportLocations","getUserByProfession","useAllDataQuery","UseReports","token","localStorage","getItem","reportFinalValues","setreportFinalValues","reportFinalLabels","setReportFinalLabels","reportTypeOptions","label","value","timeSlotOptions","reportTypeHandeler","e","reportType","timeSlotHandler","timeSlotLabel","map","element","timeSlotValue","timeSlot","diomBrandHandler","brandValue","brandLabel","diomBrand","diomLocationHandler","locationValue","locationLabel","diomLocations","resourceTypeHandler","resourceTypeValue","resourceTypeLabel","resourceTypes","userTypeIndustryHandler","userTypeIndustryValue","userTypeIndustryLabel","userTypeByIndustry","userTypePositionHandler","userTypePositionValue","userTypePositionLabel","userTypeByPosition","startdateFunc","starttdate","target","startdate","Date","toISOString","startDate","endDateFunc","endddate","enddate","endDate","data","locationsData","isLoading","loadingLocations","locationData","brandData","userByProfession","userByProfessionData","userByProfessionDataa","userbyprofessionindustry","industries","index","id","name","userbyprofessionPosition","positions","reportExport","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useQueryClient, useQuery } from \"react-query\";\r\nimport { getLocations } from \"../../APIS\";\r\nimport { getreportLocationBrand, getreportLocations } from \"../../APIS/reports\";\r\nimport { getUserByProfession } from \"../../APIS/userProfle\";\r\nimport { useAllDataQuery } from \"../../hooks/query\";\r\n\r\nconst UseReports = () => {\r\n  const token = localStorage.getItem(\"Token\");\r\n  const [reportFinalValues, setreportFinalValues] = useState({});\r\n  const [reportFinalLabels, setReportFinalLabels] = useState({});\r\n  const reportTypeOptions = [\r\n    { label: \"Booking Report\", value: 0 },\r\n    { label: \"User Report\", value: 1 },\r\n    { label: \"User Ananlysis Report\", value: 2 },\r\n    { label: \"Cancelled Bookings\", value: 3 },\r\n  ];\r\n  const timeSlotOptions = [\r\n    { label: \"08_AM-04_PM\", value: 0 },\r\n    { label: \"04_PM-12_AM\", value: 1 },\r\n    { label: \"12_AM-08_AM\", value: 2 },\r\n  ];\r\n\r\n  const reportTypeHandeler = (e) => {\r\n    // console.log(\"reportTypeHandeler : \", e);\r\n    setreportFinalValues({ ...reportFinalValues, reportType: e });\r\n    setReportFinalLabels({ ...reportFinalLabels, reportType: e });\r\n  };\r\n  const timeSlotHandler = (e) => {\r\n    const timeSlotLabel = e.map((element) => {\r\n      return element.label;\r\n    });\r\n    const timeSlotValue = e.map((element) => {\r\n      return element.value;\r\n    });\r\n    setreportFinalValues({ ...reportFinalValues, timeSlot: timeSlotLabel });\r\n    setReportFinalLabels({ ...reportFinalLabels, timeSlot: timeSlotLabel });\r\n  };\r\n  const diomBrandHandler = (e) => {\r\n    const brandValue = e.map((element) => {\r\n      return element.value;\r\n    });\r\n    const brandLabel = e.map((element) => {\r\n      return element.label;\r\n    });\r\n\r\n    setreportFinalValues({ ...reportFinalValues, diomBrand: brandValue });\r\n    setReportFinalLabels({ ...reportFinalLabels, diomBrand: brandLabel });\r\n  };\r\n  const diomLocationHandler = (e) => {\r\n    const locationValue = e.map((element) => {\r\n      return element.value;\r\n    });\r\n    const locationLabel = e.map((element) => {\r\n      return element.label;\r\n    });\r\n    setreportFinalValues({\r\n      ...reportFinalValues,\r\n      diomLocations: locationValue,\r\n    });\r\n    setReportFinalLabels({\r\n      ...reportFinalLabels,\r\n      diomLocations: locationLabel,\r\n    });\r\n  };\r\n  const resourceTypeHandler = (e) => {\r\n    const resourceTypeValue = e.map((element) => {\r\n      return element.value;\r\n    });\r\n    const resourceTypeLabel = e.map((element) => {\r\n      return element.label;\r\n    });\r\n    setreportFinalValues({\r\n      ...reportFinalValues,\r\n      resourceTypes: resourceTypeValue,\r\n    });\r\n    setReportFinalLabels({\r\n      ...reportFinalLabels,\r\n      resourceTypes: resourceTypeLabel,\r\n    });\r\n  };\r\n  const userTypeIndustryHandler = (e) => {\r\n    const userTypeIndustryValue = e.map((element) => {\r\n      return element.value;\r\n    });\r\n    const userTypeIndustryLabel = e.map((element) => {\r\n      return element.label;\r\n    });\r\n    setreportFinalValues({\r\n      ...reportFinalValues,\r\n      userTypeByIndustry: userTypeIndustryValue,\r\n    });\r\n    setReportFinalLabels({\r\n      ...reportFinalLabels,\r\n      userTypeByIndustry: userTypeIndustryLabel,\r\n    });\r\n  };\r\n  const userTypePositionHandler = (e) => {\r\n    const userTypePositionValue = e.map((element) => {\r\n      return element.value;\r\n    });\r\n    const userTypePositionLabel = e.map((element) => {\r\n      return element.label;\r\n    });\r\n\r\n    setreportFinalValues({\r\n      ...reportFinalValues,\r\n      userTypeByPosition: userTypePositionValue,\r\n    });\r\n    setReportFinalLabels({\r\n      ...reportFinalLabels,\r\n      userTypeByPosition: userTypePositionLabel,\r\n    });\r\n  };\r\n  const startdateFunc = (e) => {\r\n    const starttdate = e.target.value;\r\n    const startdate = new Date(starttdate).toISOString();\r\n    setreportFinalValues({ ...reportFinalValues, startDate: startdate });\r\n    setReportFinalLabels({ ...reportFinalLabels, startDate: startdate });\r\n  };\r\n  const endDateFunc = (e) => {\r\n    const endddate = e.target.value;\r\n    const enddate = new Date(endddate).toISOString();\r\n    setreportFinalValues({ ...reportFinalValues, endDate: enddate });\r\n    setReportFinalLabels({ ...reportFinalLabels, endDate: enddate });\r\n  };\r\n\r\n  // ***************\r\n  const { data: locationsData, isLoading: loadingLocations } = useAllDataQuery(\r\n    [\"locationsreports\", \"visible\"],\r\n    () => getreportLocations(token)\r\n  );\r\n  const locationData = locationsData;\r\n\r\n  // *******************\r\n  const { data: brandData } = useAllDataQuery(\r\n    [\"reportlocationbrandData\", \"visible\"],\r\n    () => getreportLocationBrand(token)\r\n  );\r\n\r\n  // *************\r\n  const userByProfession = useQuery([\"getuserbyprofession\"], () =>\r\n    getUserByProfession(token)\r\n  );\r\n  const userByProfessionData = userByProfession.data;\r\n  const userByProfessionDataa = userByProfessionData?.data;\r\n  // console.log(\"userByProfessionData \", userByProfessionDataa);\r\n  const userbyprofessionindustry = userByProfessionDataa?.industries.map(\r\n    (element, index) => ({\r\n      value: element.id,\r\n      label: element.name,\r\n    })\r\n  );\r\n\r\n  // console.log(\"userbyprofessionindustry \", userbyprofessionindustry);\r\n  const userbyprofessionPosition = userByProfessionDataa?.positions.map(\r\n    (element, index) => {\r\n      return {\r\n        //   ...element,\r\n\r\n        value: element.id,\r\n        label: element.name,\r\n      };\r\n    }\r\n  );\r\n  // console.log(\"userbyprofessionPosition \", userbyprofessionPosition);\r\n  // *************\r\n\r\n  const reportExport = () => {\r\n    console.log(\"reportFinalIDs : \", reportFinalValues);\r\n    console.log(\"reportFinalLabels: \", reportFinalLabels);\r\n  };\r\n\r\n  return {\r\n    reportTypeOptions,\r\n    userByProfessionData,\r\n    userbyprofessionPosition,\r\n    userbyprofessionindustry,\r\n    timeSlotOptions,\r\n    locationData,\r\n    brandData,\r\n    reportTypeHandeler,\r\n    timeSlotHandler,\r\n    diomBrandHandler,\r\n    diomLocationHandler,\r\n    resourceTypeHandler,\r\n    userTypeIndustryHandler,\r\n    userTypePositionHandler,\r\n    startdateFunc,\r\n    endDateFunc,\r\n    reportExport,\r\n  };\r\n};\r\n\r\nexport default UseReports;\r\n"]},"metadata":{},"sourceType":"module"}