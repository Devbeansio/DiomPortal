{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"react-query\"; // import { getLocations } from \"../../APIS\";\n\nimport { useSnackbar } from \"notistack\";\nimport moment from \"moment\";\nimport { getNewreports, getPastreports, getreportLocationBrand, getreportLocations, getResourcetypereports } from \"../../APIS/reports\";\nimport { getUserByProfession } from \"../../APIS/userProfle\";\nimport { useAllDataQuery, usePaginatedQuery } from \"../../hooks/query\";\nimport { DIOM_BASED_URLS } from \"../../config/url\";\nimport { toast } from \"react-toastify\";\n\nconst UseReports = () => {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const token = localStorage.getItem(\"Token\");\n  const providerRef = React.useRef(); // const queryClient = new QueryClient();\n\n  const [reportFinalValues, setreportFinalValues] = useState([]);\n  const [reportFinalLabels, setReportFinalLabels] = useState([]);\n  const [categoryDropDown, setCategoryDropDown] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [locationApplyFilter, setLocationApplyFilter] = useState(false);\n  const [resourcetypeApplyFilter, setResourcetypeApplyFilter] = useState(false);\n  const [reportTypeValues, setReportTypeValues] = useState([]);\n  const [userDropDownVisibility, setUserDropDownVisibility] = useState(true);\n  const reportTypeOptions = [{\n    label: \"Booking Report\",\n    value: \"BOOKING_REPORTS\"\n  }, {\n    label: \"User Report\",\n    value: \"USER_REPORTS\"\n  }, {\n    label: \"User Ananlysis Report\",\n    value: \"USER_ANALYSIS_REPORTS\"\n  }, {\n    label: \"Cancelled Bookings\",\n    value: \"CANCELLED_BOOKINGS_REPORTS\"\n  }];\n  const timeSlotOptions = [{\n    label: \"08 AM - 04 PM\",\n    value: \"08_AM-04_PM\"\n  }, {\n    label: \"04 PM - 12 AM\",\n    value: \"04_PM-12_AM\"\n  }, {\n    label: \"12 AM - 08 AM\",\n    value: \"12_AM-08_AM\"\n  }];\n\n  const reportTypeHandeler = e => {\n    setReportTypeValues({\n      reportType: e.value\n    });\n    setReportFinalLabels({\n      reportLabel: e.label\n    });\n\n    if (e.label === \"Booking Report\" || e.label === \"Cancelled Bookings\") {\n      setUserDropDownVisibility(true);\n    } else if (e.label === \"User Ananlysis Report\" || e.label === \"User Report\") {\n      setUserDropDownVisibility(false);\n    }\n  };\n\n  const timeSlotHandler = e => {\n    const timeSlotLabel = e.map(element => {\n      return element.value;\n    }); // const timeSlotValue = e.map((element) => {\n    //   return element.value;\n    // });\n\n    setreportFinalValues({ ...reportFinalValues,\n      timeSlot: timeSlotLabel\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      timeSlot: timeSlotLabel\n    });\n  };\n\n  const resourceTypeHandler = e => {\n    const resourceTypeValue = e.map(element => {\n      return element.value;\n    });\n    const resourceTypeLabel = e.map(element => {\n      return element.label;\n    });\n    setreportFinalValues({ ...reportFinalValues,\n      resourceTypeId: resourceTypeValue\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      resourceTypeName: resourceTypeLabel\n    });\n  };\n\n  const userTypeIndustryHandler = e => {\n    const userTypeIndustryValue = e.map(element => {\n      return element.value;\n    });\n    const userTypeIndustryLabel = e.map(element => {\n      return element.label;\n    });\n    setreportFinalValues({ ...reportFinalValues,\n      industryId: userTypeIndustryValue\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      industryName: userTypeIndustryLabel\n    });\n  };\n\n  const diomBrandHandler = e => {\n    const brandValue = e.map(element => {\n      return element.value;\n    });\n    const brandLabel = e.map(element => {\n      return element.label;\n    });\n    setreportFinalValues({ ...reportFinalValues,\n      locationCategoriesName: brandValue\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      locationCategoriesId: brandLabel\n    });\n    setLocationApplyFilter(true);\n  };\n\n  const diomLocationHandler = e => {\n    setResourcetypeApplyFilter(true);\n    const locationValue = e.map(element => {\n      return element.value;\n    });\n    const locationLabel = e.map(element => {\n      return element.label;\n    });\n    setreportFinalValues({ ...reportFinalValues,\n      businessId: locationValue\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      businessName: locationLabel\n    });\n  };\n\n  const userTypePositionHandler = e => {\n    const userTypePositionValue = e.map(element => {\n      return element.value;\n    });\n    const userTypePositionLabel = e.map(element => {\n      return element.label;\n    });\n    setreportFinalValues({ ...reportFinalValues,\n      positionId: userTypePositionValue\n    });\n    setReportFinalLabels({ ...reportFinalLabels,\n      positionName: userTypePositionLabel\n    });\n  };\n\n  const startdateFunc = e => {\n    const starttdate = e.target.value;\n    const d = new Date();\n    let start = moment(starttdate).isAfter(d.setMonth(d.getMonth() - 3));\n    let end = moment(e.target.value).isBefore(moment().add(-1, \"days\"));\n\n    if (start && end) {\n      const startdate = new Date(starttdate).toISOString();\n      setreportFinalValues({ ...reportFinalValues,\n        startDate: startdate\n      });\n      setReportFinalLabels({ ...reportFinalLabels,\n        startDate: startdate\n      });\n    } else {\n      // alert(\"please select valid date\");\n      const message = \"please select valid date\";\n      enqueueSnackbar(message, {\n        variant: \"failed\"\n      });\n    }\n  };\n\n  const endDateFunc = e => {\n    const endddate = e.target.value;\n    const d = new Date();\n    let start = moment(endddate).isAfter(d.setMonth(d.getMonth() - 3));\n    let end = moment(e.target.value).isBefore(moment().add(-1, \"days\"));\n\n    if (start && end) {\n      const enddate = new Date(endddate).toISOString();\n      setreportFinalValues({ ...reportFinalValues,\n        endDate: enddate\n      });\n      setReportFinalLabels({ ...reportFinalLabels,\n        endDate: enddate\n      });\n    } else {\n      const message = \"please select valid date\";\n      enqueueSnackbar(message, {\n        variant: \"failed\"\n      });\n    }\n  }; // ***************\n  // const { data: locationsData, isLoading: loadingLocations } = useAllDataQuery(\n\n\n  const {\n    data: locationsData,\n    isLoading: loadingLocations\n  } = useQuery([\"locationsreports1\", reportFinalValues === null || reportFinalValues === void 0 ? void 0 : reportFinalValues.locationCategoriesName], () => getreportLocations(token, locationApplyFilter, reportFinalValues));\n  const locationData = locationsData; // *******************\n\n  const {\n    data: brandData\n  } = useAllDataQuery([\"reportlocationbrandData\", \"visible\"], () => getreportLocationBrand(token)); // *************\n\n  const resourceTypedropdownData = useQuery([\"resourceTypedropdownreports\", reportFinalValues === null || reportFinalValues === void 0 ? void 0 : reportFinalValues.businessId], () => getResourcetypereports(token, resourcetypeApplyFilter, reportFinalValues));\n  const resourceTypedropdownDailedData = resourceTypedropdownData.data; // *************\n\n  const Resourcetypesdropdown = async () => {\n    const matadata = resourceTypedropdownDailedData.data.map(element => {\n      return {\n        label: element.Name,\n        value: element.id,\n        UniqueId: element.UniqueId,\n        resourceTypeCategoryId: element.resourceTypeCategoryId // visibility: element.visibility,\n\n      };\n    });\n    setCategoryDropDown(matadata);\n  }; // **************\n\n\n  const userByProfession = useQuery([\"getuserbyprofession\"], () => getUserByProfession(token));\n  const userByProfessionData = userByProfession.data;\n  const userByProfessionDataa = userByProfessionData === null || userByProfessionData === void 0 ? void 0 : userByProfessionData.data;\n  const userbyprofessionindustry = userByProfessionDataa === null || userByProfessionDataa === void 0 ? void 0 : userByProfessionDataa.industries.map((element, index) => ({\n    value: element.id,\n    label: element.name\n  }));\n  const userbyprofessionPosition = userByProfessionDataa === null || userByProfessionDataa === void 0 ? void 0 : userByProfessionDataa.positions.map((element, index) => {\n    return {\n      //   ...element,\n      value: element.id,\n      label: element.name\n    };\n  }); // *************\n\n  const reportExport = () => {\n    const message = 'In Process. It will be available shortly in the \" Report section\"'; // console.log({\n    //   fromTime: reportFinalLabels.startDate,\n    //   toTime: reportFinalLabels.endDate,\n    //   reportLebels  : reportFinalLabels,\n    //   reportValues : reportFinalValues,\n    //   reportType: reportTypeValues.reportType,\n    // });\n\n    fetch(`${DIOM_BASED_URLS}/reports`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, text/plain\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n        Authorization: \"Bearer \" + token\n      },\n      body: JSON.stringify({\n        fromTime: reportFinalLabels.startDate,\n        toTime: reportFinalLabels.endDate,\n        reportValues: reportFinalValues,\n        reportLebels: reportFinalLabels,\n        reportType: reportTypeValues.reportType,\n        reportName: reportFinalLabels.reportLabel\n      })\n    }).then(result3 => {\n      if (result3.status === \"ok\") {\n        enqueueSnackbar(message, {\n          variant: \"success\"\n        });\n      }\n    }).catch(error => toast.error(\" Something went wrong\"));\n  }; // *************\n\n\n  const {\n    data: {\n      data: pastReportsDataa,\n      hasNextPage,\n      hasPreviousPage,\n      total\n    },\n    isLoading\n  } = usePaginatedQuery([\"pastReprtssData\",, currentPage], () => getPastreports(token)); // const pastReportsDataa = pastReportsData.data;\n  // console.log(\"past reports : \",pastReportsData)\n  // *************\n  // *************\n\n  const newReportsData = useQuery([\"newReportssData\"], () => getNewreports(token));\n  const newReportsDataa = newReportsData.data; // console.log(\"New reports : \",newReportsDataa)\n  // *************\n\n  useEffect( // FOR PRE-FETCHING NEXT PAGE\n  () => {\n    getreportLocations(token, locationApplyFilter, reportFinalValues);\n  }, [reportFinalValues, reportFinalValues]);\n  useEffect( // FOR PRE-FETCHING NEXT PAGE\n  async () => {\n    resourceTypedropdownDailedData && (await Resourcetypesdropdown());\n  }, [resourceTypedropdownDailedData]);\n  return {\n    pastReportsDataa,\n    newReportsDataa,\n    reportTypeOptions,\n    userByProfessionData,\n    userbyprofessionPosition,\n    userbyprofessionindustry,\n    timeSlotOptions,\n    locationData,\n    brandData,\n    reportTypeHandeler,\n    userDropDownVisibility,\n    timeSlotHandler,\n    diomBrandHandler,\n    diomLocationHandler,\n    resourceTypeHandler,\n    userTypeIndustryHandler,\n    userTypePositionHandler,\n    startdateFunc,\n    endDateFunc,\n    reportExport,\n    categoryDropDown,\n    isLoading\n  };\n};\n\n_s(UseReports, \"x/IZXN/YE1tlNlsolWefmCT5IqM=\", false, function () {\n  return [useSnackbar, useQuery, useAllDataQuery, useQuery, useQuery, usePaginatedQuery, useQuery];\n});\n\n_c = UseReports;\nexport default UseReports;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseReports\");","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/diom(3)/src/pages/Reports/useReports.js"],"names":["React","useState","useEffect","useQuery","useSnackbar","moment","getNewreports","getPastreports","getreportLocationBrand","getreportLocations","getResourcetypereports","getUserByProfession","useAllDataQuery","usePaginatedQuery","DIOM_BASED_URLS","toast","UseReports","enqueueSnackbar","token","localStorage","getItem","providerRef","useRef","reportFinalValues","setreportFinalValues","reportFinalLabels","setReportFinalLabels","categoryDropDown","setCategoryDropDown","currentPage","setCurrentPage","locationApplyFilter","setLocationApplyFilter","resourcetypeApplyFilter","setResourcetypeApplyFilter","reportTypeValues","setReportTypeValues","userDropDownVisibility","setUserDropDownVisibility","reportTypeOptions","label","value","timeSlotOptions","reportTypeHandeler","e","reportType","reportLabel","timeSlotHandler","timeSlotLabel","map","element","timeSlot","resourceTypeHandler","resourceTypeValue","resourceTypeLabel","resourceTypeId","resourceTypeName","userTypeIndustryHandler","userTypeIndustryValue","userTypeIndustryLabel","industryId","industryName","diomBrandHandler","brandValue","brandLabel","locationCategoriesName","locationCategoriesId","diomLocationHandler","locationValue","locationLabel","businessId","businessName","userTypePositionHandler","userTypePositionValue","userTypePositionLabel","positionId","positionName","startdateFunc","starttdate","target","d","Date","start","isAfter","setMonth","getMonth","end","isBefore","add","startdate","toISOString","startDate","message","variant","endDateFunc","endddate","enddate","endDate","data","locationsData","isLoading","loadingLocations","locationData","brandData","resourceTypedropdownData","resourceTypedropdownDailedData","Resourcetypesdropdown","matadata","Name","id","UniqueId","resourceTypeCategoryId","userByProfession","userByProfessionData","userByProfessionDataa","userbyprofessionindustry","industries","index","name","userbyprofessionPosition","positions","reportExport","fetch","method","headers","Accept","Authorization","body","JSON","stringify","fromTime","toTime","reportValues","reportLebels","reportName","then","result3","status","catch","error","pastReportsDataa","hasNextPage","hasPreviousPage","total","newReportsData","newReportsDataa"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\n// import { getLocations } from \"../../APIS\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport moment from \"moment\";\r\nimport {\r\n  getNewreports,\r\n  getPastreports,\r\n  getreportLocationBrand,\r\n  getreportLocations,\r\n  getResourcetypereports,\r\n} from \"../../APIS/reports\";\r\nimport { getUserByProfession } from \"../../APIS/userProfle\";\r\nimport { useAllDataQuery, usePaginatedQuery } from \"../../hooks/query\";\r\nimport { DIOM_BASED_URLS } from \"../../config/url\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst UseReports = () => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const token = localStorage.getItem(\"Token\");\r\n  const providerRef = React.useRef();\r\n\r\n  // const queryClient = new QueryClient();\r\n  const [reportFinalValues, setreportFinalValues] = useState([]);\r\n  const [reportFinalLabels, setReportFinalLabels] = useState([]);\r\n  const [categoryDropDown, setCategoryDropDown] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [locationApplyFilter, setLocationApplyFilter] = useState(false);\r\n  const [resourcetypeApplyFilter, setResourcetypeApplyFilter] = useState(false);\r\n  const [reportTypeValues, setReportTypeValues] = useState([]);\r\n  const [userDropDownVisibility, setUserDropDownVisibility] = useState(true);\r\n  const reportTypeOptions = [\r\n    { label: \"Booking Report\", value: \"BOOKING_REPORTS\" },\r\n    { label: \"User Report\", value: \"USER_REPORTS\" },\r\n    { label: \"User Ananlysis Report\", value: \"USER_ANALYSIS_REPORTS\" },\r\n    { label: \"Cancelled Bookings\", value: \"CANCELLED_BOOKINGS_REPORTS\" },\r\n  ];\r\n  const timeSlotOptions = [\r\n    { label: \"08 AM - 04 PM\", value: \"08_AM-04_PM\" },\r\n    { label: \"04 PM - 12 AM\", value: \"04_PM-12_AM\" },\r\n    { label: \"12 AM - 08 AM\", value: \"12_AM-08_AM\" },\r\n  ];\r\n\r\n  const reportTypeHandeler = (e) => {\r\n   \r\n\r\n    setReportTypeValues({ reportType: e.value });\r\n    setReportFinalLabels({  reportLabel: e.label });\r\n\r\n    if (e.label === \"Booking Report\" || e.label === \"Cancelled Bookings\") {\r\n      setUserDropDownVisibility(true);\r\n    } else if (\r\n      e.label === \"User Ananlysis Report\" ||\r\n      e.label === \"User Report\"\r\n    ) {\r\n      setUserDropDownVisibility(false);\r\n    }\r\n  };\r\n  const timeSlotHandler = (e) => {\r\n    const timeSlotLabel = e.map((element) => {\r\n      return element.value;\r\n    });\r\n    // const timeSlotValue = e.map((element) => {\r\n    //   return element.value;\r\n    // });\r\n    setreportFinalValues({ ...reportFinalValues, timeSlot: timeSlotLabel });\r\n    setReportFinalLabels({ ...reportFinalLabels, timeSlot: timeSlotLabel });\r\n  };\r\n\r\n  const resourceTypeHandler = (e) => {\r\n    const resourceTypeValue = e.map((element) => {\r\n      return element.value;\r\n    });\r\n    const resourceTypeLabel = e.map((element) => {\r\n      return element.label;\r\n    });\r\n    setreportFinalValues({\r\n      ...reportFinalValues,\r\n      resourceTypeId: resourceTypeValue,\r\n    });\r\n    setReportFinalLabels({\r\n      ...reportFinalLabels,\r\n      resourceTypeName: resourceTypeLabel,\r\n    });\r\n  };\r\n  const userTypeIndustryHandler = (e) => {\r\n    const userTypeIndustryValue = e.map((element) => {\r\n      return element.value;\r\n    });\r\n    const userTypeIndustryLabel = e.map((element) => {\r\n      return element.label;\r\n    });\r\n    setreportFinalValues({\r\n      ...reportFinalValues,\r\n      industryId: userTypeIndustryValue,\r\n    });\r\n    setReportFinalLabels({\r\n      ...reportFinalLabels,\r\n      industryName: userTypeIndustryLabel,\r\n    });\r\n  };\r\n\r\n  const diomBrandHandler = (e) => {\r\n    const brandValue = e.map((element) => {\r\n      return element.value;\r\n    });\r\n    const brandLabel = e.map((element) => {\r\n      return element.label;\r\n    });\r\n   \r\n    setreportFinalValues({\r\n      ...reportFinalValues,\r\n      locationCategoriesName: brandValue,\r\n    });\r\n    setReportFinalLabels({\r\n      ...reportFinalLabels,\r\n      locationCategoriesId: brandLabel,\r\n    });\r\n    setLocationApplyFilter(true);\r\n  };\r\n\r\n  const diomLocationHandler = (e) => {\r\n    setResourcetypeApplyFilter(true);\r\n    const locationValue = e.map((element) => {\r\n      return element.value;\r\n    });\r\n    const locationLabel = e.map((element) => {\r\n      return element.label;\r\n    });\r\n    setreportFinalValues({\r\n      ...reportFinalValues,\r\n      businessId: locationValue,\r\n    });\r\n    setReportFinalLabels({\r\n      ...reportFinalLabels,\r\n      businessName: locationLabel,\r\n    });\r\n  };\r\n\r\n  const userTypePositionHandler = (e) => {\r\n    const userTypePositionValue = e.map((element) => {\r\n      return element.value;\r\n    });\r\n    const userTypePositionLabel = e.map((element) => {\r\n      return element.label;\r\n    });\r\n    setreportFinalValues({\r\n      ...reportFinalValues,\r\n      positionId: userTypePositionValue,\r\n    });\r\n    setReportFinalLabels({\r\n      ...reportFinalLabels,\r\n      positionName: userTypePositionLabel,\r\n    });\r\n  };\r\n  const startdateFunc = (e) => {\r\n    const starttdate = e.target.value;\r\n    const d = new Date();\r\n    let start = moment(starttdate).isAfter(d.setMonth(d.getMonth() - 3));\r\n    let end = moment(e.target.value).isBefore(moment().add(-1, \"days\"));\r\n    if (start && end) {\r\n      const startdate = new Date(starttdate).toISOString();\r\n      setreportFinalValues({ ...reportFinalValues, startDate: startdate });\r\n      setReportFinalLabels({ ...reportFinalLabels, startDate: startdate });\r\n    } else {\r\n      // alert(\"please select valid date\");\r\n      const message = \"please select valid date\";\r\n      enqueueSnackbar(message, {\r\n        variant: \"failed\",\r\n      });\r\n    }\r\n  };\r\n  const endDateFunc = (e) => {\r\n    const endddate = e.target.value;\r\n    const d = new Date();\r\n    let start = moment(endddate).isAfter(d.setMonth(d.getMonth() - 3));\r\n    let end = moment(e.target.value).isBefore(moment().add(-1, \"days\"));\r\n    if (start && end) {\r\n      const enddate = new Date(endddate).toISOString();\r\n      setreportFinalValues({ ...reportFinalValues, endDate: enddate });\r\n      setReportFinalLabels({ ...reportFinalLabels, endDate: enddate });\r\n    } else {\r\n     \r\n      const message = \"please select valid date\";\r\n      enqueueSnackbar(message, {\r\n        variant: \"failed\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // ***************\r\n  // const { data: locationsData, isLoading: loadingLocations } = useAllDataQuery(\r\n  const { data: locationsData, isLoading: loadingLocations } = useQuery(\r\n    [\"locationsreports1\", reportFinalValues?.locationCategoriesName],\r\n    () => getreportLocations(token, locationApplyFilter, reportFinalValues)\r\n  );\r\n  const locationData = locationsData;\r\n  // *******************\r\n  const { data: brandData } = useAllDataQuery(\r\n    [\"reportlocationbrandData\", \"visible\"],\r\n    () => getreportLocationBrand(token)\r\n  );\r\n\r\n  // *************\r\n\r\n  const resourceTypedropdownData = useQuery(\r\n    [\"resourceTypedropdownreports\", reportFinalValues?.businessId],\r\n    () =>\r\n      getResourcetypereports(token, resourcetypeApplyFilter, reportFinalValues)\r\n  );\r\n\r\n  const resourceTypedropdownDailedData = resourceTypedropdownData.data;\r\n\r\n  // *************\r\n  const Resourcetypesdropdown = async () => {\r\n    const matadata = resourceTypedropdownDailedData.data.map((element) => {\r\n      return {\r\n        label: element.Name,\r\n        value: element.id,\r\n        UniqueId: element.UniqueId,\r\n        resourceTypeCategoryId: element.resourceTypeCategoryId,\r\n        // visibility: element.visibility,\r\n      };\r\n    });\r\n\r\n    setCategoryDropDown(matadata);\r\n  };\r\n\r\n  // **************\r\n  const userByProfession = useQuery([\"getuserbyprofession\"], () =>\r\n    getUserByProfession(token)\r\n  );\r\n  const userByProfessionData = userByProfession.data;\r\n  const userByProfessionDataa = userByProfessionData?.data;\r\n  const userbyprofessionindustry = userByProfessionDataa?.industries.map(\r\n    (element, index) => ({\r\n      value: element.id,\r\n      label: element.name,\r\n    })\r\n  );\r\n\r\n  const userbyprofessionPosition = userByProfessionDataa?.positions.map(\r\n    (element, index) => {\r\n      return {\r\n        //   ...element,\r\n\r\n        value: element.id,\r\n        label: element.name,\r\n      };\r\n    }\r\n  );\r\n  // *************\r\n\r\n  const reportExport = () => {\r\n    const message =\r\n      'In Process. It will be available shortly in the \" Report section\"';\r\n\r\n    // console.log({\r\n    //   fromTime: reportFinalLabels.startDate,\r\n    //   toTime: reportFinalLabels.endDate,\r\n    //   reportLebels  : reportFinalLabels,\r\n    //   reportValues : reportFinalValues,\r\n    //   reportType: reportTypeValues.reportType,\r\n    // });\r\n   \r\n    fetch(`${DIOM_BASED_URLS}/reports`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body: JSON.stringify({\r\n        fromTime: reportFinalLabels.startDate,\r\n        toTime: reportFinalLabels.endDate,\r\n        reportValues:  reportFinalValues,\r\n        reportLebels: reportFinalLabels,\r\n        reportType: reportTypeValues.reportType,\r\n        reportName: reportFinalLabels.reportLabel\r\n      }),\r\n    })\r\n      .then((result3) => {\r\n        if (result3.status === \"ok\") {\r\n          enqueueSnackbar(message, {\r\n            variant: \"success\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => \r\n      toast.error(\" Something went wrong\"));\r\n  };\r\n\r\n\r\n\r\n// *************\r\n\r\nconst {\r\n  data: { data: pastReportsDataa, hasNextPage, hasPreviousPage, total },\r\n  isLoading,\r\n} = usePaginatedQuery(\r\n  [\"pastReprtssData\",, currentPage,],\r\n  () =>\r\n  getPastreports(token)\r\n);\r\n\r\n// const pastReportsDataa = pastReportsData.data;\r\n// console.log(\"past reports : \",pastReportsData)\r\n\r\n// *************\r\n// *************\r\n\r\nconst newReportsData = useQuery(\r\n  [\"newReportssData\"],\r\n  () =>\r\n  getNewreports(token)\r\n);\r\n\r\nconst newReportsDataa = newReportsData.data;\r\n// console.log(\"New reports : \",newReportsDataa)\r\n\r\n// *************\r\n\r\n\r\n\r\n  useEffect(\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n    () => {\r\n      getreportLocations(token, locationApplyFilter, reportFinalValues);\r\n    },\r\n    [reportFinalValues, reportFinalValues]\r\n  );\r\n  useEffect(\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n    async () => {\r\n      resourceTypedropdownDailedData && (await Resourcetypesdropdown());\r\n    },\r\n    [resourceTypedropdownDailedData]\r\n  );\r\n\r\n  return {\r\n    pastReportsDataa,\r\n    newReportsDataa,\r\n    reportTypeOptions,\r\n    userByProfessionData,\r\n    userbyprofessionPosition,\r\n    userbyprofessionindustry,\r\n    timeSlotOptions,\r\n    locationData,\r\n    brandData,\r\n    reportTypeHandeler,\r\n    userDropDownVisibility,\r\n    timeSlotHandler,\r\n    diomBrandHandler,\r\n    diomLocationHandler,\r\n    resourceTypeHandler,\r\n    userTypeIndustryHandler,\r\n    userTypePositionHandler,\r\n    startdateFunc,\r\n    endDateFunc,\r\n    reportExport,\r\n    categoryDropDown,\r\n    isLoading,\r\n  };\r\n};\r\n\r\nexport default UseReports;\r\n"]},"metadata":{},"sourceType":"module"}