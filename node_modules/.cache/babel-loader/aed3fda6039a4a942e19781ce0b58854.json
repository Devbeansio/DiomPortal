{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { useQuery } from \"react-query\";\nimport { getBrandCard, getFinanceCard, getGenaralCard, getLocationCard, getUsersCard } from \"../../APIS/dashboard\";\nimport { on } from \"process\";\n\nconst UseDashboard = () => {\n  _s();\n\n  const today = moment().format(\"YYYY-MM \");\n  const token = localStorage.getItem(\"Token\");\n  const t_ID = \"1\";\n  const [activeTabJustify, setActiveTabJustify] = useState(\"1\");\n  const [maxDataAge, setMaxDataAge] = useState({\n    createdAt: {\n      $gte: new Date(moment(today).startOf(\"month\").toISOString()),\n      $lte: new Date(moment().toISOString())\n    }\n  });\n  const [loaded] = useState(false);\n\n  const Loader = require(\"react-loader\");\n\n  const toggleCustomJustified = tab => {\n    if (activeTabJustify === tab) {\n      setActiveTabJustify(tab);\n    }\n\n    if (activeTabJustify !== tab) {\n      setActiveTabJustify(tab);\n    }\n  }; // *******Finance******\n\n\n  const dashboardFinanceCardddata = useQuery([\"FinanceCards\"], () => getFinanceCard(token));\n  const financeCardddata = dashboardFinanceCardddata.data; // *******General******\n\n  const dashboardGeneralCardddata = useQuery([\"GeneralCards\"], () => getGenaralCard(token));\n  const generalCardddata = dashboardGeneralCardddata.data; // *******Location******\n\n  const dashboardLocationCardddata = useQuery([\"LocationCards\"], () => getLocationCard(token));\n  const locationCardddata = dashboardLocationCardddata.data; // *******Brand******\n\n  const dashboardBrandCardddata = useQuery([\"BrandCards\"], () => getBrandCard(token));\n  const brandCardddata = dashboardBrandCardddata.data; // *******Brand******\n\n  const dashboardUsersCardddata = useQuery([\"UsersCards\"], () => getUsersCard(token));\n  const usersCardddata = dashboardUsersCardddata.data;\n  return {\n    loaded,\n    activeTabJustify,\n    setActiveTabJustify,\n    t_ID,\n    toggleCustomJustified,\n    Loader,\n    maxDataAge,\n    setMaxDataAge,\n    financeCardddata,\n    generalCardddata,\n    locationCardddata,\n    brandCardddata,\n    usersCardddata\n  };\n};\n\n_s(UseDashboard, \"ouObfDbRQch2uONwqYCtPKkciZc=\", false, function () {\n  return [useQuery, useQuery, useQuery, useQuery, useQuery];\n});\n\n_c = UseDashboard;\nexport default UseDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseDashboard\");","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/1diom-frontend/diom-frontend/src/pages/MyDashboard/useDashboard.js"],"names":["React","useState","moment","useQuery","getBrandCard","getFinanceCard","getGenaralCard","getLocationCard","getUsersCard","on","UseDashboard","today","format","token","localStorage","getItem","t_ID","activeTabJustify","setActiveTabJustify","maxDataAge","setMaxDataAge","createdAt","$gte","Date","startOf","toISOString","$lte","loaded","Loader","require","toggleCustomJustified","tab","dashboardFinanceCardddata","financeCardddata","data","dashboardGeneralCardddata","generalCardddata","dashboardLocationCardddata","locationCardddata","dashboardBrandCardddata","brandCardddata","dashboardUsersCardddata","usersCardddata"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,YALF,QAMO,sBANP;AAOA,SAASC,EAAT,QAAmB,SAAnB;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,KAAK,GAAGT,MAAM,GAAGU,MAAT,CAAgB,UAAhB,CAAd;AACA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,IAAI,GAAG,GAAb;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CjB,QAAQ,CAAC,GAAD,CAAxD;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC;AAC3CoB,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASrB,MAAM,CAACS,KAAD,CAAN,CAAca,OAAd,CAAsB,OAAtB,EAA+BC,WAA/B,EAAT,CADG;AAETC,MAAAA,IAAI,EAAE,IAAIH,IAAJ,CAASrB,MAAM,GAAGuB,WAAT,EAAT;AAFG;AADgC,GAAD,CAA5C;AAOA,QAAM,CAACE,MAAD,IAAW1B,QAAQ,CAAC,KAAD,CAAzB;;AACA,QAAM2B,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AAEA,QAAMC,qBAAqB,GAAIC,GAAD,IAAS;AACrC,QAAId,gBAAgB,KAAKc,GAAzB,EAA8B;AAC5Bb,MAAAA,mBAAmB,CAACa,GAAD,CAAnB;AACD;;AAED,QAAId,gBAAgB,KAAKc,GAAzB,EAA8B;AAC5Bb,MAAAA,mBAAmB,CAACa,GAAD,CAAnB;AACD;AACF,GARD,CAfyB,CAyBzB;;;AACA,QAAMC,yBAAyB,GAAG7B,QAAQ,CAAC,CAAC,cAAD,CAAD,EAAmB,MAC3DE,cAAc,CAACQ,KAAD,CAD0B,CAA1C;AAGA,QAAMoB,gBAAgB,GAAGD,yBAAyB,CAACE,IAAnD,CA7ByB,CA8BzB;;AACA,QAAMC,yBAAyB,GAAGhC,QAAQ,CAAC,CAAC,cAAD,CAAD,EAAmB,MAC3DG,cAAc,CAACO,KAAD,CAD0B,CAA1C;AAGA,QAAMuB,gBAAgB,GAAGD,yBAAyB,CAACD,IAAnD,CAlCyB,CAmCzB;;AACA,QAAMG,0BAA0B,GAAGlC,QAAQ,CAAC,CAAC,eAAD,CAAD,EAAoB,MAC7DI,eAAe,CAACM,KAAD,CAD0B,CAA3C;AAGA,QAAMyB,iBAAiB,GAAGD,0BAA0B,CAACH,IAArD,CAvCyB,CAwCzB;;AACA,QAAMK,uBAAuB,GAAGpC,QAAQ,CAAC,CAAC,YAAD,CAAD,EAAiB,MACvDC,YAAY,CAACS,KAAD,CAD0B,CAAxC;AAGA,QAAM2B,cAAc,GAAGD,uBAAuB,CAACL,IAA/C,CA5CyB,CA6CzB;;AACA,QAAMO,uBAAuB,GAAGtC,QAAQ,CAAC,CAAC,YAAD,CAAD,EAAiB,MACvDK,YAAY,CAACK,KAAD,CAD0B,CAAxC;AAGA,QAAM6B,cAAc,GAAGD,uBAAuB,CAACP,IAA/C;AACA,SAAO;AACLP,IAAAA,MADK;AAELV,IAAAA,gBAFK;AAGLC,IAAAA,mBAHK;AAILF,IAAAA,IAJK;AAKLc,IAAAA,qBALK;AAMLF,IAAAA,MANK;AAOLT,IAAAA,UAPK;AAQLC,IAAAA,aARK;AASLa,IAAAA,gBATK;AAULG,IAAAA,gBAVK;AAWLE,IAAAA,iBAXK;AAYLE,IAAAA,cAZK;AAaLE,IAAAA;AAbK,GAAP;AAeD,CAjED;;GAAMhC,Y;UA0B8BP,Q,EAKAA,Q,EAKCA,Q,EAKHA,Q,EAKAA,Q;;;KA9C5BO,Y;AAmEN,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  getBrandCard,\r\n  getFinanceCard,\r\n  getGenaralCard,\r\n  getLocationCard,\r\n  getUsersCard,\r\n} from \"../../APIS/dashboard\";\r\nimport { on } from \"process\";\r\nconst UseDashboard = () => {\r\n  const today = moment().format(\"YYYY-MM \");\r\n  const token = localStorage.getItem(\"Token\");\r\n  const t_ID = \"1\";\r\n  const [activeTabJustify, setActiveTabJustify] = useState(\"1\");\r\n  const [maxDataAge, setMaxDataAge] = useState({\r\n    createdAt: {\r\n      $gte: new Date(moment(today).startOf(\"month\").toISOString()),\r\n      $lte: new Date(moment().toISOString()),\r\n    },\r\n  });\r\n\r\n  const [loaded] = useState(false);\r\n  const Loader = require(\"react-loader\");\r\n\r\n  const toggleCustomJustified = (tab) => {\r\n    if (activeTabJustify === tab) {\r\n      setActiveTabJustify(tab);\r\n    }\r\n\r\n    if (activeTabJustify !== tab) {\r\n      setActiveTabJustify(tab);\r\n    }\r\n  };\r\n\r\n  // *******Finance******\r\n  const dashboardFinanceCardddata = useQuery([\"FinanceCards\"], () =>\r\n    getFinanceCard(token)\r\n  );\r\n  const financeCardddata = dashboardFinanceCardddata.data;\r\n  // *******General******\r\n  const dashboardGeneralCardddata = useQuery([\"GeneralCards\"], () =>\r\n    getGenaralCard(token)\r\n  );\r\n  const generalCardddata = dashboardGeneralCardddata.data;\r\n  // *******Location******\r\n  const dashboardLocationCardddata = useQuery([\"LocationCards\"], () =>\r\n    getLocationCard(token)\r\n  );\r\n  const locationCardddata = dashboardLocationCardddata.data;\r\n  // *******Brand******\r\n  const dashboardBrandCardddata = useQuery([\"BrandCards\"], () =>\r\n    getBrandCard(token)\r\n  );\r\n  const brandCardddata = dashboardBrandCardddata.data;\r\n  // *******Brand******\r\n  const dashboardUsersCardddata = useQuery([\"UsersCards\"], () =>\r\n    getUsersCard(token)\r\n  );\r\n  const usersCardddata = dashboardUsersCardddata.data;\r\n  return {\r\n    loaded,\r\n    activeTabJustify,\r\n    setActiveTabJustify,\r\n    t_ID,\r\n    toggleCustomJustified,\r\n    Loader,\r\n    maxDataAge,\r\n    setMaxDataAge,\r\n    financeCardddata,\r\n    generalCardddata,\r\n    locationCardddata,\r\n    brandCardddata,\r\n    usersCardddata,\r\n  };\r\n};\r\n\r\nexport default UseDashboard;\r\n"]},"metadata":{},"sourceType":"module"}