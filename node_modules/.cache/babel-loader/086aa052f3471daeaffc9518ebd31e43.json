{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { getcustomers } from \"../../../APIS/customerCheckedIn\";\nimport { usePaginatedQuery } from \"../../../hooks/query\";\nimport { getcheckInLocations, getLocations } from \"../../../APIS\";\nimport { useAllDataQuery } from \"../../../hooks/query\";\nimport { useHistory } from \"react-router-dom\";\nexport const useCheckedInCustomer = () => {\n  _s();\n\n  let history = useHistory();\n  const [filter, setFilter] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const token = localStorage.getItem(\"Token\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(50);\n  const [applyLocationFilter, setApplyLocationFilter] = useState(false);\n\n  const changeCurrentPage = pageNum => setCurrentPage(pageNum);\n\n  const queryClient = useQueryClient();\n  const {\n    data: {\n      data: customerCheckInData,\n      hasNextPage,\n      hasPreviousPage,\n      total\n    },\n    isLoading\n  } = usePaginatedQuery([\"checkedcustomers\", `${pageSize}`, `${currentPage}`, `${filter}`], () => getcustomers(filter, pageSize, currentPage, token, applyLocationFilter, history));\n  const {\n    data: locationsData,\n    isLoading: loadingLocations\n  } = useAllDataQuery([\"locations\", \"visible\"], () => getcheckInLocations(token));\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const pagelengthnum = e => {\n    if (e.target.value === \"1\") {\n      setPageSize(10);\n    } else if (e.target.value === \"2\") {\n      setPageSize(30);\n    } else if (e.target.value === \"3\") {\n      setPageSize(50);\n    }\n  };\n\n  const pageOptions = {\n    sizePerPage: pageSize,\n    totalSize: total !== null && total !== void 0 ? total : 0,\n    custom: true\n  };\n\n  const handeldiomlocation = async val => {\n    if (val === \"All\") {\n      setCurrentPage(1);\n      setApplyLocationFilter(false);\n      setFilter();\n      queryClient.invalidateQueries(\"checkedcustomers\");\n    } else {\n      setCurrentPage(1);\n      setFilter(val);\n      setApplyLocationFilter(true);\n      queryClient.invalidateQueries(\"checkedcustomers\");\n    }\n  };\n\n  useEffect(() => {\n    if (hasNextPage) {\n      const nextPage = currentPage + 1;\n      queryClient.prefetchQuery([\"checkedcustomer\", `${pageSize}`, `${currentPage}`, `${filter}`], () => getcustomers(filter, pageSize, nextPage, token, applyLocationFilter, history));\n    }\n  }, [currentPage, queryClient]);\n  return {\n    currentPage,\n    pageOptions,\n    customerCheckInData,\n    hasNextPage,\n    hasPreviousPage,\n    total,\n    pagelengthnum,\n    pageSize,\n    toggle,\n    isOpen,\n    isLoading,\n    handeldiomlocation,\n    // diomLocation,\n    locationsData,\n    changeCurrentPage\n  };\n};\n\n_s(useCheckedInCustomer, \"ofmTwNnRq1wNGMMwP1dtI0nbSW0=\", false, function () {\n  return [useHistory, useQueryClient, usePaginatedQuery, useAllDataQuery];\n});","map":{"version":3,"names":["useEffect","useState","useQueryClient","getcustomers","usePaginatedQuery","getcheckInLocations","getLocations","useAllDataQuery","useHistory","useCheckedInCustomer","history","filter","setFilter","isOpen","setIsOpen","token","localStorage","getItem","currentPage","setCurrentPage","pageSize","setPageSize","applyLocationFilter","setApplyLocationFilter","changeCurrentPage","pageNum","queryClient","data","customerCheckInData","hasNextPage","hasPreviousPage","total","isLoading","locationsData","loadingLocations","toggle","pagelengthnum","e","target","value","pageOptions","sizePerPage","totalSize","custom","handeldiomlocation","val","invalidateQueries","nextPage","prefetchQuery"],"sources":["C:/Users/tech sign/Desktop/xyz/src/pages/MyDashboard/CheckedinCustomer/useCheckedInCustomer.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { getcustomers } from \"../../../APIS/customerCheckedIn\";\r\nimport { usePaginatedQuery } from \"../../../hooks/query\";\r\nimport { getcheckInLocations, getLocations } from \"../../../APIS\";\r\nimport { useAllDataQuery } from \"../../../hooks/query\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const useCheckedInCustomer = () => {\r\n  let history = useHistory();\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const token = localStorage.getItem(\"Token\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(50);\r\n  const [applyLocationFilter, setApplyLocationFilter] = useState(false);\r\n  const changeCurrentPage = (pageNum) => setCurrentPage(pageNum);\r\n  const queryClient = useQueryClient();\r\n  const {\r\n    data: { data: customerCheckInData, hasNextPage, hasPreviousPage, total },\r\n    isLoading,\r\n  } = usePaginatedQuery([\"checkedcustomers\",`${pageSize}`,`${currentPage}`,`${filter}`], () =>\r\n    getcustomers(filter, pageSize, currentPage, token, applyLocationFilter,history)\r\n  );\r\n  const { data: locationsData, isLoading: loadingLocations } = useAllDataQuery(\r\n    [\"locations\", \"visible\"],\r\n    () => getcheckInLocations(token)\r\n  );\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const pagelengthnum = (e) => {\r\n    if (e.target.value === \"1\") {\r\n      setPageSize(10);\r\n    } else if (e.target.value === \"2\") {\r\n      setPageSize(30);\r\n    } else if (e.target.value === \"3\") {\r\n      setPageSize(50);\r\n    }\r\n  };\r\n  const pageOptions = {\r\n    sizePerPage: pageSize,\r\n    totalSize: total ?? 0,\r\n    custom: true,\r\n  };\r\n\r\n  const handeldiomlocation = async (val) => {\r\n    if (val === \"All\") {\r\n      setCurrentPage(1);\r\n      setApplyLocationFilter(false);\r\n      setFilter();\r\n      queryClient.invalidateQueries(\"checkedcustomers\");\r\n    } else {\r\n      setCurrentPage(1);\r\n      setFilter(val);\r\n      setApplyLocationFilter(true);\r\n      queryClient.invalidateQueries(\"checkedcustomers\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (hasNextPage) {\r\n      const nextPage = currentPage + 1;\r\n      queryClient.prefetchQuery([\"checkedcustomer\", `${pageSize}`,`${currentPage}`,`${filter}`], () =>\r\n        getcustomers(filter, pageSize, nextPage, token, applyLocationFilter,history)\r\n      );\r\n    }\r\n  }, [currentPage, queryClient]);\r\n  return {\r\n    currentPage,\r\n    pageOptions,\r\n    customerCheckInData,\r\n    hasNextPage,\r\n    hasPreviousPage,\r\n    total,\r\n    pagelengthnum,\r\n    pageSize,\r\n    toggle,\r\n    isOpen,\r\n    isLoading,\r\n    handeldiomlocation,\r\n    // diomLocation,\r\n    locationsData,\r\n    changeCurrentPage,\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}