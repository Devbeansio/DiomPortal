{"ast":null,"code":"import { DIOM_BASED_URLS } from \"../config/url\";\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\n\nexport const getResources = async function (size, page) {\n  var _resJson$hasNextPage, _resJson$hasPreviousP;\n\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let applyFilter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let filters = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  // console.log(\"page : \", page);\n  const res = await fetch(!applyFilter ? `${DIOM_BASED_URLS}/admin-resources-inventories?size=${size}&page=${page}` : `${DIOM_BASED_URLS}/admin-resources-inventories?size=${size}&page=${page}&filter={\"where\":${filters}}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const resourcesData = resJson.data.map((element, index) => ({\n    id: index + 1,\n    _id: element.id,\n    Resource: element.Name,\n    Location: element.BusinessName,\n    ResourceType: element.ResourceTypeName\n  }));\n  return {\n    data: resourcesData.length > 0 ? resourcesData : [],\n    total: resJson ? resJson.total : 0,\n    hasNextPage: (_resJson$hasNextPage = resJson.hasNextPage) !== null && _resJson$hasNextPage !== void 0 ? _resJson$hasNextPage : false,\n    hasPreviousPage: (_resJson$hasPreviousP = resJson.hasPreviousPage) !== null && _resJson$hasPreviousP !== void 0 ? _resJson$hasPreviousP : false\n  };\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\n\nexport const getSearchedResources = async token => {\n  const res = await fetch(`${DIOM_BASED_URLS}/admin-resources-inventories`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const resourcessearchedData = resJson.data.map((element, index) => ({\n    id: index + 1,\n    _id: element.id,\n    Resource: element.Name,\n    Location: element.BusinessName,\n    ResourceType: element.ResourceTypeName\n  }));\n  return {\n    data: resourcessearchedData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\n/**\r\n *\r\n * @param {ResourceId} id\r\n * @param {JWT} token\r\n * @returns  object of a single resource\r\n */\n\nexport const getResource = async (id, token) => {\n  // return await (\n  const res = await fetch(`${DIOM_BASED_URLS}/admin-resources-inventories/${id}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }); // if (!res.ok) {\n  //   const resJson = await res.json();\n  //   throw new Error(resJson.error.message);\n  // }\n\n  const data = await res.json();\n  return {\n    data\n  }; // ).json();\n};","map":{"version":3,"sources":["D:/diom working project/staging/src/APIS/resources.js"],"names":["DIOM_BASED_URLS","getResources","size","page","token","applyFilter","filters","res","fetch","method","redirect","headers","Authorization","ok","resJson","json","Error","error","message","resourcesData","data","map","element","index","id","_id","Resource","Name","Location","BusinessName","ResourceType","ResourceTypeName","length","total","hasNextPage","hasPreviousPage","getSearchedResources","resourcessearchedData","getResource"],"mappings":"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","sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\r\nexport const getResources = async (\r\n  size,\r\n  page,\r\n  token = \"\",\r\n  applyFilter = false,\r\n  filters = {}\r\n) => {\r\n  // console.log(\"page : \", page);\r\n  const res = await fetch(\r\n    !applyFilter\r\n      ? `${DIOM_BASED_URLS}/admin-resources-inventories?size=${size}&page=${page}`\r\n      : `${DIOM_BASED_URLS}/admin-resources-inventories?size=${size}&page=${page}&filter={\"where\":${filters}}`,\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  const resourcesData = resJson.data.map((element, index) => ({\r\n    id: index + 1,\r\n    _id: element.id,\r\n    Resource: element.Name,\r\n    Location: element.BusinessName,\r\n    ResourceType: element.ResourceTypeName,\r\n  }));\r\n  return {\r\n    data: resourcesData.length > 0 ? resourcesData : [],\r\n    total: resJson ? resJson.total : 0,\r\n    hasNextPage: resJson.hasNextPage ?? false,\r\n    hasPreviousPage: resJson.hasPreviousPage ?? false,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\r\nexport const getSearchedResources = async (token) => {\r\n  const res = await fetch(`${DIOM_BASED_URLS}/admin-resources-inventories`, {\r\n    method: \"GET\",\r\n    redirect: \"follow\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  const resourcessearchedData = resJson.data.map((element, index) => ({\r\n    id: index + 1,\r\n    _id: element.id,\r\n    Resource: element.Name,\r\n    Location: element.BusinessName,\r\n    ResourceType: element.ResourceTypeName,\r\n  }));\r\n  return {\r\n    data: resourcessearchedData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param {ResourceId} id\r\n * @param {JWT} token\r\n * @returns  object of a single resource\r\n */\r\nexport const getResource = async (id, token) => {\r\n  // return await (\r\n    const res =\r\n    await fetch(`${DIOM_BASED_URLS}/admin-resources-inventories/${id}`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n\r\n    // if (!res.ok) {\r\n    //   const resJson = await res.json();\r\n    //   throw new Error(resJson.error.message);\r\n    // }\r\n    const data = await res.json();\r\n    \r\n  \r\n    return {\r\n      data\r\n    \r\n    };\r\n  // ).json();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}