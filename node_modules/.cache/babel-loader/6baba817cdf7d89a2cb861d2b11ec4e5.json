{"ast":null,"code":"import _slicedToArray from\"D:/diom working project/staging/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import{useQueryClient}from\"react-query\";import{getInvoice}from\"../../../../APIS/invoices\";import{usePaginatedQuery}from\"../../../../hooks/query\";import{useParams}from\"react-router-dom\";export var useInvoice=function useInvoice(){var token=localStorage.getItem(\"Token\");var _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var _useState3=useState(50),_useState4=_slicedToArray(_useState3,1),pageSize=_useState4[0];var changeCurrentPage=function changeCurrentPage(pageNum){return setCurrentPage(pageNum);};var queryClient=useQueryClient();var _useParams=useParams(),id=_useParams.id;var _usePaginatedQuery=usePaginatedQuery([\"Invoice\",currentPage],function(){return getInvoice(pageSize,currentPage,token,id);}),_usePaginatedQuery$da=_usePaginatedQuery.data,InvoiceData=_usePaginatedQuery$da.data,hasNextPage=_usePaginatedQuery$da.hasNextPage,hasPreviousPage=_usePaginatedQuery$da.hasPreviousPage,total=_usePaginatedQuery$da.total,isLoading=_usePaginatedQuery.isLoading;var pageOptions={sizePerPage:pageSize,totalSize:total!==null&&total!==void 0?total:0,custom:true};useEffect(function(){// FOR PRE-FETCHING NEXT PAGE\nif(hasNextPage){var nextPage=currentPage+1;queryClient.prefetchQuery([\"Invoice\",nextPage],function(){return getInvoice(pageSize,nextPage,token,id);});}},[currentPage,queryClient]);return{currentPage:currentPage,pageOptions:pageOptions,InvoiceData:InvoiceData,hasNextPage:hasNextPage,hasPreviousPage:hasPreviousPage,total:total,isLoading:isLoading,changeCurrentPage:changeCurrentPage};};","map":{"version":3,"sources":["D:/diom working project/staging/src/pages/Finance/InvoicesMainPage/InvoicesDetailPage/useInvoicesDetail.js"],"names":["useEffect","useState","useQueryClient","getInvoice","usePaginatedQuery","useParams","useInvoice","token","localStorage","getItem","currentPage","setCurrentPage","pageSize","changeCurrentPage","pageNum","queryClient","id","data","InvoiceData","hasNextPage","hasPreviousPage","total","isLoading","pageOptions","sizePerPage","totalSize","custom","nextPage","prefetchQuery"],"mappings":"qHAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,cAAT,KAA+B,aAA/B,CACA,OAASC,UAAT,KAA2B,2BAA3B,CACA,OAASC,iBAAT,KAAkC,yBAAlC,CACA,OAASC,SAAT,KAA0B,kBAA1B,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC9B,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,cAAsCR,QAAQ,CAAC,CAAD,CAA9C,wCAAOS,WAAP,eAAoBC,cAApB,eACA,eAAmBV,QAAQ,CAAC,EAAD,CAA3B,yCAAOW,QAAP,eACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,OAAD,QAAaH,CAAAA,cAAc,CAACG,OAAD,CAA3B,EAA1B,CACA,GAAMC,CAAAA,WAAW,CAAGb,cAAc,EAAlC,CACA,eAAeG,SAAS,EAAxB,CAAQW,EAAR,YAAQA,EAAR,CAEA,uBAGIZ,iBAAiB,CAAC,CAAC,SAAD,CAAYM,WAAZ,CAAD,CAA2B,iBAC9CP,CAAAA,UAAU,CAACS,QAAD,CAAWF,WAAX,CAAwBH,KAAxB,CAA+BS,EAA/B,CADoC,EAA3B,CAHrB,0CACEC,IADF,CACgBC,WADhB,uBACUD,IADV,CAC6BE,WAD7B,uBAC6BA,WAD7B,CAC0CC,eAD1C,uBAC0CA,eAD1C,CAC2DC,KAD3D,uBAC2DA,KAD3D,CAEEC,SAFF,oBAEEA,SAFF,CAOA,GAAMC,CAAAA,WAAW,CAAG,CAClBC,WAAW,CAAEZ,QADK,CAElBa,SAAS,CAAEJ,KAAF,SAAEA,KAAF,UAAEA,KAAF,CAAW,CAFF,CAGlBK,MAAM,CAAE,IAHU,CAApB,CAMA1B,SAAS,CAAC,UAAM,CACd;AACA,GAAImB,WAAJ,CAAiB,CACf,GAAMQ,CAAAA,QAAQ,CAAGjB,WAAW,CAAG,CAA/B,CACAK,WAAW,CAACa,aAAZ,CAA0B,CAAC,SAAD,CAAYD,QAAZ,CAA1B,CAAiD,iBAC/CxB,CAAAA,UAAU,CAACS,QAAD,CAAWe,QAAX,CAAqBpB,KAArB,CAA4BS,EAA5B,CADqC,EAAjD,EAGD,CACF,CARQ,CAQN,CAACN,WAAD,CAAcK,WAAd,CARM,CAAT,CAUA,MAAO,CACLL,WAAW,CAAXA,WADK,CAELa,WAAW,CAAXA,WAFK,CAGLL,WAAW,CAAXA,WAHK,CAILC,WAAW,CAAXA,WAJK,CAKLC,eAAe,CAAfA,eALK,CAMLC,KAAK,CAALA,KANK,CAOLC,SAAS,CAATA,SAPK,CAQLT,iBAAiB,CAAjBA,iBARK,CAAP,CAUD,CAzCM","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { getInvoice } from \"../../../../APIS/invoices\";\r\nimport { usePaginatedQuery } from \"../../../../hooks/query\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const useInvoice = () => {\r\n  const token = localStorage.getItem(\"Token\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize] = useState(50);\r\n  const changeCurrentPage = (pageNum) => setCurrentPage(pageNum);\r\n  const queryClient = useQueryClient();\r\n  const { id } = useParams();\r\n\r\n  const {\r\n    data: { data: InvoiceData, hasNextPage, hasPreviousPage, total },\r\n    isLoading,\r\n  } = usePaginatedQuery([\"Invoice\", currentPage], () =>\r\n    getInvoice(pageSize, currentPage, token, id)\r\n  );\r\n\r\n  const pageOptions = {\r\n    sizePerPage: pageSize,\r\n    totalSize: total ?? 0,\r\n    custom: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n    if (hasNextPage) {\r\n      const nextPage = currentPage + 1;\r\n      queryClient.prefetchQuery([\"Invoice\", nextPage], () =>\r\n        getInvoice(pageSize, nextPage, token, id)\r\n      );\r\n    }\r\n  }, [currentPage, queryClient]);\r\n\r\n  return {\r\n    currentPage,\r\n    pageOptions,\r\n    InvoiceData,\r\n    hasNextPage,\r\n    hasPreviousPage,\r\n    total,\r\n    isLoading,\r\n    changeCurrentPage,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}