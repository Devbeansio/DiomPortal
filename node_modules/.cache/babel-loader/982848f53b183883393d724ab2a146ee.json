{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { QueryClient, useQuery, useQueryClient } from \"react-query\";\nimport { getResources, getLocations, getSearchedResources } from \"../../APIS\";\nimport { useAllDataQuery, usePaginatedQuery } from \"../../hooks/query\";\nexport const useInventories = () => {\n  _s();\n\n  var _data$total;\n\n  const [isOpen, setIsOpen] = useState(false);\n  const token = localStorage.getItem(\"Token\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(50);\n\n  const changeCurrentPage = pageNum => setCurrentPage(pageNum);\n\n  const queryClient = useQueryClient();\n  const [applyLocationFilter, setApplyFilter] = useState(false);\n  const [filter, setFilter] = useState(\"All\"); // const {\n  //   data: { data: resourcesData, hasNextPage, hasPreviousPage, total },\n  //   isLoading,\n  // } = usePaginatedQuery([\"resources\", currentPage, filter], () =>\n  //   getResources(pageSize, currentPage, token, applyLocationFilter, filter)\n  // );\n\n  console.log(\"total\", \"total\");\n  console.log([\"resources\", currentPage, filter]);\n  const {\n    data,\n    isLoading\n  } = useQuery([\"resources\", currentPage, filter], async () => await getResources(pageSize, currentPage, token, applyLocationFilter, filter), {\n    keepPreviousData: true,\n    staleTime: 2000,\n    retry: false\n  });\n  console.log(\"total\", \"total\");\n  console.log(data === null || data === void 0 ? void 0 : data.total, \"total\"); // usePaginatedQuery(,\n  // );\n\n  const {\n    data: {\n      data: resourcessearchedData\n    }\n  } = usePaginatedQuery([\"searcehdresources\"], () => getSearchedResources(token));\n  const {\n    data: locationsData,\n    isLoading: loadingLocations\n  } = useAllDataQuery([\"locations\", \"visible\"], () => getLocations(token));\n  const locationData = locationsData;\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const pagelengthnum = e => {\n    if (e.target.value === \"1\") {\n      setPageSize(10);\n    } else if (e.target.value === \"2\") {\n      setPageSize(30);\n    } else if (e.target.value === \"3\") {\n      setPageSize(50);\n    } // QueryClient.invalidateQueries(\"searcehdresources\");\n\n  };\n\n  const pageOptions = {\n    sizePerPage: pageSize,\n    totalSize: (_data$total = data === null || data === void 0 ? void 0 : data.total) !== null && _data$total !== void 0 ? _data$total : 0,\n    custom: true\n  };\n\n  const onChangeLocationFilter = val => {\n    if (val === \"All\") {\n      setCurrentPage(currentPage);\n      setApplyFilter(false);\n      setFilter(\"All\");\n    } else {\n      setCurrentPage(currentPage);\n      setApplyFilter(true);\n      setFilter(`{\"BusinessId\":${val}}`);\n    }\n  };\n\n  useEffect(() => {\n    // FOR PRE-FETCHING NEXT PAGE\n    if (data !== null && data !== void 0 && data.hasNextPage) {\n      const nextPage = currentPage + 1;\n      console.log(\"dkakhdkjs dhakjs\", [\"resources\", nextPage, filter]);\n      queryClient.prefetchQuery([\"resources\", nextPage, filter], async () => await getResources(pageSize, nextPage, token));\n    }\n  }, [currentPage, filter]);\n  return {\n    currentPage,\n    pageOptions,\n    resourcesData: data === null || data === void 0 ? void 0 : data.data,\n    hasNextPage: data === null || data === void 0 ? void 0 : data.hasNextPage,\n    hasPreviousPage: data === null || data === void 0 ? void 0 : data.hasPreviousPage,\n    total: data === null || data === void 0 ? void 0 : data.total,\n    locationsData,\n    loadingLocations,\n    locationData,\n    isLoading,\n    onChangeLocationFilter,\n    changeCurrentPage,\n    pagelengthnum,\n    pageSize,\n    toggle,\n    isOpen,\n    filter // resourcessearchedData,\n\n  };\n};\n\n_s(useInventories, \"GqQNX5OlBQQ1t1rT9oFQN8woeLo=\", false, function () {\n  return [useQueryClient, useQuery, usePaginatedQuery, useAllDataQuery];\n});","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/1diom-frontend/diom-frontend/src/pages/Inventories/useInventories.js"],"names":["useEffect","useState","QueryClient","useQuery","useQueryClient","getResources","getLocations","getSearchedResources","useAllDataQuery","usePaginatedQuery","useInventories","isOpen","setIsOpen","token","localStorage","getItem","currentPage","setCurrentPage","pageSize","setPageSize","changeCurrentPage","pageNum","queryClient","applyLocationFilter","setApplyFilter","filter","setFilter","console","log","data","isLoading","keepPreviousData","staleTime","retry","total","resourcessearchedData","locationsData","loadingLocations","locationData","toggle","pagelengthnum","e","target","value","pageOptions","sizePerPage","totalSize","custom","onChangeLocationFilter","val","hasNextPage","nextPage","prefetchQuery","resourcesData","hasPreviousPage"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,cAAhC,QAAsD,aAAtD;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,oBAArC,QAAiE,YAAjE;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,mBAAnD;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAAA;;AAClC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMY,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMmB,iBAAiB,GAAIC,OAAD,IAAaJ,cAAc,CAACI,OAAD,CAArD;;AACA,QAAMC,WAAW,GAAGlB,cAAc,EAAlC;AACA,QAAM,CAACmB,mBAAD,EAAsBC,cAAtB,IAAwCvB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACwB,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC,KAAD,CAApC,CARkC,CASlC;AACA;AACA;AACA;AACA;AACA;;AACA0B,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,OAArB;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,WAAD,EAAcZ,WAAd,EAA2BS,MAA3B,CAAZ;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsB3B,QAAQ,CAClC,CAAC,WAAD,EAAca,WAAd,EAA2BS,MAA3B,CADkC,EAElC,YACE,MAAMpB,YAAY,CAChBa,QADgB,EAEhBF,WAFgB,EAGhBH,KAHgB,EAIhBU,mBAJgB,EAKhBE,MALgB,CAHc,EAUlC;AACEM,IAAAA,gBAAgB,EAAE,IADpB;AAEEC,IAAAA,SAAS,EAAE,IAFb;AAGEC,IAAAA,KAAK,EAAE;AAHT,GAVkC,CAApC;AAgBAN,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,OAArB;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEK,KAAlB,EAAyB,OAAzB,EAlCkC,CAoClC;AACA;;AAEA,QAAM;AACJL,IAAAA,IAAI,EAAE;AAAEA,MAAAA,IAAI,EAAEM;AAAR;AADF,MAEF1B,iBAAiB,CAAC,CAAC,mBAAD,CAAD,EAAwB,MAC3CF,oBAAoB,CAACM,KAAD,CADD,CAFrB;AAMA,QAAM;AAAEgB,IAAAA,IAAI,EAAEO,aAAR;AAAuBN,IAAAA,SAAS,EAAEO;AAAlC,MAAuD7B,eAAe,CAC1E,CAAC,WAAD,EAAc,SAAd,CAD0E,EAE1E,MAAMF,YAAY,CAACO,KAAD,CAFwD,CAA5E;AAIA,QAAMyB,YAAY,GAAGF,aAArB;;AAEA,QAAMG,MAAM,GAAG,MAAM;AACnB3B,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAGA,QAAM6B,aAAa,GAAIC,CAAD,IAAO;AAC3B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,GAAvB,EAA4B;AAC1BxB,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAFD,MAEO,IAAIsB,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,GAAvB,EAA4B;AACjCxB,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAFM,MAEA,IAAIsB,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,GAAvB,EAA4B;AACjCxB,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAP0B,CAQ3B;;AACD,GATD;;AAWA,QAAMyB,WAAW,GAAG;AAClBC,IAAAA,WAAW,EAAE3B,QADK;AAElB4B,IAAAA,SAAS,iBAAEjB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEK,KAAR,qDAAiB,CAFR;AAGlBa,IAAAA,MAAM,EAAE;AAHU,GAApB;;AAKA,QAAMC,sBAAsB,GAAIC,GAAD,IAAS;AACtC,QAAIA,GAAG,KAAK,KAAZ,EAAmB;AACjBhC,MAAAA,cAAc,CAACD,WAAD,CAAd;AACAQ,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAJD,MAIO;AACLT,MAAAA,cAAc,CAACD,WAAD,CAAd;AACAQ,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,SAAS,CAAE,iBAAgBuB,GAAI,GAAtB,CAAT;AACD;AACF,GAVD;;AAYAjD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI6B,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEqB,WAAV,EAAuB;AACrB,YAAMC,QAAQ,GAAGnC,WAAW,GAAG,CAA/B;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,CAAC,WAAD,EAAcuB,QAAd,EAAwB1B,MAAxB,CAAhC;AACAH,MAAAA,WAAW,CAAC8B,aAAZ,CACE,CAAC,WAAD,EAAcD,QAAd,EAAwB1B,MAAxB,CADF,EAEE,YAAY,MAAMpB,YAAY,CAACa,QAAD,EAAWiC,QAAX,EAAqBtC,KAArB,CAFhC;AAID;AACF,GAVQ,EAUN,CAACG,WAAD,EAAcS,MAAd,CAVM,CAAT;AAYA,SAAO;AACLT,IAAAA,WADK;AAEL4B,IAAAA,WAFK;AAGLS,IAAAA,aAAa,EAAExB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEA,IAHhB;AAILqB,IAAAA,WAAW,EAAErB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEqB,WAJd;AAKLI,IAAAA,eAAe,EAAEzB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEyB,eALlB;AAMLpB,IAAAA,KAAK,EAAEL,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEK,KANR;AAOLE,IAAAA,aAPK;AAQLC,IAAAA,gBARK;AASLC,IAAAA,YATK;AAULR,IAAAA,SAVK;AAWLkB,IAAAA,sBAXK;AAYL5B,IAAAA,iBAZK;AAaLoB,IAAAA,aAbK;AAcLtB,IAAAA,QAdK;AAeLqB,IAAAA,MAfK;AAgBL5B,IAAAA,MAhBK;AAiBLc,IAAAA,MAjBK,CAkBL;;AAlBK,GAAP;AAoBD,CAlHM;;GAAMf,c;UAMSN,c,EAWQD,Q,EAwBxBM,iB,EAIyDD,e","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { QueryClient, useQuery, useQueryClient } from \"react-query\";\r\nimport { getResources, getLocations, getSearchedResources } from \"../../APIS\";\r\nimport { useAllDataQuery, usePaginatedQuery } from \"../../hooks/query\";\r\nexport const useInventories = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const token = localStorage.getItem(\"Token\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(50);\r\n  const changeCurrentPage = (pageNum) => setCurrentPage(pageNum);\r\n  const queryClient = useQueryClient();\r\n  const [applyLocationFilter, setApplyFilter] = useState(false);\r\n  const [filter, setFilter] = useState(\"All\");\r\n  // const {\r\n  //   data: { data: resourcesData, hasNextPage, hasPreviousPage, total },\r\n  //   isLoading,\r\n  // } = usePaginatedQuery([\"resources\", currentPage, filter], () =>\r\n  //   getResources(pageSize, currentPage, token, applyLocationFilter, filter)\r\n  // );\r\n  console.log(\"total\", \"total\");\r\n  console.log([\"resources\", currentPage, filter]);\r\n  const { data, isLoading } = useQuery(\r\n    [\"resources\", currentPage, filter],\r\n    async () =>\r\n      await getResources(\r\n        pageSize,\r\n        currentPage,\r\n        token,\r\n        applyLocationFilter,\r\n        filter\r\n      ),\r\n    {\r\n      keepPreviousData: true,\r\n      staleTime: 2000,\r\n      retry: false,\r\n    }\r\n  );\r\n  console.log(\"total\", \"total\");\r\n  console.log(data?.total, \"total\");\r\n\r\n  // usePaginatedQuery(,\r\n  // );\r\n\r\n  const {\r\n    data: { data: resourcessearchedData },\r\n  } = usePaginatedQuery([\"searcehdresources\"], () =>\r\n    getSearchedResources(token)\r\n  );\r\n\r\n  const { data: locationsData, isLoading: loadingLocations } = useAllDataQuery(\r\n    [\"locations\", \"visible\"],\r\n    () => getLocations(token)\r\n  );\r\n  const locationData = locationsData;\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const pagelengthnum = (e) => {\r\n    if (e.target.value === \"1\") {\r\n      setPageSize(10);\r\n    } else if (e.target.value === \"2\") {\r\n      setPageSize(30);\r\n    } else if (e.target.value === \"3\") {\r\n      setPageSize(50);\r\n    }\r\n    // QueryClient.invalidateQueries(\"searcehdresources\");\r\n  };\r\n\r\n  const pageOptions = {\r\n    sizePerPage: pageSize,\r\n    totalSize: data?.total ?? 0,\r\n    custom: true,\r\n  };\r\n  const onChangeLocationFilter = (val) => {\r\n    if (val === \"All\") {\r\n      setCurrentPage(currentPage);\r\n      setApplyFilter(false);\r\n      setFilter(\"All\");\r\n    } else {\r\n      setCurrentPage(currentPage);\r\n      setApplyFilter(true);\r\n      setFilter(`{\"BusinessId\":${val}}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n    if (data?.hasNextPage) {\r\n      const nextPage = currentPage + 1;\r\n      console.log(\"dkakhdkjs dhakjs\", [\"resources\", nextPage, filter]);\r\n      queryClient.prefetchQuery(\r\n        [\"resources\", nextPage, filter],\r\n        async () => await getResources(pageSize, nextPage, token)\r\n      );\r\n    }\r\n  }, [currentPage, filter]);\r\n\r\n  return {\r\n    currentPage,\r\n    pageOptions,\r\n    resourcesData: data?.data,\r\n    hasNextPage: data?.hasNextPage,\r\n    hasPreviousPage: data?.hasPreviousPage,\r\n    total: data?.total,\r\n    locationsData,\r\n    loadingLocations,\r\n    locationData,\r\n    isLoading,\r\n    onChangeLocationFilter,\r\n    changeCurrentPage,\r\n    pagelengthnum,\r\n    pageSize,\r\n    toggle,\r\n    isOpen,\r\n    filter,\r\n    // resourcessearchedData,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}