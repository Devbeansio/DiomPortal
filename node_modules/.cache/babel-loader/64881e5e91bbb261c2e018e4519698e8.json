{"ast":null,"code":"import { takeEvery, fork, put, all, call } from \"redux-saga/effects\";\nimport { toast } from \"react-toastify\"; // Login Redux States\n\nimport { CHECK_LOGIN, LOGOUT_USER } from \"./actionTypes\";\nimport { apiError, loginUserSuccessful, logoutUserSuccess } from \"./actions\"; // AUTH related methods\n\nimport { postLogin } from \"../../../helpers/fackBackend_Helper\";\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\"; //Initilize firebase\n\nconst fireBaseBackend = getFirebaseBackend(); //If user is login then dispatch redux action's are directly from here.\n\nfunction* loginUser(_ref) {\n  let {\n    payload: {\n      user,\n      history\n    }\n  } = _ref;\n\n  try {\n    const response = yield call(postLogin, \"/post-login\", {\n      username: user.username,\n      password: user.password\n    });\n    yield put(loginUserSuccessful(response)); // debugger\n\n    localStorage.setItem(\"authUser\", JSON.stringify(response));\n    history.push(\"/mydashboard\"); // console.log(\"saga success 1\", response);\n  } catch (error) {\n    // console.log(\"error error\", error);\n    toast.error(\"UserName or password is incorrect\"); // yield put(apiError(error));\n  }\n}\n\nfunction* logoutUser(_ref2) {\n  let {\n    payload: {\n      history\n    }\n  } = _ref2;\n\n  try {\n    localStorage.removeItem(\"authUser\");\n\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.logout);\n      yield put(logoutUserSuccess(response));\n    }\n\n    history.push(\"/login\");\n    localStorage.setItem(\"Token\", \"\");\n  } catch (error) {\n    yield put(apiError(error));\n  }\n}\n\nexport function* watchUserLogin() {\n  yield takeEvery(CHECK_LOGIN, loginUser);\n}\nexport function* watchUserLogout() {\n  yield takeEvery(LOGOUT_USER, logoutUser);\n}\n\nfunction* loginSaga() {\n  yield all([fork(watchUserLogin), fork(watchUserLogout)]);\n}\n\nexport default loginSaga;","map":{"version":3,"names":["takeEvery","fork","put","all","call","toast","CHECK_LOGIN","LOGOUT_USER","apiError","loginUserSuccessful","logoutUserSuccess","postLogin","getFirebaseBackend","fireBaseBackend","loginUser","payload","user","history","response","username","password","localStorage","setItem","JSON","stringify","push","error","logoutUser","removeItem","process","env","REACT_APP_DEFAULTAUTH","logout","watchUserLogin","watchUserLogout","loginSaga"],"sources":["D:/diom working project/staging/src/store/auth/login/saga.js"],"sourcesContent":["import { takeEvery, fork, put, all, call } from \"redux-saga/effects\";\r\nimport { toast } from \"react-toastify\";\r\n// Login Redux States\r\nimport { CHECK_LOGIN, LOGOUT_USER } from \"./actionTypes\";\r\nimport { apiError, loginUserSuccessful, logoutUserSuccess } from \"./actions\";\r\n\r\n// AUTH related methods\r\nimport { postLogin } from \"../../../helpers/fackBackend_Helper\";\r\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\";\r\n\r\n//Initilize firebase\r\nconst fireBaseBackend = getFirebaseBackend();\r\n\r\n//If user is login then dispatch redux action's are directly from here.\r\nfunction* loginUser({ payload: { user, history } }) {\r\n  \r\n  try {\r\n    const response = yield call(postLogin, \"/post-login\", {\r\n      username: user.username,\r\n      password: user.password,\r\n    });\r\n    yield put(loginUserSuccessful(response));\r\n    // debugger\r\n    localStorage.setItem(\"authUser\", JSON.stringify(response));\r\n    history.push(\"/mydashboard\");\r\n    // console.log(\"saga success 1\", response);\r\n    \r\n  } catch (error) {\r\n    // console.log(\"error error\", error);\r\n    toast.error(\"UserName or password is incorrect\");\r\n  \r\n    // yield put(apiError(error));\r\n  }\r\n}\r\n\r\nfunction* logoutUser({ payload: { history } }) {\r\n  try {\r\n    localStorage.removeItem(\"authUser\");\r\n\r\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\r\n      const response = yield call(fireBaseBackend.logout);\r\n      yield put(logoutUserSuccess(response));\r\n    }\r\n\r\n    history.push(\"/login\");\r\n    localStorage.setItem(\"Token\", \"\");\r\n  } catch (error) {\r\n    yield put(apiError(error));\r\n  }\r\n}\r\n\r\nexport function* watchUserLogin() {\r\n  yield takeEvery(CHECK_LOGIN, loginUser);\r\n}\r\n\r\nexport function* watchUserLogout() {\r\n  yield takeEvery(LOGOUT_USER, logoutUser);\r\n}\r\n\r\nfunction* loginSaga() {\r\n  yield all([fork(watchUserLogin), fork(watchUserLogout)]);\r\n}\r\n\r\nexport default loginSaga;\r\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,QAAgD,oBAAhD;AACA,SAASC,KAAT,QAAsB,gBAAtB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,eAAzC;AACA,SAASC,QAAT,EAAmBC,mBAAnB,EAAwCC,iBAAxC,QAAiE,WAAjE,C,CAEA;;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,SAASC,kBAAT,QAAmC,kCAAnC,C,CAEA;;AACA,MAAMC,eAAe,GAAGD,kBAAkB,EAA1C,C,CAEA;;AACA,UAAUE,SAAV,OAAoD;EAAA,IAAhC;IAAEC,OAAO,EAAE;MAAEC,IAAF;MAAQC;IAAR;EAAX,CAAgC;;EAElD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACO,SAAD,EAAY,aAAZ,EAA2B;MACpDQ,QAAQ,EAAEH,IAAI,CAACG,QADqC;MAEpDC,QAAQ,EAAEJ,IAAI,CAACI;IAFqC,CAA3B,CAA3B;IAIA,MAAMlB,GAAG,CAACO,mBAAmB,CAACS,QAAD,CAApB,CAAT,CALE,CAMF;;IACAG,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAjC;IACAD,OAAO,CAACQ,IAAR,CAAa,cAAb,EARE,CASF;EAED,CAXD,CAWE,OAAOC,KAAP,EAAc;IACd;IACArB,KAAK,CAACqB,KAAN,CAAY,mCAAZ,EAFc,CAId;EACD;AACF;;AAED,UAAUC,UAAV,QAA+C;EAAA,IAA1B;IAAEZ,OAAO,EAAE;MAAEE;IAAF;EAAX,CAA0B;;EAC7C,IAAI;IACFI,YAAY,CAACO,UAAb,CAAwB,UAAxB;;IAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,KAAsC,UAA1C,EAAsD;MACpD,MAAMb,QAAQ,GAAG,MAAMd,IAAI,CAACS,eAAe,CAACmB,MAAjB,CAA3B;MACA,MAAM9B,GAAG,CAACQ,iBAAiB,CAACQ,QAAD,CAAlB,CAAT;IACD;;IAEDD,OAAO,CAACQ,IAAR,CAAa,QAAb;IACAJ,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,EAA9B;EACD,CAVD,CAUE,OAAOI,KAAP,EAAc;IACd,MAAMxB,GAAG,CAACM,QAAQ,CAACkB,KAAD,CAAT,CAAT;EACD;AACF;;AAED,OAAO,UAAUO,cAAV,GAA2B;EAChC,MAAMjC,SAAS,CAACM,WAAD,EAAcQ,SAAd,CAAf;AACD;AAED,OAAO,UAAUoB,eAAV,GAA4B;EACjC,MAAMlC,SAAS,CAACO,WAAD,EAAcoB,UAAd,CAAf;AACD;;AAED,UAAUQ,SAAV,GAAsB;EACpB,MAAMhC,GAAG,CAAC,CAACF,IAAI,CAACgC,cAAD,CAAL,EAAuBhC,IAAI,CAACiC,eAAD,CAA3B,CAAD,CAAT;AACD;;AAED,eAAeC,SAAf"},"metadata":{},"sourceType":"module"}