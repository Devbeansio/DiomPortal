{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSnackbar } from \"notistack\";\n\nconst useReportRequest = () => {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const reportTypeOptions = [{\n    label: \"Booking Report\",\n    value: 0\n  }, {\n    label: \"User Report\",\n    value: 1\n  }, {\n    label: \"User Ananlysis Report\",\n    value: 2\n  }, {\n    label: \"Cancelled Bookings\",\n    value: 3\n  }];\n\n  const retryFunc = () => {\n    // alert(\" i am retry presses\")\n    const message = 'Gathering Report Data';\n    enqueueSnackbar(message, {\n      variant: 'success'\n    }); // const message1 = 'Exporting Report ';\n    //   enqueueSnackbar(message1, { \n    //     variant: 'success', \n    // });\n  };\n\n  const downloadFunc = () => {\n    const message1 = 'Your Report has started  to download';\n    enqueueSnackbar(message1, {\n      variant: 'success'\n    });\n  };\n\n  return {\n    reportTypeOptions,\n    retryFunc,\n    downloadFunc\n  };\n};\n\n_s(useReportRequest, \"EOBaWbrlhJsnjjf+SgNfGhR5FU4=\", false, function () {\n  return [useSnackbar];\n});\n\nexport default useReportRequest;","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/diom (1)/diom/src/pages/Reports/generateodf/useReportRequest.js"],"names":["React","useSnackbar","useReportRequest","enqueueSnackbar","reportTypeOptions","label","value","retryFunc","message","variant","downloadFunc","message1"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,WAAV,QAA6B,WAA7B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAsBF,WAAW,EAAvC;AACE,QAAMG,iBAAiB,GAAG,CACtB;AAAEC,IAAAA,KAAK,EAAE,gBAAT;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GADsB,EAEtB;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,KAAK,EAAE;AAA/B,GAFsB,EAGtB;AAAED,IAAAA,KAAK,EAAE,uBAAT;AAAkCC,IAAAA,KAAK,EAAE;AAAzC,GAHsB,EAItB;AAAED,IAAAA,KAAK,EAAE,oBAAT;AAA+BC,IAAAA,KAAK,EAAE;AAAtC,GAJsB,CAA1B;;AAOE,QAAMC,SAAS,GAAC,MAAI;AAClB;AACA,UAAMC,OAAO,GAAG,uBAAhB;AACAL,IAAAA,eAAe,CAACK,OAAD,EAAU;AACvBC,MAAAA,OAAO,EAAE;AADc,KAAV,CAAf,CAHkB,CAMpB;AACA;AACA;AACA;AACC,GAVD;;AAWA,QAAMC,YAAY,GAAC,MAAI;AACrB,UAAMC,QAAQ,GAAG,sCAAjB;AACAR,IAAAA,eAAe,CAACQ,QAAD,EAAW;AACxBF,MAAAA,OAAO,EAAE;AADe,KAAX,CAAf;AAGD,GALD;;AAMJ,SACE;AACIL,IAAAA,iBADJ;AAEIG,IAAAA,SAFJ;AAGIG,IAAAA;AAHJ,GADF;AAOD,CAjCD;;GAAMR,gB;UACwBD,W;;;AAkC9B,eAAeC,gBAAf","sourcesContent":["import React from 'react'\r\nimport {  useSnackbar } from \"notistack\";\r\n\r\nconst useReportRequest = () => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n    const reportTypeOptions = [\r\n        { label: \"Booking Report\", value: 0 },\r\n        { label: \"User Report\", value: 1 },\r\n        { label: \"User Ananlysis Report\", value: 2 },\r\n        { label: \"Cancelled Bookings\", value: 3 },\r\n      ];\r\n\r\n      const retryFunc=()=>{\r\n        // alert(\" i am retry presses\")\r\n        const message = 'Gathering Report Data';\r\n        enqueueSnackbar(message, { \r\n          variant: 'success', \r\n      });\r\n      // const message1 = 'Exporting Report ';\r\n      //   enqueueSnackbar(message1, { \r\n      //     variant: 'success', \r\n      // });\r\n      }\r\n      const downloadFunc=()=>{\r\n        const message1 = 'Your Report has started  to download';\r\n        enqueueSnackbar(message1, { \r\n          variant: 'success', \r\n      });\r\n      }\r\n  return (\r\n    {\r\n        reportTypeOptions,\r\n        retryFunc,\r\n        downloadFunc,\r\n    }\r\n  )\r\n}\r\n\r\nexport default useReportRequest"]},"metadata":{},"sourceType":"module"}