{"ast":null,"code":"import { DIOM_BASED_URLS } from \"../config/url\";\nimport moment from \"moment\";\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\n\nexport const getInvoices = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let applyFilter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  const res = await fetch(`${DIOM_BASED_URLS}/invoices?size=${size}&page=${page}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const Invoiceslistingdata = resJson.data.map((element, index) => ({ ...element,\n    id: index + 1,\n    invoiceId: element.id,\n    bookingId: element.bookingId,\n    totalPaid: element.total,\n    paymentMethod: element.paymentMethod,\n    createdAt: moment(element.createdAt).format(\"YYYY-MM-DD \"),\n    customerData: element.customerName\n  }));\n  return {\n    data: Invoiceslistingdata,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\nexport const getInvoice = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let id = arguments.length > 3 ? arguments[3] : undefined;\n  const res = await fetch(`${DIOM_BASED_URLS}/invoices/${id}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const InvoiceData = resJson.data; // console.log(\"InvoiceData\", InvoiceData);\n\n  return {\n    data: InvoiceData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};","map":{"version":3,"sources":["D:/diom working project/staging/src/APIS/invoices.js"],"names":["DIOM_BASED_URLS","moment","getInvoices","size","page","token","applyFilter","res","fetch","method","redirect","headers","Authorization","ok","resJson","json","Error","error","message","Invoiceslistingdata","data","map","element","index","id","invoiceId","bookingId","totalPaid","total","paymentMethod","createdAt","format","customerData","customerName","hasNextPage","hasPreviousPage","getInvoice","InvoiceData"],"mappings":"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","sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\nimport moment from \"moment\";\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\r\n\r\nexport const getInvoices = async (\r\n  size = 30,\r\n  page = 1,\r\n  token = \"\",\r\n  applyFilter = false\r\n) => {\r\n  const res = await fetch(\r\n    `${DIOM_BASED_URLS}/invoices?size=${size}&page=${page}`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n\r\n  const Invoiceslistingdata = resJson.data.map((element, index) => ({\r\n    ...element,\r\n    id: index + 1,\r\n    invoiceId: element.id,\r\n    bookingId: element.bookingId,\r\n    totalPaid: element.total,\r\n    paymentMethod: element.paymentMethod,\r\n    createdAt: moment(element.createdAt).format(\"YYYY-MM-DD \"),\r\n    customerData: element.customerName,\r\n  }));\r\n\r\n  return {\r\n    data: Invoiceslistingdata,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\nexport const getInvoice = async (size = 30, page = 1, token = \"\", id) => {\r\n  const res = await fetch(\r\n    `${DIOM_BASED_URLS}/invoices/${id}`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n\r\n  const InvoiceData = resJson.data;\r\n  // console.log(\"InvoiceData\", InvoiceData);\r\n\r\n  return {\r\n    data: InvoiceData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}