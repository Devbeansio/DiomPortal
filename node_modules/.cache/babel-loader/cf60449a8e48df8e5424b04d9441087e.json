{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { DIOM_BASED_URLS } from \"../../.././config/url\";\nimport { toast } from \"react-toastify\";\nimport { useQueryClient } from \"react-query\";\nimport { usePaginatedQuery } from \"../../../hooks/query\";\nimport { gettodaysbookings } from \"../../../APIS/bookings\";\nimport { getLocations } from \"../../../APIS\";\nimport { useAllDataQuery } from \"../../../hooks/query\";\nimport { getschduleddbookings } from \"../../../APIS/bookings\";\nimport { getPasttbookings } from \"../../../APIS/bookings\";\n\nconst UseRequestBookings = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(50);\n\n  const changeCurrentPage = pageNum => setCurrentPage(pageNum);\n\n  const queryClient = useQueryClient();\n  const {\n    t_ID\n  } = useParams();\n  const [activeTabJustify, setActiveTabJustify] = useState(t_ID);\n  const [diomLocation, setDiomLocation] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [bookingsToday, setBookingsToday] = useState([]);\n  const [modal_static, setModal_static] = useState(false);\n  const [modal_static1, setModal_static1] = useState(false);\n  const [revokeTextArea, setRevokeTextArea] = useState();\n  const [idfSelectedRow, setIdfSelectedRow] = useState();\n  const [error, setError] = useState(null);\n  const [applyLocationFilter, setApplyFilter] = useState(false);\n  const [filter, setFilter] = useState(\"All\");\n  const token = localStorage.getItem(\"Token\");\n\n  const removeBodyCss = () => {\n    document.body.classList.add(\"no_padding\");\n  };\n\n  const tog_static = __id => {\n    setModal_static(!modal_static);\n    setIdfSelectedRow(__id);\n    removeBodyCss();\n  };\n\n  const tog_static1 = () => {\n    setModal_static1(!modal_static1);\n    removeBodyCss();\n  };\n\n  const toggleCustomJustified = tab => {\n    if (activeTabJustify !== tab) {\n      setActiveTabJustify(tab);\n    }\n  };\n\n  const handeldiomlocation = async a => {\n    if (activeTabJustify === \"1\") {\n      fetchFilteredTodayBookings(a);\n    } else if (activeTabJustify === \"3\") {\n      fetchFilteredScheduledBookings(a);\n    } else if (activeTabJustify === \"6\") {\n      queryClient.invalidateQueries(\"getpastbookings\");\n      fetchFilteredPastBookings(a);\n    }\n  }; //pending\n\n\n  const fetchRequestsBookings = () => {\n    setBookingsToday([]);\n  };\n\n  const fetchRevokedBookings = () => {\n    setBookingsToday([]);\n  };\n\n  const fetchPendingBookings = () => {\n    setBookingsToday([]);\n  }; //pending\n\n\n  const textareachange = e => {\n    setRevokeTextArea(e.target.value);\n  };\n\n  const delRevokeBookings = () => {\n    fetch(`${DIOM_BASED_URLS}/admin-diom-bookings/revoke/${idfSelectedRow}`, {\n      method: \"DELETE\",\n      redirect: \"follow\",\n      headers: {\n        Accept: \"application/json, text/plain\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n        Authorization: \"Bearer \" + token\n      },\n      body: JSON.stringify({\n        body: revokeTextArea\n      })\n    }).then(response => response.json()).then(result => {\n      toast.success(\"Booking Revoked\");\n      setModal_static1(false);\n\n      if (activeTabJustify === \"1\") {\n        gettodaybookings();\n      } else if (activeTabJustify === \"3\") {\n        fetchScheduledBookings();\n      }\n    }).catch(error => toast.error(error.message));\n  };\n\n  const {\n    data: locationsData,\n    isLoading: loadingLocations\n  } = useAllDataQuery([\"locations\", \"visible\"], () => getLocations(token));\n\n  const fetchFilteredPastBookings = async val => {\n    if (val === \"All\") {\n      setCurrentPage(1);\n      setApplyFilter(false);\n      setFilter(\"All\");\n      queryClient.invalidateQueries(\"getpastbookings\");\n    } else {\n      setCurrentPage(1);\n      setApplyFilter(true);\n      setFilter(val);\n      queryClient.invalidateQueries(\"getpastbookings\");\n    }\n  };\n\n  const fetchFilteredScheduledBookings = async val => {\n    if (val === \"All\") {\n      setCurrentPage(1);\n      setApplyFilter(false);\n      setFilter(\"All\");\n    } else {\n      setCurrentPage(1);\n      setApplyFilter(true);\n      setFilter(val);\n    }\n  }; // **********\n\n\n  const {\n    data: {\n      data: todayBookingsdata,\n      hasNextPage,\n      hasPreviousPage,\n      total\n    },\n    isLoading\n  } = usePaginatedQuery([\"gettodaysbookings\", currentPage, filter], () => gettodaysbookings(pageSize, currentPage, token, applyLocationFilter, filter));\n  useEffect(() => {\n    // FOR PRE-FETCHING NEXT PAGE\n    if (hasNextPage) {\n      const nextPage = currentPage + 1;\n      queryClient.prefetchQuery([\"gettodaysbookings\", nextPage], () => gettodaysbookings(pageSize, nextPage, token, applyLocationFilter, filter));\n    }\n  }, [currentPage, queryClient, applyLocationFilter]);\n\n  const fetchFilteredTodayBookings = async val => {\n    // QueryClient.invalidateQueries(\"gettodaysbookings\");\n    // console.log(\"val : \", val);\n    if (val === \"All\") {\n      setCurrentPage(1);\n      setApplyFilter(false);\n      setFilter(\"All\");\n    } else {\n      setCurrentPage(1);\n      setApplyFilter(true);\n      setFilter(val);\n    }\n  }; // **********\n\n\n  const {\n    data: {\n      data: pastBookingsdata,\n      hasNextPage: pastNextPage,\n      hasPreviousPage: pastPreviousPage,\n      total: pastTotal\n    }\n  } = usePaginatedQuery([\"getpastbookings\", currentPage, filter], () => getPasttbookings(pageSize, currentPage, token, applyLocationFilter, filter));\n  useEffect(() => {\n    // FOR PRE-FETCHING NEXT PAGE\n    if (hasNextPage) {\n      const nextPage = currentPage + 1;\n      queryClient.prefetchQuery([\"getpastbookings\", nextPage], () => getPasttbookings(pageSize, nextPage, token, applyLocationFilter, filter));\n    }\n  }, [currentPage, queryClient, applyLocationFilter]); // **********\n\n  const fetchPastBookings = async () => {\n    setBookingsToday(pastBookingsdata);\n  }; // **********\n\n\n  const {\n    data: {\n      data: schduledBookingsdata,\n      hasNextPage: ScheduledNextPage,\n      hasPreviousPage: ScheduledPreviousPage,\n      total: ScheduledTotal\n    }\n  } = usePaginatedQuery([\"getschduledbookings\", currentPage, filter], () => getschduleddbookings(pageSize, currentPage, token, applyLocationFilter, filter));\n  useEffect(() => {\n    // FOR PRE-FETCHING NEXT PAGE\n    if (hasNextPage) {\n      const nextPage = currentPage + 1;\n      queryClient.prefetchQuery([\"getschduledbookings\", nextPage], () => getschduleddbookings(pageSize, nextPage, token, applyLocationFilter, filter));\n    }\n  }, [currentPage, queryClient, applyLocationFilter]); // **********\n\n  const fetchScheduledBookings = async () => {\n    setBookingsToday(schduledBookingsdata);\n  };\n\n  const gettodaybookings = async () => {\n    setBookingsToday(todayBookingsdata);\n  };\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const pagelengthnum = e => {\n    if (e.target.value === \"1\") {\n      setPageSize(10);\n    } else if (e.target.value === \"2\") {\n      setPageSize(30);\n    } else if (e.target.value === \"3\") {\n      setPageSize(50);\n    }\n  };\n\n  const pageOptions = {\n    sizePerPage: pageSize,\n    totalSize: total !== null && total !== void 0 ? total : 0,\n    custom: true\n  };\n  useEffect(() => {\n    (async () => {\n      if (activeTabJustify === \"1\") {\n        todayBookingsdata && (await gettodaybookings());\n      } else if (activeTabJustify === \"3\") {\n        await fetchScheduledBookings();\n      } else if (activeTabJustify === \"6\") {\n        await fetchPastBookings();\n      } else {\n        await gettodaybookings();\n      }\n    })();\n  }, [todayBookingsdata, filter]);\n  return {\n    activeTabJustify,\n    setActiveTabJustify,\n    diomLocation,\n    setDiomLocation,\n    loaded,\n    setLoaded,\n    bookingsToday,\n    setBookingsToday,\n    modal_static,\n    setModal_static,\n    modal_static1,\n    setModal_static1,\n    revokeTextArea,\n    setRevokeTextArea,\n    idfSelectedRow,\n    setIdfSelectedRow,\n    error,\n    isLoading,\n    setError,\n    tog_static,\n    tog_static1,\n    toggleCustomJustified,\n    handeldiomlocation,\n    textareachange,\n    fetchFilteredPastBookings,\n    fetchFilteredScheduledBookings,\n    fetchFilteredTodayBookings,\n    fetchRequestsBookings,\n    fetchRevokedBookings,\n    fetchPendingBookings,\n    fetchPastBookings,\n    fetchScheduledBookings,\n    gettodaybookings,\n    delRevokeBookings,\n    pagelengthnum,\n    locationsData,\n    pageSize,\n    toggle,\n    isOpen,\n    pageOptions,\n    hasNextPage,\n    currentPage,\n    pastNextPage,\n    pastPreviousPage,\n    pastTotal,\n    ScheduledNextPage,\n    changeCurrentPage\n  };\n};\n\n_s(UseRequestBookings, \"vBpAN7J/jrVoe/7jTQMWr2ArezA=\", false, function () {\n  return [useQueryClient, useParams, useAllDataQuery, usePaginatedQuery, usePaginatedQuery, usePaginatedQuery];\n});\n\n_c = UseRequestBookings;\nexport default UseRequestBookings;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseRequestBookings\");","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/diom (1)/diom/src/pages/MyDashboard/RequestBookings/useRequestBookings.js"],"names":["useState","useEffect","useParams","useHistory","DIOM_BASED_URLS","toast","useQueryClient","usePaginatedQuery","gettodaysbookings","getLocations","useAllDataQuery","getschduleddbookings","getPasttbookings","UseRequestBookings","isOpen","setIsOpen","currentPage","setCurrentPage","pageSize","setPageSize","changeCurrentPage","pageNum","queryClient","t_ID","activeTabJustify","setActiveTabJustify","diomLocation","setDiomLocation","loaded","setLoaded","bookingsToday","setBookingsToday","modal_static","setModal_static","modal_static1","setModal_static1","revokeTextArea","setRevokeTextArea","idfSelectedRow","setIdfSelectedRow","error","setError","applyLocationFilter","setApplyFilter","filter","setFilter","token","localStorage","getItem","removeBodyCss","document","body","classList","add","tog_static","__id","tog_static1","toggleCustomJustified","tab","handeldiomlocation","a","fetchFilteredTodayBookings","fetchFilteredScheduledBookings","invalidateQueries","fetchFilteredPastBookings","fetchRequestsBookings","fetchRevokedBookings","fetchPendingBookings","textareachange","e","target","value","delRevokeBookings","fetch","method","redirect","headers","Accept","Authorization","JSON","stringify","then","response","json","result","success","gettodaybookings","fetchScheduledBookings","catch","message","data","locationsData","isLoading","loadingLocations","val","todayBookingsdata","hasNextPage","hasPreviousPage","total","nextPage","prefetchQuery","pastBookingsdata","pastNextPage","pastPreviousPage","pastTotal","fetchPastBookings","schduledBookingsdata","ScheduledNextPage","ScheduledPreviousPage","ScheduledTotal","toggle","pagelengthnum","pageOptions","sizePerPage","totalSize","custom"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { DIOM_BASED_URLS } from \"../../.././config/url\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { usePaginatedQuery } from \"../../../hooks/query\";\r\nimport { gettodaysbookings } from \"../../../APIS/bookings\";\r\nimport { getLocations } from \"../../../APIS\";\r\nimport { useAllDataQuery } from \"../../../hooks/query\";\r\nimport { getschduleddbookings } from \"../../../APIS/bookings\";\r\nimport { getPasttbookings } from \"../../../APIS/bookings\";\r\n\r\nconst UseRequestBookings = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(50);\r\n  const changeCurrentPage = (pageNum) => setCurrentPage(pageNum);\r\n  const queryClient = useQueryClient();\r\n  const { t_ID } = useParams();\r\n  const [activeTabJustify, setActiveTabJustify] = useState(t_ID);\r\n  const [diomLocation, setDiomLocation] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [bookingsToday, setBookingsToday] = useState([]);\r\n  const [modal_static, setModal_static] = useState(false);\r\n  const [modal_static1, setModal_static1] = useState(false);\r\n  const [revokeTextArea, setRevokeTextArea] = useState();\r\n  const [idfSelectedRow, setIdfSelectedRow] = useState();\r\n  const [error, setError] = useState(null);\r\n  const [applyLocationFilter, setApplyFilter] = useState(false);\r\n  const [filter, setFilter] = useState(\"All\");\r\n  const token = localStorage.getItem(\"Token\");\r\n\r\n  const removeBodyCss = () => {\r\n    document.body.classList.add(\"no_padding\");\r\n  };\r\n  const tog_static = (__id) => {\r\n    setModal_static(!modal_static);\r\n    setIdfSelectedRow(__id);\r\n\r\n    removeBodyCss();\r\n  };\r\n  const tog_static1 = () => {\r\n    setModal_static1(!modal_static1);\r\n\r\n    removeBodyCss();\r\n  };\r\n\r\n  const toggleCustomJustified = (tab) => {\r\n    if (activeTabJustify !== tab) {\r\n      setActiveTabJustify(tab);\r\n    }\r\n  };\r\n\r\n  const handeldiomlocation = async (a) => {\r\n    if (activeTabJustify === \"1\") {\r\n      fetchFilteredTodayBookings(a);\r\n    } else if (activeTabJustify === \"3\") {\r\n      fetchFilteredScheduledBookings(a);\r\n     \r\n    } else if (activeTabJustify === \"6\") {\r\n      queryClient.invalidateQueries(\"getpastbookings\");\r\n      fetchFilteredPastBookings(a);\r\n    }\r\n  };\r\n  //pending\r\n  const fetchRequestsBookings = () => {\r\n    setBookingsToday([]);\r\n  };\r\n  const fetchRevokedBookings = () => {\r\n    setBookingsToday([]);\r\n  };\r\n  const fetchPendingBookings = () => {\r\n    setBookingsToday([]);\r\n  };\r\n  //pending\r\n\r\n  const textareachange = (e) => {\r\n    setRevokeTextArea(e.target.value);\r\n  };\r\n\r\n  const delRevokeBookings = () => {\r\n    fetch(`${DIOM_BASED_URLS}/admin-diom-bookings/revoke/${idfSelectedRow}`, {\r\n      method: \"DELETE\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body: JSON.stringify({\r\n        body: revokeTextArea,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        toast.success(\"Booking Revoked\");\r\n\r\n        setModal_static1(false);\r\n        if (activeTabJustify === \"1\") {\r\n          gettodaybookings();\r\n        } else if (activeTabJustify === \"3\") {\r\n          fetchScheduledBookings();\r\n        }\r\n      })\r\n      .catch((error) => toast.error(error.message));\r\n  };\r\n\r\n  const { data: locationsData, isLoading: loadingLocations } = useAllDataQuery(\r\n    [\"locations\", \"visible\"],\r\n    () => getLocations(token)\r\n  );\r\n\r\n  const fetchFilteredPastBookings = async (val) => {\r\n    if (val === \"All\") {\r\n      setCurrentPage(1);\r\n      setApplyFilter(false);\r\n      setFilter(\"All\");\r\n      queryClient.invalidateQueries(\"getpastbookings\");\r\n    } else {\r\n      setCurrentPage(1);\r\n      setApplyFilter(true);\r\n      setFilter(val);\r\n      queryClient.invalidateQueries(\"getpastbookings\");\r\n    }\r\n  };\r\n\r\n  const fetchFilteredScheduledBookings = async (val) => {\r\n    if (val === \"All\") {\r\n      setCurrentPage(1);\r\n      setApplyFilter(false);\r\n      setFilter(\"All\");\r\n    } else {\r\n      setCurrentPage(1);\r\n      setApplyFilter(true);\r\n      setFilter(val);\r\n    }\r\n  };\r\n\r\n  // **********\r\n  const {\r\n    data: { data: todayBookingsdata, hasNextPage, hasPreviousPage, total },\r\n    isLoading,\r\n  } = usePaginatedQuery([\"gettodaysbookings\", currentPage, filter], () =>\r\n    gettodaysbookings(pageSize, currentPage, token, applyLocationFilter, filter)\r\n  );\r\n\r\n  useEffect(() => {\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n    if (hasNextPage) {\r\n      const nextPage = currentPage + 1;\r\n      queryClient.prefetchQuery([\"gettodaysbookings\", nextPage], () =>\r\n        gettodaysbookings(\r\n          pageSize,\r\n          nextPage,\r\n          token,\r\n          applyLocationFilter,\r\n          filter\r\n        )\r\n      );\r\n    }\r\n  }, [currentPage, queryClient, applyLocationFilter]);\r\n\r\n  const fetchFilteredTodayBookings = async (val) => {\r\n    // QueryClient.invalidateQueries(\"gettodaysbookings\");\r\n    // console.log(\"val : \", val);\r\n    if (val === \"All\") {\r\n      setCurrentPage(1);\r\n      setApplyFilter(false);\r\n      setFilter(\"All\");\r\n    } else {\r\n      setCurrentPage(1);\r\n      setApplyFilter(true);\r\n      setFilter(val);\r\n    }\r\n  };\r\n\r\n  // **********\r\n  const {\r\n    data: {\r\n      data: pastBookingsdata,\r\n      hasNextPage: pastNextPage,\r\n      hasPreviousPage: pastPreviousPage,\r\n      total: pastTotal,\r\n    },\r\n  } = usePaginatedQuery([\"getpastbookings\", currentPage, filter], () =>\r\n    getPasttbookings(pageSize, currentPage, token, applyLocationFilter, filter)\r\n  );\r\n\r\n  useEffect(() => {\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n    if (hasNextPage) {\r\n      const nextPage = currentPage + 1;\r\n      queryClient.prefetchQuery([\"getpastbookings\", nextPage], () =>\r\n        getPasttbookings(pageSize, nextPage, token, applyLocationFilter, filter)\r\n      );\r\n    }\r\n  }, [currentPage, queryClient, applyLocationFilter]);\r\n\r\n  // **********\r\n  const fetchPastBookings = async () => {\r\n    setBookingsToday(pastBookingsdata);\r\n  };\r\n\r\n  // **********\r\n  const {\r\n    data: {\r\n      data: schduledBookingsdata,\r\n      hasNextPage: ScheduledNextPage,\r\n      hasPreviousPage: ScheduledPreviousPage,\r\n      total: ScheduledTotal,\r\n    },\r\n  } = usePaginatedQuery([\"getschduledbookings\", currentPage, filter], () =>\r\n    getschduleddbookings(\r\n      pageSize,\r\n      currentPage,\r\n      token,\r\n      applyLocationFilter,\r\n      filter\r\n    )\r\n  );\r\n\r\n  useEffect(() => {\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n    if (hasNextPage) {\r\n      const nextPage = currentPage + 1;\r\n      queryClient.prefetchQuery([\"getschduledbookings\", nextPage], () =>\r\n        getschduleddbookings(\r\n          pageSize,\r\n          nextPage,\r\n          token,\r\n          applyLocationFilter,\r\n          filter\r\n        )\r\n      );\r\n    }\r\n  }, [currentPage, queryClient, applyLocationFilter]);\r\n\r\n  // **********\r\n\r\n  const fetchScheduledBookings = async () => {\r\n    setBookingsToday(schduledBookingsdata);\r\n  };\r\n\r\n  const gettodaybookings = async () => {\r\n    setBookingsToday(todayBookingsdata);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const pagelengthnum = (e) => {\r\n    if (e.target.value === \"1\") {\r\n      setPageSize(10);\r\n    } else if (e.target.value === \"2\") {\r\n      setPageSize(30);\r\n    } else if (e.target.value === \"3\") {\r\n      setPageSize(50);\r\n    }\r\n  };\r\n  const pageOptions = {\r\n    sizePerPage: pageSize,\r\n    totalSize: total ?? 0,\r\n    custom: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (activeTabJustify === \"1\") {\r\n        todayBookingsdata && (await gettodaybookings());\r\n      } else if (activeTabJustify === \"3\") {\r\n        await fetchScheduledBookings();\r\n      } else if (activeTabJustify === \"6\") {\r\n        await fetchPastBookings();\r\n      } else {\r\n        await gettodaybookings();\r\n      }\r\n    })();\r\n  }, [todayBookingsdata, filter]);\r\n\r\n  return {\r\n    activeTabJustify,\r\n    setActiveTabJustify,\r\n    diomLocation,\r\n    setDiomLocation,\r\n    loaded,\r\n    setLoaded,\r\n    bookingsToday,\r\n    setBookingsToday,\r\n    modal_static,\r\n    setModal_static,\r\n    modal_static1,\r\n    setModal_static1,\r\n    revokeTextArea,\r\n    setRevokeTextArea,\r\n    idfSelectedRow,\r\n    setIdfSelectedRow,\r\n    error,\r\n    isLoading,\r\n    setError,\r\n    tog_static,\r\n    tog_static1,\r\n    toggleCustomJustified,\r\n    handeldiomlocation,\r\n    textareachange,\r\n    fetchFilteredPastBookings,\r\n    fetchFilteredScheduledBookings,\r\n    fetchFilteredTodayBookings,\r\n    fetchRequestsBookings,\r\n    fetchRevokedBookings,\r\n    fetchPendingBookings,\r\n    fetchPastBookings,\r\n    fetchScheduledBookings,\r\n    gettodaybookings,\r\n    delRevokeBookings,\r\n    pagelengthnum,\r\n    locationsData,\r\n    pageSize,\r\n    toggle,\r\n    isOpen,\r\n    pageOptions,\r\n    hasNextPage,\r\n    currentPage,\r\n    pastNextPage,\r\n    pastPreviousPage,\r\n    pastTotal,\r\n    ScheduledNextPage,\r\n    changeCurrentPage,\r\n  };\r\n};\r\nexport default UseRequestBookings;\r\n"]},"metadata":{},"sourceType":"module"}