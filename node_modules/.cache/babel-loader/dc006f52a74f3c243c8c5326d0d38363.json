{"ast":null,"code":"import { DIOM_BASED_URLS } from \"../config/url\";\nimport { apiError, logoutUser } from \"../store/actions\";\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\n\nexport const getResources = async function (size, page) {\n  var _resJson$hasNextPage, _resJson$hasPreviousP;\n\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let applyFilter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let filters = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  // console.log(\"page : \", page);\n  const token1 = \"\";\n  const res = await fetch(!applyFilter ? `${DIOM_BASED_URLS}/admin-resources-inventories?size=${size}&page=${page}` : `${DIOM_BASED_URLS}/admin-resources-inventories?size=${size}&page=${page}&filter={\"where\":${filters}}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token1\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json(); // apiError(resJson.error.message)\n\n    logoutUser(resJson.error.message);\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const resourcesData = resJson.data.map((element, index) => ({\n    id: index + 1,\n    _id: element.id,\n    Resource: element.Name,\n    Location: element.BusinessName,\n    ResourceType: element.ResourceTypeName\n  }));\n  return {\n    data: resourcesData.length > 0 ? resourcesData : [],\n    total: resJson ? resJson.total : 0,\n    hasNextPage: (_resJson$hasNextPage = resJson.hasNextPage) !== null && _resJson$hasNextPage !== void 0 ? _resJson$hasNextPage : false,\n    hasPreviousPage: (_resJson$hasPreviousP = resJson.hasPreviousPage) !== null && _resJson$hasPreviousP !== void 0 ? _resJson$hasPreviousP : false\n  };\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\n\nexport const getSearchedResources = async token => {\n  const res = await fetch(`${DIOM_BASED_URLS}/admin-resources-inventories`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const resourcessearchedData = resJson.data.map((element, index) => ({\n    id: index + 1,\n    _id: element.id,\n    Resource: element.Name,\n    Location: element.BusinessName,\n    ResourceType: element.ResourceTypeName\n  }));\n  return {\n    data: resourcessearchedData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\n/**\r\n *\r\n * @param {ResourceId} id\r\n * @param {JWT} token\r\n * @returns  object of a single resource\r\n */\n\nexport const getResource = async (id, token) => {\n  // return await (\n  const res = await fetch(`${DIOM_BASED_URLS}/admin-resources-inventories/${id}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const data = await res.json();\n  return {\n    data\n  }; // ).json();\n};","map":{"version":3,"names":["DIOM_BASED_URLS","apiError","logoutUser","getResources","size","page","token","applyFilter","filters","token1","res","fetch","method","redirect","headers","Authorization","ok","resJson","json","error","message","Error","resourcesData","data","map","element","index","id","_id","Resource","Name","Location","BusinessName","ResourceType","ResourceTypeName","length","total","hasNextPage","hasPreviousPage","getSearchedResources","resourcessearchedData","getResource"],"sources":["C:/Users/tech sign/Desktop/xyz/src/APIS/resources.js"],"sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\nimport { apiError, logoutUser } from \"../store/actions\";\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\r\nexport const getResources = async (\r\n  size,\r\n  page,\r\n  token = \"\",\r\n  applyFilter = false,\r\n  filters = {}\r\n) => {\r\n  // console.log(\"page : \", page);\r\n  const token1 =\"\";\r\n  const res = await fetch(\r\n    !applyFilter\r\n      ? `${DIOM_BASED_URLS}/admin-resources-inventories?size=${size}&page=${page}`\r\n      : `${DIOM_BASED_URLS}/admin-resources-inventories?size=${size}&page=${page}&filter={\"where\":${filters}}`,\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token1,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    // apiError(resJson.error.message)\r\n    logoutUser(resJson.error.message)\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  const resourcesData = resJson.data.map((element, index) => ({\r\n    id: index + 1,\r\n    _id: element.id,\r\n    Resource: element.Name,\r\n    Location: element.BusinessName,\r\n    ResourceType: element.ResourceTypeName,\r\n  }));\r\n  return {\r\n    data: resourcesData.length > 0 ? resourcesData : [],\r\n    total: resJson ? resJson.total : 0,\r\n    hasNextPage: resJson.hasNextPage ?? false,\r\n    hasPreviousPage: resJson.hasPreviousPage ?? false,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\r\nexport const getSearchedResources = async (token) => {\r\n  const res = await fetch(`${DIOM_BASED_URLS}/admin-resources-inventories`, {\r\n    method: \"GET\",\r\n    redirect: \"follow\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n  });\r\n\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  const resourcessearchedData = resJson.data.map((element, index) => ({\r\n    id: index + 1,\r\n    _id: element.id,\r\n    Resource: element.Name,\r\n    Location: element.BusinessName,\r\n    ResourceType: element.ResourceTypeName,\r\n  }));\r\n  return {\r\n    data: resourcessearchedData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param {ResourceId} id\r\n * @param {JWT} token\r\n * @returns  object of a single resource\r\n */\r\nexport const getResource = async (id, token) => {\r\n  // return await (\r\n    const res =\r\n    await fetch(`${DIOM_BASED_URLS}/admin-resources-inventories/${id}`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n\r\n    if (!res.ok) {\r\n      const resJson = await res.json();\r\n      throw new Error(resJson.error.message);\r\n    }\r\n    const data = await res.json();\r\n    \r\n    return {\r\n      data\r\n    };\r\n  // ).json();\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}