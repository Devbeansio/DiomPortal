{"ast":null,"code":"import moment from \"moment\";\nimport { DIOM_BASED_URLS } from \"../config/url\";\nexport const getreportLocations = async (token, locationApplyFilter, reportFinalValues, locationInvalidatequerry) => {\n  var _await$await$fetch$js;\n\n  const diomBrandValues = reportFinalValues === null || reportFinalValues === void 0 ? void 0 : reportFinalValues.locationCategoriesId;\n  const res = (_await$await$fetch$js = await (await fetch(!locationApplyFilter || (diomBrandValues === null || diomBrandValues === void 0 ? void 0 : diomBrandValues.length) === 0 ? `${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"visibility\":true}}` : `${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"locationCategoriesId\":{\"inq\":${JSON.stringify(diomBrandValues)}}}}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json()) === null || _await$await$fetch$js === void 0 ? void 0 : _await$await$fetch$js.map(element => ({\n    value: element.id,\n    label: element.Name\n  }));\n  return [{\n    label: \"--All Locations\",\n    options: [...res]\n  }];\n};\nexport const getreportLocationBrand = async token => {\n  const res = (await (await fetch(`${DIOM_BASED_URLS}/admin-location-categories`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json()).map(element => ({\n    value: element.id,\n    label: element.name\n  }));\n  return [{\n    label: \"--All Brands\",\n    options: [...res]\n  }];\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of resourcetype dropdown in DIOM\r\n */\n\nexport const getResourcetypereports = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let resourcetypeApplyFilter = arguments.length > 1 ? arguments[1] : undefined;\n  let reportFinalValues = arguments.length > 2 ? arguments[2] : undefined;\n  const diomLocationValue = reportFinalValues === null || reportFinalValues === void 0 ? void 0 : reportFinalValues.businessId;\n  return await (await fetch(!resourcetypeApplyFilter || (diomLocationValue === null || diomLocationValue === void 0 ? void 0 : diomLocationValue.length) === 0 ? `${DIOM_BASED_URLS}/admin-resource-types-inventories` : `${DIOM_BASED_URLS}/admin-resource-types-inventories?filter={\"where\":{\"BusinessId\":{\"inq\":${JSON.stringify(diomLocationValue)}}}}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of Past in DIOM\r\n */\n\nexport const getPastreports = async (token, selectedReportType, postFilter, pageSize, currentPage) => {\n  return await (await fetch(!postFilter ? `${DIOM_BASED_URLS}/reports?page=${currentPage}&size=${pageSize}&filter={\"where\":{\"exported\": true}}` : `${DIOM_BASED_URLS}/reports?page=1&size=${pageSize}&filter={\"where\":{\"exported\": true,\"reportType\":\"${selectedReportType}\"}}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of New in DIOM\r\n */\n\nexport const getNewreports = async (token, selectedReportType, postFilter, pageSize, currentPage) => {\n  // return \n  const res = await fetch(!postFilter ? `${DIOM_BASED_URLS}/reports?page=${currentPage}&size=${pageSize}&filter={\"where\":{\"exported\": false}}` : `${DIOM_BASED_URLS}/reports?page=1&size=${pageSize}&filter={\"where\":{\"exported\": false,\"reportType\":\"${selectedReportType}\"}}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  } // const resJson = await res.json();\n\n\n  const newreports = res.map((e, index) => ({ ...e,\n    id: e.id,\n    reportName: e.reportName,\n    reportType: e.reportType,\n    locationBrands: e.locationBrands,\n    business: e.business,\n    resourceTypes: e.resourceTypes,\n    timeSlots: e.timeSlots,\n    userIndustries: e.userIndustries,\n    fileUrl: e.fileUrl,\n    timeRangeTotal: moment(e.fromTime).format(\"YYYY-MM-DD\") + \" \" + moment(e.toTime).format(\"YYYY-MM-DD\")\n  }));\n  return {\n    data: newreports,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\nexport const exportApiFunc = (requestOptions, enqueueSnackbar) => {\n  fetch(`${DIOM_BASED_URLS}/reports`, requestOptions);\n};","map":{"version":3,"sources":["D:/diom working project/staging/src/APIS/reports.js"],"names":["moment","DIOM_BASED_URLS","getreportLocations","token","locationApplyFilter","reportFinalValues","locationInvalidatequerry","diomBrandValues","locationCategoriesId","res","fetch","length","JSON","stringify","method","headers","Authorization","json","map","element","value","id","label","Name","options","getreportLocationBrand","name","getResourcetypereports","resourcetypeApplyFilter","diomLocationValue","businessId","getPastreports","selectedReportType","postFilter","pageSize","currentPage","getNewreports","ok","resJson","Error","error","message","newreports","e","index","reportName","reportType","locationBrands","business","resourceTypes","timeSlots","userIndustries","fileUrl","timeRangeTotal","fromTime","format","toTime","data","total","hasNextPage","hasPreviousPage","exportApiFunc","requestOptions","enqueueSnackbar"],"mappings":"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","sourcesContent":["import moment from \"moment\";\r\nimport { DIOM_BASED_URLS } from \"../config/url\";\r\n\r\nexport const getreportLocations = async (\r\n  token,\r\n  locationApplyFilter,\r\n  reportFinalValues,\r\n  locationInvalidatequerry\r\n) => {\r\n  const diomBrandValues = reportFinalValues?.locationCategoriesId;\r\n\r\n  const res = (\r\n    await (\r\n      await fetch(\r\n        !locationApplyFilter || diomBrandValues?.length === 0\r\n          ? `${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"visibility\":true}}`\r\n          : `${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"locationCategoriesId\":{\"inq\":${JSON.stringify(\r\n              diomBrandValues\r\n            )}}}}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        }\r\n      )\r\n    ).json()\r\n  )?.map((element) => ({\r\n    value: element.id,\r\n    label: element.Name,\r\n  }));\r\n  return [\r\n    {\r\n      label: \"--All Locations\",\r\n      options: [...res],\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getreportLocationBrand = async (token) => {\r\n  const res = (\r\n    await (\r\n      await fetch(`${DIOM_BASED_URLS}/admin-location-categories`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n    ).json()\r\n  ).map((element) => ({\r\n    value: element.id,\r\n    label: element.name,\r\n  }));\r\n  return [\r\n    {\r\n      label: \"--All Brands\",\r\n      options: [...res],\r\n    },\r\n  ];\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of resourcetype dropdown in DIOM\r\n */\r\n\r\nexport const getResourcetypereports = async (\r\n  token = \"\",\r\n  resourcetypeApplyFilter,\r\n  reportFinalValues\r\n) => {\r\n  const diomLocationValue = reportFinalValues?.businessId;\r\n \r\n\r\n  return await (\r\n    await fetch(\r\n      !resourcetypeApplyFilter || diomLocationValue?.length === 0\r\n        ? `${DIOM_BASED_URLS}/admin-resource-types-inventories`\r\n        : `${DIOM_BASED_URLS}/admin-resource-types-inventories?filter={\"where\":{\"BusinessId\":{\"inq\":${JSON.stringify(\r\n            diomLocationValue\r\n          )}}}}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n  ).json();\r\n};\r\n\r\n\r\n\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of Past in DIOM\r\n */\r\n\r\n export const getPastreports = async (token,selectedReportType,postFilter,pageSize,currentPage) => {\r\n  \r\n  \r\n  return await (\r\n    await fetch(\r\n      !postFilter?\r\n      `${DIOM_BASED_URLS}/reports?page=${currentPage}&size=${pageSize}&filter={\"where\":{\"exported\": true}}`\r\n      :`${DIOM_BASED_URLS}/reports?page=1&size=${pageSize}&filter={\"where\":{\"exported\": true,\"reportType\":\"${selectedReportType}\"}}`,\r\n      \r\n          {\r\n        \r\n          method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n  ).json();\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of New in DIOM\r\n */\r\n\r\n export const getNewreports = async (\r\n  token,selectedReportType,postFilter,pageSize,currentPage\r\n) => {\r\n\r\n\r\n  // return \r\n  const res =\r\n    await fetch(\r\n      !postFilter?\r\n       \r\n         `${DIOM_BASED_URLS}/reports?page=${currentPage}&size=${pageSize}&filter={\"where\":{\"exported\": false}}`\r\n         : `${DIOM_BASED_URLS}/reports?page=1&size=${pageSize}&filter={\"where\":{\"exported\": false,\"reportType\":\"${selectedReportType}\"}}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n  \r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  // const resJson = await res.json();\r\n  const newreports = res.map((e, index) => ({\r\n    ...e,\r\n    id: e.id,\r\n    reportName: e.reportName,\r\n    reportType: e.reportType,\r\n    locationBrands:e.locationBrands,\r\n    business:e.business,\r\n    resourceTypes:e.resourceTypes,\r\n    timeSlots:e.timeSlots,\r\n    userIndustries:e.userIndustries,\r\n    fileUrl:e.fileUrl,\r\n    timeRangeTotal:moment(e.fromTime).format(\"YYYY-MM-DD\" )+\" \"+ moment(e.toTime).format(\"YYYY-MM-DD\" )\r\n  }));\r\n\r\n  return {\r\n    data: newreports,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\nexport const exportApiFunc =( requestOptions,enqueueSnackbar) => {\r\n  fetch(`${DIOM_BASED_URLS}/reports`, requestOptions\r\n      )\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}