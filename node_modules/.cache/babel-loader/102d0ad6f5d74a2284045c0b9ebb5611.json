{"ast":null,"code":"import { DIOM_BASED_URLS } from \"../config/url\";\nimport moment from \"moment\";\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of BOOKING in DIOM\r\n */\n\nexport const getBooking = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let id = arguments.length > 1 ? arguments[1] : undefined;\n  return await (await fetch(`${DIOM_BASED_URLS}/admin-diom-bookings/${id}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of guests in DIOM\r\n */\n\nexport const getGuest = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let id = arguments.length > 1 ? arguments[1] : undefined;\n  return await (await fetch(`${DIOM_BASED_URLS}/admin-booking-guest/booking/${id}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of bookinguserdata in DIOM\r\n */\n\nexport const getbookinguser = async (token, id) => {\n  // if (id) {\n  return await (await fetch(`${DIOM_BASED_URLS}/users/${id}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json(); // }\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of bookings locations in DIOM\r\n */\n\nexport const getbookinglocations = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return await (await fetch(`${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"visibility\":true}}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};\n/**\r\n *\r\n * @param {*JWT} token\r\n * @returns get today bookings data for dropdown\r\n */\n\nexport const gettodaysbookings = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let applyFilter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let filters = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  // console.log(\"filters :\", filters);\n  // console.log(\"applyFilter : \", applyFilter);\n  const res = await fetch(!applyFilter ? `${DIOM_BASED_URLS}/admin-diom-bookings/today?size=${size}&page=${page}` : `${DIOM_BASED_URLS}/admin-diom-bookings/today/${filters}?size=${size}&page=${page}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const todayBookingsdata = resJson.data.map((booking, index) => ({ ...booking,\n    id: index + 1,\n    _id: booking.id,\n    updatedAt: moment(booking.updatedAt).format(\"YYYY-MM-DD HH:mm\"),\n    Bookingstartend: moment(booking.fromTime).format(\"MMM DD HH:mm\") + \" - \" + moment(booking.toTime).format(\"MMM DD HH:mm\"),\n    timeLogs: booking.timeLogs.length > 0 ? moment(booking.timeLogs[booking.timeLogs.length - 1].fromTime).format(\"HH:mm\") : null // booking.timeLogs.map((e) => moment(e.fromTime).format(\"HH:mm\"))\n    // .join(\", \"),\n\n  }));\n  return {\n    data: todayBookingsdata,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\n/**\r\n *\r\n * @param {*JWT} token\r\n * @returns get Fetched bookings data for dropdown\r\n */\n\nexport const getschduleddbookings = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let applyFilter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let filters = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  const res = await fetch(!applyFilter ? `${DIOM_BASED_URLS}/admin-diom-bookings/scheduled?size=${size}&page=${page}` : `${DIOM_BASED_URLS}/admin-diom-bookings/scheduled/${filters}?size=${size}&page=${page}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json(); // const result = applyFilter\n  //   ? (result = resJson.data.bookings)\n  //   : (result = resJson.data);\n\n  const schduledBookingsdata = resJson.data.map((booking, index) => ({ ...booking,\n    id: index + 1,\n    updatedAt: moment(booking.updatedAt).format(\"YYYY-MM-DD HH:mm\"),\n    _id: booking.id,\n    Bookingstartend: moment(booking.fromTime).format(\"MMM DD HH:mm\") + \" - \" + moment(booking.toTime).format(\"MMM DD HH:mm\"),\n    timeLogs: booking.timeLogs.map(e => moment(e.fromTime).format(\"HH:mm\"))\n  }));\n  return {\n    data: schduledBookingsdata,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\n/**\r\n *\r\n * @param {*JWT} token\r\n * @returns get Fetched Past bookings data for dropdown\r\n */\n\nexport const getPasttbookings = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let applyFilter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let filters = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  const res = await fetch(!applyFilter ? `${DIOM_BASED_URLS}/admin-diom-bookings/past?size=${size}&page=${page}` : `${DIOM_BASED_URLS}/admin-diom-bookings/past/${filters}?size=${size}&page=${page}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json(); // const result = applyFilter\n  //   ? (result = resJson.data.bookings)\n  //   : (result = resJson.data);\n\n  const pastBookingsdata = resJson.data.map((booking, index) => ({ ...booking,\n    id: index + 1,\n    updatedAt: moment(booking.updatedAt).format(\"YYYY-MM-DD HH:mm\"),\n    _id: booking.id,\n    Bookingstartend: moment(booking.fromTime).format(\"MMM DD HH:mm\") + \" - \" + moment(booking.toTime).format(\"MMM DD HH:mm\") // timeLogs: booking.timeLogs.map((e,i) =>(e.fromTime? moment(e.fromTime).format(\"HH:mm\") :null)),\n\n  }));\n  return {\n    data: pastBookingsdata,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};","map":{"version":3,"sources":["D:/diom working project/staging/src/APIS/bookings.js"],"names":["DIOM_BASED_URLS","moment","getBooking","token","id","fetch","method","redirect","headers","Authorization","json","getGuest","getbookinguser","getbookinglocations","gettodaysbookings","size","page","applyFilter","filters","res","ok","resJson","Error","error","message","todayBookingsdata","data","map","booking","index","_id","updatedAt","format","Bookingstartend","fromTime","toTime","timeLogs","length","total","hasNextPage","hasPreviousPage","getschduleddbookings","schduledBookingsdata","e","getPasttbookings","pastBookingsdata"],"mappings":"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","sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\nimport moment from \"moment\";\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of BOOKING in DIOM\r\n */\r\nexport const getBooking = async (token = \"\", id) => {\r\n  return await (\r\n    await fetch(`${DIOM_BASED_URLS}/admin-diom-bookings/${id}`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n  ).json();\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of guests in DIOM\r\n */\r\n\r\nexport const getGuest = async (token = \"\", id) => {\r\n  return await (\r\n    await fetch(`${DIOM_BASED_URLS}/admin-booking-guest/booking/${id}`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n  ).json();\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of bookinguserdata in DIOM\r\n */\r\n\r\nexport const getbookinguser = async (token, id) => {\r\n  // if (id) {\r\n  return await (\r\n    await fetch(`${DIOM_BASED_URLS}/users/${id}`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n  ).json();\r\n  // }\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of bookings locations in DIOM\r\n */\r\n\r\nexport const getbookinglocations = async (token = \"\") => {\r\n  return await (\r\n    await fetch(\r\n      `${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"visibility\":true}}`,\r\n      {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n  ).json();\r\n};\r\n\r\n/**\r\n *\r\n * @param {*JWT} token\r\n * @returns get today bookings data for dropdown\r\n */\r\nexport const gettodaysbookings = async (\r\n  size = 30,\r\n  page = 1,\r\n  token = \"\",\r\n  applyFilter = false,\r\n  filters = {}\r\n) => {\r\n  // console.log(\"filters :\", filters);\r\n  // console.log(\"applyFilter : \", applyFilter);\r\n  const res = await fetch(\r\n    !applyFilter\r\n      ? `${DIOM_BASED_URLS}/admin-diom-bookings/today?size=${size}&page=${page}`\r\n      : `${DIOM_BASED_URLS}/admin-diom-bookings/today/${filters}?size=${size}&page=${page}`,\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  const todayBookingsdata = resJson.data.map((booking, index) => ({\r\n    ...booking,\r\n\r\n    id: index + 1,\r\n    _id: booking.id,\r\n    updatedAt: moment(booking.updatedAt).format(\"YYYY-MM-DD HH:mm\"),\r\n    Bookingstartend:\r\n      moment(booking.fromTime).format(\"MMM DD HH:mm\") +\r\n      \" - \" +\r\n      moment(booking.toTime).format(\"MMM DD HH:mm\"),\r\n\r\n    timeLogs:\r\n      booking.timeLogs.length > 0\r\n        ? moment(booking.timeLogs[booking.timeLogs.length - 1].fromTime).format(\r\n            \"HH:mm\"\r\n          )\r\n        : null,\r\n\r\n    // booking.timeLogs.map((e) => moment(e.fromTime).format(\"HH:mm\"))\r\n    // .join(\", \"),\r\n  }));\r\n  return {\r\n    data: todayBookingsdata,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param {*JWT} token\r\n * @returns get Fetched bookings data for dropdown\r\n */\r\nexport const getschduleddbookings = async (\r\n  size = 30,\r\n  page = 1,\r\n  token = \"\",\r\n  applyFilter = false,\r\n  filters = {}\r\n) => {\r\n  const res = await fetch(\r\n    !applyFilter\r\n      ? `${DIOM_BASED_URLS}/admin-diom-bookings/scheduled?size=${size}&page=${page}`\r\n      : `${DIOM_BASED_URLS}/admin-diom-bookings/scheduled/${filters}?size=${size}&page=${page}`,\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n\r\n  const resJson = await res.json();\r\n\r\n  // const result = applyFilter\r\n  //   ? (result = resJson.data.bookings)\r\n  //   : (result = resJson.data);\r\n\r\n  const schduledBookingsdata = resJson.data.map((booking, index) => ({\r\n    ...booking,\r\n    id: index + 1,\r\n    updatedAt: moment(booking.updatedAt).format(\"YYYY-MM-DD HH:mm\"),\r\n    _id: booking.id,\r\n\r\n    Bookingstartend:\r\n      moment(booking.fromTime).format(\"MMM DD HH:mm\") +\r\n      \" - \" +\r\n      moment(booking.toTime).format(\"MMM DD HH:mm\"),\r\n    timeLogs: booking.timeLogs.map((e) => moment(e.fromTime).format(\"HH:mm\")),\r\n  }));\r\n  return {\r\n    data: schduledBookingsdata,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param {*JWT} token\r\n * @returns get Fetched Past bookings data for dropdown\r\n */\r\nexport const getPasttbookings = async (\r\n  size = 30,\r\n  page = 1,\r\n  token = \"\",\r\n  applyFilter = false,\r\n  filters = {}\r\n) => {\r\n  const res = await fetch(\r\n    !applyFilter\r\n      ? `${DIOM_BASED_URLS}/admin-diom-bookings/past?size=${size}&page=${page}`\r\n      : `${DIOM_BASED_URLS}/admin-diom-bookings/past/${filters}?size=${size}&page=${page}`,\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n\r\n  const resJson = await res.json();\r\n\r\n  // const result = applyFilter\r\n  //   ? (result = resJson.data.bookings)\r\n  //   : (result = resJson.data);\r\n\r\n  const pastBookingsdata = resJson.data.map((booking, index) => ({\r\n    ...booking,\r\n    id: index + 1,\r\n    updatedAt: moment(booking.updatedAt).format(\"YYYY-MM-DD HH:mm\"),\r\n    _id: booking.id,\r\n    Bookingstartend:\r\n      moment(booking.fromTime).format(\"MMM DD HH:mm\") +\r\n      \" - \" +\r\n      moment(booking.toTime).format(\"MMM DD HH:mm\"),\r\n    // timeLogs: booking.timeLogs.map((e,i) =>(e.fromTime? moment(e.fromTime).format(\"HH:mm\") :null)),\r\n  }));\r\n  return {\r\n    data: pastBookingsdata,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}