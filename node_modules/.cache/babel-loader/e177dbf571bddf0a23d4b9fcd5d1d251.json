{"ast":null,"code":"import _slicedToArray from\"D:/diom working project/staging/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import{useQueryClient}from\"react-query\";import{getLocationBrands}from\"../../../APIS/locationBrands\";import{usePaginatedQuery}from\"../../../hooks/query\";export var useLocationBrands=function useLocationBrands(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var token=localStorage.getItem(\"Token\");var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),currentPage=_useState4[0],setCurrentPage=_useState4[1];var _useState5=useState(50),_useState6=_slicedToArray(_useState5,2),pageSize=_useState6[0],setPageSize=_useState6[1];var changeCurrentPage=function changeCurrentPage(pageNum){return setCurrentPage(pageNum);};var queryClient=useQueryClient();var _usePaginatedQuery=usePaginatedQuery([\"locationbrands\",currentPage],function(){return getLocationBrands(pageSize,currentPage,token);}),_usePaginatedQuery$da=_usePaginatedQuery.data,locationBrandsData=_usePaginatedQuery$da.data,hasNextPage=_usePaginatedQuery$da.hasNextPage,hasPreviousPage=_usePaginatedQuery$da.hasPreviousPage,total=_usePaginatedQuery$da.total,isLoading=_usePaginatedQuery.isLoading;var toggle=function toggle(){setIsOpen(!isOpen);};var pagelengthnum=function pagelengthnum(e){if(e.target.value===\"1\"){setPageSize(10);}else if(e.target.value===\"2\"){setPageSize(30);}else if(e.target.value===\"3\"){setPageSize(50);}};var pageOptions={sizePerPage:pageSize,totalSize:total!==null&&total!==void 0?total:0,custom:true};useEffect(function(){// FOR PRE-FETCHING NEXT PAGE\nif(hasNextPage){var nextPage=currentPage+1;queryClient.prefetchQuery([\"locationbrands\",nextPage],function(){return getLocationBrands(pageSize,nextPage,token);});}},[currentPage,queryClient]);return{currentPage:currentPage,pageOptions:pageOptions,locationBrandsData:locationBrandsData,hasNextPage:hasNextPage,hasPreviousPage:hasPreviousPage,total:total,pagelengthnum:pagelengthnum,pageSize:pageSize,toggle:toggle,isOpen:isOpen,isLoading:isLoading,changeCurrentPage:changeCurrentPage};};","map":{"version":3,"sources":["D:/diom working project/staging/src/pages/Locations/LocationBrands/useLocationBrands.js"],"names":["useEffect","useState","useQueryClient","getLocationBrands","usePaginatedQuery","useLocationBrands","isOpen","setIsOpen","token","localStorage","getItem","currentPage","setCurrentPage","pageSize","setPageSize","changeCurrentPage","pageNum","queryClient","data","locationBrandsData","hasNextPage","hasPreviousPage","total","isLoading","toggle","pagelengthnum","e","target","value","pageOptions","sizePerPage","totalSize","custom","nextPage","prefetchQuery"],"mappings":"qHAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,cAAT,KAA+B,aAA/B,CACA,OAASC,iBAAT,KAAkC,8BAAlC,CACA,OAASC,iBAAT,KAAkC,sBAAlC,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CACrC,cAA4BJ,QAAQ,CAAC,KAAD,CAApC,wCAAOK,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,eAAsCT,QAAQ,CAAC,CAAD,CAA9C,yCAAOU,WAAP,eAAoBC,cAApB,eACA,eAAgCX,QAAQ,CAAC,EAAD,CAAxC,yCAAOY,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,OAAD,QAAaJ,CAAAA,cAAc,CAACI,OAAD,CAA3B,EAA1B,CACA,GAAMC,CAAAA,WAAW,CAAGf,cAAc,EAAlC,CAEA,uBAGIE,iBAAiB,CAAC,CAAC,gBAAD,CAAmBO,WAAnB,CAAD,CAAkC,iBACrDR,CAAAA,iBAAiB,CAACU,QAAD,CAAWF,WAAX,CAAwBH,KAAxB,CADoC,EAAlC,CAHrB,0CACEU,IADF,CACgBC,kBADhB,uBACUD,IADV,CACoCE,WADpC,uBACoCA,WADpC,CACiDC,eADjD,uBACiDA,eADjD,CACkEC,KADlE,uBACkEA,KADlE,CAEEC,SAFF,oBAEEA,SAFF,CAOA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBjB,SAAS,CAAC,CAACD,MAAF,CAAT,CACD,CAFD,CAGA,GAAMmB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3B,GAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,GAAmB,GAAvB,CAA4B,CAC1Bd,WAAW,CAAC,EAAD,CAAX,CACD,CAFD,IAEO,IAAIY,CAAC,CAACC,MAAF,CAASC,KAAT,GAAmB,GAAvB,CAA4B,CACjCd,WAAW,CAAC,EAAD,CAAX,CACD,CAFM,IAEA,IAAIY,CAAC,CAACC,MAAF,CAASC,KAAT,GAAmB,GAAvB,CAA4B,CACjCd,WAAW,CAAC,EAAD,CAAX,CACD,CACF,CARD,CASA,GAAMe,CAAAA,WAAW,CAAG,CAClBC,WAAW,CAAEjB,QADK,CAElBkB,SAAS,CAAET,KAAF,SAAEA,KAAF,UAAEA,KAAF,CAAW,CAFF,CAGlBU,MAAM,CAAE,IAHU,CAApB,CAKAhC,SAAS,CAAC,UAAM,CACd;AACA,GAAIoB,WAAJ,CAAiB,CACf,GAAMa,CAAAA,QAAQ,CAAGtB,WAAW,CAAG,CAA/B,CACAM,WAAW,CAACiB,aAAZ,CAA0B,CAAC,gBAAD,CAAmBD,QAAnB,CAA1B,CAAwD,iBACtD9B,CAAAA,iBAAiB,CAACU,QAAD,CAAWoB,QAAX,CAAqBzB,KAArB,CADqC,EAAxD,EAGD,CACF,CARQ,CAQN,CAACG,WAAD,CAAcM,WAAd,CARM,CAAT,CAUA,MAAO,CACLN,WAAW,CAAXA,WADK,CAELkB,WAAW,CAAXA,WAFK,CAGLV,kBAAkB,CAAlBA,kBAHK,CAILC,WAAW,CAAXA,WAJK,CAKLC,eAAe,CAAfA,eALK,CAMLC,KAAK,CAALA,KANK,CAOLG,aAAa,CAAbA,aAPK,CAQLZ,QAAQ,CAARA,QARK,CASLW,MAAM,CAANA,MATK,CAULlB,MAAM,CAANA,MAVK,CAWLiB,SAAS,CAATA,SAXK,CAaLR,iBAAiB,CAAjBA,iBAbK,CAAP,CAeD,CAzDM","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { getLocationBrands } from \"../../../APIS/locationBrands\";\r\nimport { usePaginatedQuery } from \"../../../hooks/query\";\r\n\r\nexport const useLocationBrands = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const token = localStorage.getItem(\"Token\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(50);\r\n  const changeCurrentPage = (pageNum) => setCurrentPage(pageNum);\r\n  const queryClient = useQueryClient();\r\n\r\n  const {\r\n    data: { data: locationBrandsData, hasNextPage, hasPreviousPage, total },\r\n    isLoading,\r\n  } = usePaginatedQuery([\"locationbrands\", currentPage], () =>\r\n    getLocationBrands(pageSize, currentPage, token)\r\n  );\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const pagelengthnum = (e) => {\r\n    if (e.target.value === \"1\") {\r\n      setPageSize(10);\r\n    } else if (e.target.value === \"2\") {\r\n      setPageSize(30);\r\n    } else if (e.target.value === \"3\") {\r\n      setPageSize(50);\r\n    }\r\n  };\r\n  const pageOptions = {\r\n    sizePerPage: pageSize,\r\n    totalSize: total ?? 0,\r\n    custom: true,\r\n  };\r\n  useEffect(() => {\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n    if (hasNextPage) {\r\n      const nextPage = currentPage + 1;\r\n      queryClient.prefetchQuery([\"locationbrands\", nextPage], () =>\r\n        getLocationBrands(pageSize, nextPage, token)\r\n      );\r\n    }\r\n  }, [currentPage, queryClient]);\r\n\r\n  return {\r\n    currentPage,\r\n    pageOptions,\r\n    locationBrandsData,\r\n    hasNextPage,\r\n    hasPreviousPage,\r\n    total,\r\n    pagelengthnum,\r\n    pageSize,\r\n    toggle,\r\n    isOpen,\r\n    isLoading,\r\n\r\n    changeCurrentPage,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}