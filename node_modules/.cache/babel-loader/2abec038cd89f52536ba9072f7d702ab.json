{"ast":null,"code":"import { DIOM_BASED_URLS } from \"../config/url\";\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\n\nexport const getCategories = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  const res = await fetch(`${DIOM_BASED_URLS}/resource-type-categories`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const categoriesData = resJson.data.map((e, i) => ({\n    id: i + 1,\n    _id: e.id,\n    categoryName: e.name,\n    resourcetype: e.resourceTypes.map(f => f.name).join(\", \")\n  }));\n  return {\n    data: categoriesData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of category details in DIOM\r\n */\n\nexport const getCategoryDetails = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let id = arguments.length > 1 ? arguments[1] : undefined;\n  return await (await await fetch(`${DIOM_BASED_URLS}/resource-type-categories/${id}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of category detail dropdown in DIOM\r\n */\n\nexport const getCategoryDetaildropdown = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let id = arguments.length > 1 ? arguments[1] : undefined;\n  return await (await await fetch(`${DIOM_BASED_URLS}/admin-resource-types-inventories?filter={\"where\":{\"resourceTypeCategoryId\":\"${id}\"}}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of resourcetype dropdown in DIOM\r\n */\n\nexport const getResourcetypeDropdown = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let id = arguments.length > 1 ? arguments[1] : undefined;\n  return await (await await fetch(`${DIOM_BASED_URLS}/admin-resource-types-inventories`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};","map":{"version":3,"sources":["D:/diom working project/staging/src/APIS/categories.js"],"names":["DIOM_BASED_URLS","getCategories","size","page","token","res","fetch","method","redirect","headers","Authorization","ok","resJson","json","Error","error","message","categoriesData","data","map","e","i","id","_id","categoryName","name","resourcetype","resourceTypes","f","join","total","hasNextPage","hasPreviousPage","getCategoryDetails","getCategoryDetaildropdown","getResourcetypeDropdown"],"mappings":"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","sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\r\n\r\nexport const getCategories = async (size = 30, page = 1, token = \"\") => {\r\n  const res = await fetch(\r\n    `${DIOM_BASED_URLS}/resource-type-categories`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n\r\n  const categoriesData = resJson.data.map((e, i) => ({\r\n    id: i + 1,\r\n    _id: e.id,\r\n    categoryName: e.name,\r\n    resourcetype: e.resourceTypes.map((f) => f.name).join(\", \"),\r\n  }));\r\n\r\n  return {\r\n    data: categoriesData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of category details in DIOM\r\n */\r\n\r\nexport const getCategoryDetails = async (token = \"\", id) => {\r\n  return await (\r\n    await await fetch(`${DIOM_BASED_URLS}/resource-type-categories/${id}`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n  ).json();\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of category detail dropdown in DIOM\r\n */\r\n\r\nexport const getCategoryDetaildropdown = async (token = \"\", id) => {\r\n  return await (\r\n    await await fetch(\r\n      `${DIOM_BASED_URLS}/admin-resource-types-inventories?filter={\"where\":{\"resourceTypeCategoryId\":\"${id}\"}}`,\r\n      {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n  ).json();\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of resourcetype dropdown in DIOM\r\n */\r\n\r\nexport const getResourcetypeDropdown = async (token = \"\", id) => {\r\n  return await (\r\n    await await fetch(`${DIOM_BASED_URLS}/admin-resource-types-inventories`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n  ).json();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}