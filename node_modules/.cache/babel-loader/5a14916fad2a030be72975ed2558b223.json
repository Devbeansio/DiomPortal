{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport { getDataLogs } from '../../APIS/dataLogs';\nimport { DIOM_BASED_URLS } from '../../config/url';\nimport { useAllDataQuery, usePaginatedQuery } from '../../hooks/query';\n\nconst UseDataLogs = () => {\n  _s();\n\n  const token = localStorage.getItem(\"Token\");\n  const [modal_static, setModal_static] = useState(false);\n  const [logsDataDetail, setLogsDataDetail] = useState();\n  const [dataDetailId, setDataDetailId] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(50);\n\n  const changeCurrentPage = pageNum => setCurrentPage(pageNum);\n\n  const {\n    data: logsDataa,\n    total,\n    hasNextPage,\n    hasPreviousPage\n  } = useAllDataQuery([\"GetDataLogsss\", `${currentPage}`, `${pageSize}`], () => getDataLogs(token, currentPage, pageSize));\n  const logsData = logsDataa === null || logsDataa === void 0 ? void 0 : logsDataa.data;\n  console.log(\"hasNextPage : \", hasNextPage);\n\n  const removeBodyCss = () => {\n    document.body.classList.add(\"no_padding\");\n  };\n\n  const tog_static = () => {\n    setModal_static(!modal_static);\n    removeBodyCss();\n  };\n\n  const logdetialsfunc = async logId => {\n    console.log(\"its ID ===>\", logId); //starts\n\n    try {\n      const response = await fetch(`${DIOM_BASED_URLS}/hyper-pay-logs/${logId}`, {\n        method: 'GET',\n        headers: {\n          Authorization: \"Bearer \" + token,\n          Accept: \"*/*\",\n          // \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      });\n\n      if (!response.ok) {\n        // if(response.status === 401){\n        //   setError(response.statusText)\n        //   history.push(\"/login\");\n        // }\n        throw new Error(response.statusText);\n      }\n\n      const result = await response.json();\n      const logsDataDeails = result;\n      console.log(\"logsDataDeails:::::::::::::logsDataDeails\", logsDataDeails.hyperPayMessage);\n      setLogsDataDetail(logsDataDeails);\n      setModal_static(true);\n    } catch (error) {\n      console.log(\"error\", error);\n    } //ends\n    // setDataDetailId(logId)\n\n  };\n\n  const pageOptions = {\n    sizePerPage: pageSize,\n    totalSize: total !== null && total !== void 0 ? total : 0,\n    custom: true\n  };\n\n  const pagelengthnum = e => {\n    if (e.target.value === \"1\") {\n      setPageSize(10);\n    } else if (e.target.value === \"2\") {\n      setPageSize(30);\n    } else if (e.target.value === \"3\") {\n      setPageSize(50);\n    }\n  };\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return {\n    logdetialsfunc,\n    tog_static,\n    logsData,\n    modal_static,\n    setModal_static,\n    logsDataDetail,\n    pageOptions,\n    pagelengthnum,\n    currentPage,\n    isOpen,\n    pageSize,\n    hasNextPage,\n    changeCurrentPage,\n    toggle\n  };\n};\n\n_s(UseDataLogs, \"Gy77WDsnswMeyOSfckv/PCmWxj8=\", false, function () {\n  return [useAllDataQuery];\n});\n\n_c = UseDataLogs;\nexport default UseDataLogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseDataLogs\");","map":{"version":3,"sources":["D:/diom working project/staging/src/pages/DataLogs/useDataLogs.js"],"names":["React","useState","useEffect","useQuery","getDataLogs","DIOM_BASED_URLS","useAllDataQuery","usePaginatedQuery","UseDataLogs","token","localStorage","getItem","modal_static","setModal_static","logsDataDetail","setLogsDataDetail","dataDetailId","setDataDetailId","isOpen","setIsOpen","currentPage","setCurrentPage","pageSize","setPageSize","changeCurrentPage","pageNum","data","logsDataa","total","hasNextPage","hasPreviousPage","logsData","console","log","removeBodyCss","document","body","classList","add","tog_static","logdetialsfunc","logId","response","fetch","method","headers","Authorization","Accept","ok","Error","statusText","result","json","logsDataDeails","hyperPayMessage","error","pageOptions","sizePerPage","totalSize","custom","pagelengthnum","e","target","value","toggle"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { useQuery } from 'react-query';\r\nimport { getDataLogs } from '../../APIS/dataLogs';\r\nimport { DIOM_BASED_URLS } from '../../config/url';\r\nimport { useAllDataQuery, usePaginatedQuery } from '../../hooks/query';\r\n\r\nconst UseDataLogs = () => {\r\n    const token = localStorage.getItem(\"Token\");\r\n    const [modal_static, setModal_static] = useState(false);\r\n    const[logsDataDetail,setLogsDataDetail]=useState();\r\n    const [dataDetailId,setDataDetailId]=useState()\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(50);\r\n  const changeCurrentPage = (pageNum) => setCurrentPage(pageNum);\r\n\r\n\r\n    const { data:logsDataa ,total, hasNextPage, hasPreviousPage} = useAllDataQuery(\r\n        [\"GetDataLogsss\",`${currentPage}` ,`${pageSize}`],\r\n        () => getDataLogs(token,currentPage,pageSize)\r\n      );\r\n      const logsData = logsDataa?.data\r\n\r\n      console.log(\"hasNextPage : \",hasNextPage)\r\n    const removeBodyCss = () => {\r\n      document.body.classList.add(\"no_padding\");\r\n    };\r\n      const tog_static = () => {\r\n        setModal_static(!modal_static);\r\n    \r\n        removeBodyCss();\r\n      };\r\n\r\n\r\n    \r\n\r\n\r\n    const  logdetialsfunc = async(logId)=>{\r\n        \r\nconsole.log(\"its ID ===>\",logId)\r\n//starts\r\ntry{\r\nconst response = await   fetch(\r\n  `${DIOM_BASED_URLS}/hyper-pay-logs/${logId}`,\r\n  {\r\n    method: 'GET',\r\n    headers:{\r\nAuthorization:\"Bearer \" + token,\r\nAccept: \"*/*\",\r\n// \"Content-Type\": \"application/json\",\r\n\"Access-Control-Allow-Origin\": \"*\",\r\n    }\r\n  }\r\n)\r\n\r\nif (!response.ok) {\r\n  // if(response.status === 401){\r\n  //   setError(response.statusText)\r\n  //   history.push(\"/login\");\r\n  // }\r\n  throw new Error(response.statusText);\r\n}\r\nconst result = await response.json();\r\nconst logsDataDeails = result\r\nconsole.log(\"logsDataDeails:::::::::::::logsDataDeails\",logsDataDeails.hyperPayMessage)\r\n       setLogsDataDetail(logsDataDeails)\r\n       setModal_static(true)\r\n} catch(error){ \r\n  console.log(\"error\", error)\r\n}\r\n//ends\r\n\r\n\r\n\r\n\r\n// setDataDetailId(logId)\r\n      }\r\n\r\n\r\n      const pageOptions = {\r\n        sizePerPage: pageSize,\r\n        totalSize: total ?? 0,\r\n        custom: true,\r\n      };\r\n\r\n      const pagelengthnum = (e) => {\r\n        if (e.target.value === \"1\") {\r\n          setPageSize(10);\r\n        } else if (e.target.value === \"2\") {\r\n          setPageSize(30);\r\n        } else if (e.target.value === \"3\") {\r\n          setPageSize(50);\r\n        }\r\n      };\r\n      const toggle = () => {\r\n        setIsOpen(!isOpen);\r\n      };\r\n     \r\n\r\n\r\n  return {\r\n    logdetialsfunc,\r\n    tog_static,\r\n    logsData,\r\n    modal_static, \r\n    setModal_static,\r\n    logsDataDetail,\r\n    pageOptions,\r\n    pagelengthnum,\r\n    currentPage,\r\n    isOpen,\r\n    pageSize,\r\n    hasNextPage,\r\n\r\n    changeCurrentPage,\r\n    toggle\r\n  }\r\n   \r\n  \r\n}\r\n\r\nexport default UseDataLogs"]},"metadata":{},"sourceType":"module"}