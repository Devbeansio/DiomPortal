{"ast":null,"code":"var _jsxFileName = \"D:\\\\diom working project\\\\staging\\\\src\\\\pages\\\\Inventories\\\\FloorPlan\\\\FloorPlanDetail\\\\useFloorPlanDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { DIOM_BASED_URLS } from \"../../../../config/url\";\nimport { useParams } from \"react-router-dom\";\nimport { getFloorPlansNames } from \"../../../../APIS/floorplans\";\nimport { useQueryClient, useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useFloorPlanDetail = () => {\n  _s();\n\n  var _floorPlanData$data;\n\n  const QueryClient = useQueryClient();\n  const [error, setError] = useState(null);\n  const [modal_static, setModal_static] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState({});\n  const [selectLocationName, setSelectLocationName] = useState(\"\");\n  const [selectLocationNameById, setSelectLocationNameById] = useState(\"\");\n  const [modal_static1, setModal_static1] = useState(false);\n  const [selectLocationNamefloorname, setSelectLocationNamefloorname] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n\n  const handleSelectGroup = selectedGroup => {\n    setSelectedLocation(selectedGroup);\n    setSelectLocationName(selectedGroup.label);\n  };\n\n  const {\n    floorid\n  } = useParams();\n  const history = useHistory();\n  const token = localStorage.getItem(\"Token\");\n\n  const formatBytes = function (bytes) {\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  const handleAcceptedFiles = files => {\n    files.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file),\n      htmlFormattedSize: formatBytes(file.size)\n    }));\n    setSelectedFiles(files);\n  };\n\n  const tog_static1 = () => {\n    setModal_static1(!modal_static1);\n    removeBodyCss();\n  };\n\n  function Offsymbol(text) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100%\",\n        fontSize: 12,\n        color: \"#fff\",\n        paddingRight: 2\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n  function OnSymbol(text) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100%\",\n        fontSize: 12,\n        color: \"#fff\",\n        paddingRight: 2\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n  const getFloorPlansStatusFunc = (e, _id) => {\n    console.log(\"hey i am here ===>> \", e, floorid, _id); // fetch(\n    //   `${DIOM_BASED_URLS}/admin-business-locations/${floorid}/floorpans/29yxrn5Nj`,\n    //   {\n    //     method: \"POST\",\n    //     headers: {\n    //       Accept: \"application/json, text/plain\",\n    //       \"Content-Type\": \"application/json;charset=UTF-8\",\n    //       Authorization: \"Bearer \" + token,\n    //     },\n    //     body: JSON.stringify({\n    //       visibility: `${e}`,\n    //     }),\n    //   }\n    // )\n    //   .then((result3) => {\n    //     if (result3.status === 200) {\n    //       toast.success(\"Updated Successfully\");\n    //     } else if (result3.status === 204) {\n    //       toast.success(\"Updated Successfully\");\n    //     } else {\n    //       toast.error(\" Something went wrong\");\n    //     }\n    //   })\n    //   .catch((error) => toast.error(\" Something went wrong\"));\n  };\n\n  const namefunc = e => {\n    setSelectLocationNameById(prev => ({ ...prev,\n      Name: e.target.value\n    }));\n  };\n\n  const removeBodyCss = () => {\n    document.body.classList.add(\"no_padding\");\n  };\n\n  const tog_static = () => {\n    setModal_static(!modal_static);\n    removeBodyCss();\n  };\n\n  const uploadFile = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", `Bearer ${localStorage.getItem(\"Token\")}`);\n    var formdata = new FormData();\n    formdata.append(\"file\", selectedFiles[0], selectedFiles[0].name);\n    formdata.append(\"floorplanName\", selectLocationNameById.Name);\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: formdata,\n      redirect: \"follow\"\n    };\n    fetch(`${DIOM_BASED_URLS}/admin-business-locations/${selectedLocation.value}/floorpans`, requestOptions).then(response => response.json()).then(result => {\n      if (result[0].statusCode === 200) {\n        toast.success(\"Floorplans Added Succufully\");\n      } else if (result[0].statusCode === 204) {\n        toast.success(\"Floorplans Added Succufully\");\n      } else {\n        toast.error(\" Something went wrong\");\n      }\n\n      setModal_static(false);\n    }).catch(error => setError(error.message), toast.error(\" Something went wrong\"));\n  };\n\n  const deleteFloorPlansFunc = () => {\n    fetch(`${DIOM_BASED_URLS}/admin-business-locations/${floorid}/floorpans/selectLocationNamefloorname[0]._id`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json, text/plain\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n        Authorization: \"Bearer \" + token\n      },\n      body: JSON.stringify({})\n    }).then(result3 => {\n      if (result3.status === 200) {\n        toast.success(\" Successfully Deleted\");\n        setModal_static1(false);\n        QueryClient.invalidateQueries(\"floorplanname\");\n      } else if (result3.status === 204) {\n        toast.success(\" Successfullyn Deleted\");\n        setModal_static1(false);\n        QueryClient.invalidateQueries(\"floorplanname\");\n      } else {\n        toast.error(\" Something went wrong\");\n        setModal_static1(false);\n        QueryClient.invalidateQueries(\"floorplanname\");\n      }\n    }).catch(error => toast.error(\" Something went wrong\"));\n  }; // ************* \n\n\n  const floorPlanData = useQuery([\"floorplanname\", floorid], () => getFloorPlansNames(token, floorid));\n  const floorPlanNameData = floorPlanData === null || floorPlanData === void 0 ? void 0 : (_floorPlanData$data = floorPlanData.data) === null || _floorPlanData$data === void 0 ? void 0 : _floorPlanData$data.data; // *************\n\n  const getlocations = async () => {\n    setSelectLocationNameById(floorPlanNameData);\n    const floornames = floorPlanNameData.floorPlans.map(e => ({\n      _id: e._id,\n      imageUrl: e.imageUrl\n    }));\n    setSelectLocationNamefloorname(floornames);\n  };\n\n  useEffect(() => {\n    (async () => {\n      floorPlanNameData && (await getlocations());\n    })();\n  }, [floorPlanNameData]);\n  return {\n    error,\n    setError,\n    modal_static,\n    setModal_static,\n    selectedFiles,\n    setSelectedFiles,\n    selectedLocation,\n    setSelectedLocation,\n    selectLocationName,\n    setSelectLocationName,\n    selectLocationNameById,\n    setSelectLocationNameById,\n    selectLocationNamefloorname,\n    setSelectLocationNamefloorname,\n    loaded,\n    setLoaded,\n    handleSelectGroup,\n    handleAcceptedFiles,\n    namefunc,\n    uploadFile,\n    tog_static,\n    Offsymbol,\n    OnSymbol,\n    deleteFloorPlansFunc,\n    getlocations,\n    modal_static1,\n    setModal_static1,\n    getFloorPlansStatusFunc,\n    tog_static1\n  };\n};\n\n_s(useFloorPlanDetail, \"c/JBU7umT7yuyrngySqa892/t8M=\", false, function () {\n  return [useQueryClient, useParams, useHistory, useQuery];\n});\n\nexport default useFloorPlanDetail;","map":{"version":3,"sources":["D:/diom working project/staging/src/pages/Inventories/FloorPlan/FloorPlanDetail/useFloorPlanDetail.js"],"names":["useState","useEffect","useHistory","toast","DIOM_BASED_URLS","useParams","getFloorPlansNames","useQueryClient","useQuery","useFloorPlanDetail","QueryClient","error","setError","modal_static","setModal_static","selectedFiles","setSelectedFiles","selectedLocation","setSelectedLocation","selectLocationName","setSelectLocationName","selectLocationNameById","setSelectLocationNameById","modal_static1","setModal_static1","selectLocationNamefloorname","setSelectLocationNamefloorname","loaded","setLoaded","handleSelectGroup","selectedGroup","label","floorid","history","token","localStorage","getItem","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","handleAcceptedFiles","files","map","file","Object","assign","preview","URL","createObjectURL","htmlFormattedSize","size","tog_static1","removeBodyCss","Offsymbol","text","display","justifyContent","alignItems","height","fontSize","color","paddingRight","OnSymbol","getFloorPlansStatusFunc","e","_id","console","namefunc","prev","Name","target","value","document","body","classList","add","tog_static","uploadFile","myHeaders","Headers","append","formdata","FormData","name","requestOptions","method","headers","redirect","fetch","then","response","json","result","statusCode","success","catch","message","deleteFloorPlansFunc","Accept","Authorization","JSON","stringify","result3","status","invalidateQueries","floorPlanData","floorPlanNameData","data","getlocations","floornames","floorPlans","imageUrl"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { DIOM_BASED_URLS } from \"../../../../config/url\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getFloorPlansNames } from \"../../../../APIS/floorplans\";\r\nimport { useQueryClient, useQuery } from \"react-query\";\r\n\r\nconst useFloorPlanDetail = () => {\r\n  const QueryClient = useQueryClient();\r\n  const [error, setError] = useState(null);\r\n  const [modal_static, setModal_static] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState({});\r\n  const [selectLocationName, setSelectLocationName] = useState(\"\");\r\n  const [selectLocationNameById, setSelectLocationNameById] = useState(\"\");\r\n  const [modal_static1, setModal_static1] = useState(false);\r\n  const [selectLocationNamefloorname, setSelectLocationNamefloorname] =\r\n    useState(\"\");\r\n  const [loaded, setLoaded] = useState(false);\r\n  const handleSelectGroup = (selectedGroup) => {\r\n    setSelectedLocation(selectedGroup);\r\n    setSelectLocationName(selectedGroup.label);\r\n  };\r\n  const { floorid } = useParams();\r\n  const history = useHistory();\r\n  const token = localStorage.getItem(\"Token\");\r\n\r\n\r\n  const formatBytes = (bytes, decimals = 2) => {\r\n    if (bytes === 0) return \"0 Bytes\";\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\r\n  };\r\n  const handleAcceptedFiles = (files) => {\r\n    files.map((file) =>\r\n      Object.assign(file, {\r\n        preview: URL.createObjectURL(file),\r\n        htmlFormattedSize: formatBytes(file.size),\r\n      })\r\n    );\r\n\r\n    setSelectedFiles(files);\r\n  };\r\n\r\n  const tog_static1 = () => {\r\n    setModal_static1(!modal_static1);\r\n\r\n    removeBodyCss();\r\n  };\r\n\r\n\r\n  function Offsymbol(text) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100%\",\r\n          fontSize: 12,\r\n          color: \"#fff\",\r\n          paddingRight: 2,\r\n        }}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function OnSymbol(text) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100%\",\r\n          fontSize: 12,\r\n          color: \"#fff\",\r\n          paddingRight: 2,\r\n        }}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getFloorPlansStatusFunc = (e,_id)=>{\r\nconsole.log(\"hey i am here ===>> \",e, floorid,_id )\r\n\r\n// fetch(\r\n//   `${DIOM_BASED_URLS}/admin-business-locations/${floorid}/floorpans/29yxrn5Nj`,\r\n//   {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       Accept: \"application/json, text/plain\",\r\n//       \"Content-Type\": \"application/json;charset=UTF-8\",\r\n//       Authorization: \"Bearer \" + token,\r\n//     },\r\n//     body: JSON.stringify({\r\n//       visibility: `${e}`,\r\n//     }),\r\n//   }\r\n// )\r\n//   .then((result3) => {\r\n//     if (result3.status === 200) {\r\n//       toast.success(\"Updated Successfully\");\r\n    \r\n//     } else if (result3.status === 204) {\r\n//       toast.success(\"Updated Successfully\");\r\n//     } else {\r\n//       toast.error(\" Something went wrong\");\r\n//     }\r\n//   })\r\n//   .catch((error) => toast.error(\" Something went wrong\"));\r\n\r\n  }\r\n\r\n  const namefunc = (e) => {\r\n    setSelectLocationNameById((prev) => ({\r\n      ...prev,\r\n      Name: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const removeBodyCss = () => {\r\n    document.body.classList.add(\"no_padding\");\r\n  };\r\n  const tog_static = () => {\r\n    setModal_static(!modal_static);\r\n    removeBodyCss();\r\n  };\r\n\r\n  const uploadFile = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\r\n      \"Authorization\",\r\n      `Bearer ${localStorage.getItem(\"Token\")}`\r\n    );\r\n\r\n    var formdata = new FormData();\r\n    formdata.append(\"file\", selectedFiles[0], selectedFiles[0].name);\r\n    formdata.append(\"floorplanName\", selectLocationNameById.Name);\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      `${DIOM_BASED_URLS}/admin-business-locations/${selectedLocation.value}/floorpans`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        if (result[0].statusCode === 200) {\r\n          toast.success(\"Floorplans Added Succufully\");\r\n        } else if (result[0].statusCode === 204) {\r\n          toast.success(\"Floorplans Added Succufully\");\r\n        } else {\r\n          toast.error(\" Something went wrong\");\r\n        }\r\n        setModal_static(false);\r\n      })\r\n      .catch(\r\n        (error) => setError(error.message),\r\n        toast.error(\" Something went wrong\")\r\n      );\r\n  };\r\n\r\n\r\n\r\nconst deleteFloorPlansFunc = ()=>{\r\n  \r\n\r\n\r\n  fetch(\r\n    `${DIOM_BASED_URLS}/admin-business-locations/${floorid}/floorpans/selectLocationNamefloorname[0]._id`,\r\n    {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body: JSON.stringify({}),\r\n    }\r\n  )\r\n    .then((result3) => {\r\n      if (result3.status === 200) {\r\n        toast.success(\" Successfully Deleted\");\r\n\r\n        setModal_static1(false)\r\n        QueryClient.invalidateQueries(\"floorplanname\");\r\n       \r\n      } else if (result3.status === 204) {\r\n        toast.success(\" Successfullyn Deleted\");\r\n        setModal_static1(false)\r\n        QueryClient.invalidateQueries(\"floorplanname\");\r\n      \r\n      } else {\r\n        toast.error(\" Something went wrong\");\r\n        setModal_static1(false)\r\n        QueryClient.invalidateQueries(\"floorplanname\");\r\n      }\r\n    })\r\n    .catch((error) => toast.error(\" Something went wrong\"));\r\n}\r\n\r\n\r\n\r\n\r\n  // ************* \r\n  const floorPlanData = useQuery([\"floorplanname\", floorid], () =>\r\n    getFloorPlansNames(token, floorid)\r\n  );\r\n  const floorPlanNameData = floorPlanData?.data?.data;\r\n  // *************\r\n  const getlocations = async () => {\r\n    setSelectLocationNameById(floorPlanNameData);\r\n    const floornames = floorPlanNameData.floorPlans.map((e) => ({\r\n      _id: e._id,\r\n      imageUrl: e.imageUrl,\r\n    }));\r\n    setSelectLocationNamefloorname(floornames);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      floorPlanNameData && (await getlocations());\r\n    })();\r\n  }, [floorPlanNameData]);\r\n\r\n  return {\r\n    error,\r\n    setError,\r\n    modal_static,\r\n    setModal_static,\r\n    selectedFiles,\r\n    setSelectedFiles,\r\n    selectedLocation,\r\n    setSelectedLocation,\r\n    selectLocationName,\r\n    setSelectLocationName,\r\n    selectLocationNameById,\r\n    setSelectLocationNameById,\r\n    selectLocationNamefloorname,\r\n    setSelectLocationNamefloorname,\r\n    loaded,\r\n    setLoaded,\r\n    handleSelectGroup,\r\n    handleAcceptedFiles,\r\n    namefunc,\r\n    uploadFile,\r\n    tog_static,\r\n    Offsymbol,\r\n    OnSymbol,\r\n    deleteFloorPlansFunc,\r\n    getlocations,\r\n    modal_static1,\r\n    setModal_static1,\r\n    getFloorPlansStatusFunc,\r\n    tog_static1,\r\n  };\r\n};\r\n\r\nexport default useFloorPlanDetail;\r\n"]},"metadata":{},"sourceType":"module"}