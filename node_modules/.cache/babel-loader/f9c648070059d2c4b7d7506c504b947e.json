{"ast":null,"code":"import { DIOM_BASED_URLS } from \"../config/url\";\nimport moment from \"moment\";\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all cehckedIn Customers in DIOM\r\n */\n\nexport const getcustomers = async function (filter) {\n  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;\n  let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let token = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  let applyLocationFilter = arguments.length > 4 ? arguments[4] : undefined;\n  const res = await fetch(!applyLocationFilter ? `${DIOM_BASED_URLS}/users/checked-in` : `${DIOM_BASED_URLS}/admin-diom-location/${filter}/active-customers`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  console.log(\"resJson : \", resJson);\n  const customerCheckInData = resJson.data.map((e, index) => {\n    return { ...e,\n      id: index + 1,\n      _id: e.id,\n      checkInTime: moment(e.checkInTime).format(\"DD/MM/YYYY\")\n    };\n  });\n  return {\n    data: customerCheckInData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all cehckedIn details in DIOM\r\n */\n\nexport const getcustomer = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let id = arguments.length > 3 ? arguments[3] : undefined;\n  const res = await fetch(`${DIOM_BASED_URLS}/users/${id}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const customerdetailedData = await resJson.json();\n  return {\n    data: customerdetailedData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of today bookings in DIOM\r\n */\n\nexport const getUseractivebookings = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let id = arguments.length > 3 ? arguments[3] : undefined;\n  const res = await fetch(`${DIOM_BASED_URLS}/admin-diom-bookings/${id}/active`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json(); // const userActiveBookingData = resJson.bookings.map((booking, index) => ({\n\n  const userActiveBookingData = resJson.data.map((booking, index) => ({ ...booking,\n    id: index + 1,\n    createdAt: moment(booking.createdAt).format(\"YYYY-MM-DD HH:mm\"),\n    _id: booking.id\n  }));\n  return {\n    data: userActiveBookingData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\nexport const getUserscheduledbookings = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let id = arguments.length > 3 ? arguments[3] : undefined;\n  const res = await fetch(`${DIOM_BASED_URLS}/bookings/users/${id}/scheduled`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const userSechduledBookigsData = resJson.bookings.map((booking, index) => ({ ...booking,\n    id: index + 1,\n    createdAt: moment(booking.createdAt).format(\"YYYY-MM-DD HH:mm\"),\n    _id: booking.id\n  }));\n  return {\n    data: userSechduledBookigsData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\nexport const getUserpastbookings = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let id = arguments.length > 3 ? arguments[3] : undefined;\n  const res = await fetch(`${DIOM_BASED_URLS}/bookings/users/${id}/history`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json(); // const usePastBookingsData = resJson.bookings.map((booking, index) => ({\n\n  const usePastBookingsData = resJson.data.map((booking, index) => ({ ...booking,\n    id: index + 1,\n    createdAt: moment(booking.createdAt).format(\"YYYY-MM-DD HH:mm\"),\n    _id: booking.id\n  }));\n  return {\n    data: usePastBookingsData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/diom (1)/diom/src/APIS/customerCheckedIn.js"],"names":["DIOM_BASED_URLS","moment","getcustomers","filter","size","page","token","applyLocationFilter","res","fetch","method","redirect","headers","Authorization","ok","resJson","json","Error","error","message","console","log","customerCheckInData","data","map","e","index","id","_id","checkInTime","format","total","hasNextPage","hasPreviousPage","getcustomer","customerdetailedData","getUseractivebookings","userActiveBookingData","booking","createdAt","getUserscheduledbookings","userSechduledBookigsData","bookings","getUserpastbookings","usePastBookingsData"],"mappings":"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","sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\n\r\nimport moment from \"moment\";\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all cehckedIn Customers in DIOM\r\n */\r\n\r\nexport const getcustomers = async (\r\n  filter,\r\n  size = 30,\r\n  page = 1,\r\n  token = \"\",\r\n  applyLocationFilter\r\n) => {\r\n  const res = await fetch(\r\n    !applyLocationFilter\r\n      ? `${DIOM_BASED_URLS}/users/checked-in`\r\n      : `${DIOM_BASED_URLS}/admin-diom-location/${filter}/active-customers`,\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  console.log(\"resJson : \", resJson);\r\n  const customerCheckInData = resJson.data.map((e, index) => {\r\n    return {\r\n      ...e,\r\n      id: index + 1,\r\n      _id: e.id,\r\n      checkInTime: moment(e.checkInTime).format(\"DD/MM/YYYY\"),\r\n    };\r\n  });\r\n\r\n  return {\r\n    data: customerCheckInData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all cehckedIn details in DIOM\r\n */\r\n\r\nexport const getcustomer = async (size = 30, page = 1, token = \"\", id) => {\r\n  const res = await fetch(\r\n    `${DIOM_BASED_URLS}/users/${id}`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n\r\n  const customerdetailedData = await resJson.json();\r\n\r\n  return {\r\n    data: customerdetailedData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of today bookings in DIOM\r\n */\r\n\r\nexport const getUseractivebookings = async (\r\n  size = 30,\r\n  page = 1,\r\n  token = \"\",\r\n  id\r\n) => {\r\n  const res = await fetch(\r\n    `${DIOM_BASED_URLS}/admin-diom-bookings/${id}/active`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  // const userActiveBookingData = resJson.bookings.map((booking, index) => ({\r\n\r\n  const userActiveBookingData = resJson.data.map((booking, index) => ({\r\n    ...booking,\r\n    id: index + 1,\r\n    createdAt: moment(booking.createdAt).format(\"YYYY-MM-DD HH:mm\"),\r\n    _id: booking.id,\r\n  }));\r\n  return {\r\n    data: userActiveBookingData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\nexport const getUserscheduledbookings = async (\r\n  size = 30,\r\n  page = 1,\r\n  token = \"\",\r\n  id\r\n) => {\r\n  const res = await fetch(\r\n    `${DIOM_BASED_URLS}/bookings/users/${id}/scheduled`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n\r\n  const userSechduledBookigsData = resJson.bookings.map((booking, index) => ({\r\n    ...booking,\r\n    id: index + 1,\r\n    createdAt: moment(booking.createdAt).format(\"YYYY-MM-DD HH:mm\"),\r\n    _id: booking.id,\r\n  }));\r\n  return {\r\n    data: userSechduledBookigsData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\nexport const getUserpastbookings = async (\r\n  size = 30,\r\n  page = 1,\r\n  token = \"\",\r\n  id\r\n) => {\r\n  const res = await fetch(\r\n    `${DIOM_BASED_URLS}/bookings/users/${id}/history`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  // const usePastBookingsData = resJson.bookings.map((booking, index) => ({\r\n  const usePastBookingsData = resJson.data.map((booking, index) => ({\r\n    ...booking,\r\n    id: index + 1,\r\n    createdAt: moment(booking.createdAt).format(\"YYYY-MM-DD HH:mm\"),\r\n    _id: booking.id,\r\n  }));\r\n  return {\r\n    data: usePastBookingsData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}