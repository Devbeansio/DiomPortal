{"ast":null,"code":"import { GET_EVENTS_SUCCESS, GET_EVENTS_FAIL, ADD_EVENT_SUCCESS, ADD_EVENT_FAIL, UPDATE_EVENT_SUCCESS, UPDATE_EVENT_FAIL, DELETE_EVENT_SUCCESS, DELETE_EVENT_FAIL, GET_CATEGORIES_SUCCESS, GET_CATEGORIES_FAIL } from \"./actionTypes\";\nconst INIT_STATE = {\n  events: [],\n  categories: [],\n  error: {}\n};\n\nconst Calendar = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_EVENTS_SUCCESS:\n      return { ...state,\n        events: action.payload\n      };\n\n    case GET_EVENTS_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case ADD_EVENT_SUCCESS:\n      return { ...state,\n        events: [...state.events, action.payload]\n      };\n\n    case ADD_EVENT_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case UPDATE_EVENT_SUCCESS:\n      return { ...state,\n        events: state.events.map(event => event.id.toString() === action.payload.id.toString() ? {\n          event,\n          ...action.payload\n        } : event)\n      };\n\n    case UPDATE_EVENT_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case DELETE_EVENT_SUCCESS:\n      return { ...state,\n        events: state.events.filter(event => event.id.toString() !== action.payload.id.toString())\n      };\n\n    case DELETE_EVENT_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case GET_CATEGORIES_SUCCESS:\n      return { ...state,\n        categories: action.payload\n      };\n\n    case GET_CATEGORIES_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["GET_EVENTS_SUCCESS","GET_EVENTS_FAIL","ADD_EVENT_SUCCESS","ADD_EVENT_FAIL","UPDATE_EVENT_SUCCESS","UPDATE_EVENT_FAIL","DELETE_EVENT_SUCCESS","DELETE_EVENT_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","INIT_STATE","events","categories","error","Calendar","state","action","type","payload","map","event","id","toString","filter"],"sources":["C:/Users/tech sign/Desktop/xyz/src/store/calendar/reducer.js"],"sourcesContent":["import {\r\n  GET_EVENTS_SUCCESS,\r\n  GET_EVENTS_FAIL,\r\n  ADD_EVENT_SUCCESS,\r\n  ADD_EVENT_FAIL,\r\n  UPDATE_EVENT_SUCCESS,\r\n  UPDATE_EVENT_FAIL,\r\n  DELETE_EVENT_SUCCESS,\r\n  DELETE_EVENT_FAIL,\r\n  GET_CATEGORIES_SUCCESS,\r\n  GET_CATEGORIES_FAIL,\r\n} from \"./actionTypes\"\r\n\r\nconst INIT_STATE = {\r\n  events: [],\r\n  categories: [],\r\n  error: {},\r\n}\r\n\r\nconst Calendar = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_EVENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        events: action.payload,\r\n      }\r\n\r\n    case GET_EVENTS_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n\r\n    case ADD_EVENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload],\r\n      }\r\n\r\n    case ADD_EVENT_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n\r\n    case UPDATE_EVENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        events: state.events.map(event =>\r\n          event.id.toString() === action.payload.id.toString()\r\n            ? { event, ...action.payload }\r\n            : event\r\n        ),\r\n      }\r\n\r\n    case UPDATE_EVENT_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n\r\n    case DELETE_EVENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(\r\n          event => event.id.toString() !== action.payload.id.toString()\r\n        ),\r\n      }\r\n\r\n    case DELETE_EVENT_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n\r\n    case GET_CATEGORIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        categories: action.payload,\r\n      }\r\n\r\n    case GET_CATEGORIES_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default Calendar\r\n"],"mappings":"AAAA,SACEA,kBADF,EAEEC,eAFF,EAGEC,iBAHF,EAIEC,cAJF,EAKEC,oBALF,EAMEC,iBANF,EAOEC,oBAPF,EAQEC,iBARF,EASEC,sBATF,EAUEC,mBAVF,QAWO,eAXP;AAaA,MAAMC,UAAU,GAAG;EACjBC,MAAM,EAAE,EADS;EAEjBC,UAAU,EAAE,EAFK;EAGjBC,KAAK,EAAE;AAHU,CAAnB;;AAMA,MAAMC,QAAQ,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAvBL,UAAuB;EAAA,IAAXM,MAAW;;EAC/C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKjB,kBAAL;MACE,OAAO,EACL,GAAGe,KADE;QAELJ,MAAM,EAAEK,MAAM,CAACE;MAFV,CAAP;;IAKF,KAAKjB,eAAL;MACE,OAAO,EACL,GAAGc,KADE;QAELF,KAAK,EAAEG,MAAM,CAACE;MAFT,CAAP;;IAKF,KAAKhB,iBAAL;MACE,OAAO,EACL,GAAGa,KADE;QAELJ,MAAM,EAAE,CAAC,GAAGI,KAAK,CAACJ,MAAV,EAAkBK,MAAM,CAACE,OAAzB;MAFH,CAAP;;IAKF,KAAKf,cAAL;MACE,OAAO,EACL,GAAGY,KADE;QAELF,KAAK,EAAEG,MAAM,CAACE;MAFT,CAAP;;IAKF,KAAKd,oBAAL;MACE,OAAO,EACL,GAAGW,KADE;QAELJ,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaQ,GAAb,CAAiBC,KAAK,IAC5BA,KAAK,CAACC,EAAN,CAASC,QAAT,OAAwBN,MAAM,CAACE,OAAP,CAAeG,EAAf,CAAkBC,QAAlB,EAAxB,GACI;UAAEF,KAAF;UAAS,GAAGJ,MAAM,CAACE;QAAnB,CADJ,GAEIE,KAHE;MAFH,CAAP;;IASF,KAAKf,iBAAL;MACE,OAAO,EACL,GAAGU,KADE;QAELF,KAAK,EAAEG,MAAM,CAACE;MAFT,CAAP;;IAKF,KAAKZ,oBAAL;MACE,OAAO,EACL,GAAGS,KADE;QAELJ,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaY,MAAb,CACNH,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,QAAT,OAAwBN,MAAM,CAACE,OAAP,CAAeG,EAAf,CAAkBC,QAAlB,EAD3B;MAFH,CAAP;;IAOF,KAAKf,iBAAL;MACE,OAAO,EACL,GAAGQ,KADE;QAELF,KAAK,EAAEG,MAAM,CAACE;MAFT,CAAP;;IAKF,KAAKV,sBAAL;MACE,OAAO,EACL,GAAGO,KADE;QAELH,UAAU,EAAEI,MAAM,CAACE;MAFd,CAAP;;IAKF,KAAKT,mBAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELF,KAAK,EAAEG,MAAM,CAACE;MAFT,CAAP;;IAIF;MACE,OAAOH,KAAP;EAnEJ;AAqED,CAtED;;KAAMD,Q;AAwEN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}