{"ast":null,"code":"import { DIOM_BASED_URLS } from \"../config/url\";\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns all resource types\r\n */\n\nexport const getResourceTypes = async function (size, page) {\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let applyFilter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let filters = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  const res = await fetch(!applyFilter ? `${DIOM_BASED_URLS}/admin-resource-types-inventories?size=${size}&page=${page}` : `${DIOM_BASED_URLS}/admin-resource-types-inventories?size=${size}&page=${page}&filter={\"where\":${filters}}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const resourceTypeData = resJson.data.map((element, index) => ({\n    id: index + 1,\n    _id: element.id,\n    ResourceType: element.Name,\n    resourceTypeKey: element.resourceTypeKey,\n    //locationName: element.images.map((e) => e.locationName),\n    locationName: element.businessName\n  }));\n  return {\n    data: resourceTypeData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns  searched resource types\r\n */\n\nexport const getSearchedResourceTypes = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  const res = await fetch(`${DIOM_BASED_URLS}/admin-resource-types-inventories`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const searchedresourceTypeData = resJson.data.map((element, index) => ({\n    id: index + 1,\n    _id: element.id,\n    ResourceType: element.Name,\n    resourceTypeKey: element.resourceTypeKey,\n    //locationName: element.images.map((e) => e.locationName),\n    locationName: element.businessName\n  }));\n  return {\n    data: searchedresourceTypeData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of resourcetype  in DIOM\r\n */\n\nexport const getResourceResourceType = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let id = arguments.length > 1 ? arguments[1] : undefined;\n  return await (await await fetch( // `${DIOM_BASED_URLS}/admin-resources-inventories?filter={ \"where\" : { \"businessName\" : ${id}}}`,\n  `${DIOM_BASED_URLS}/admin-resources-inventories?filter={ \"where\" : { \"ResourceTypeId\" : ${id}}}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of GetLocationfocusdest  in DIOM\r\n */\n\nexport const GetLocationfocusdest = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let resourceTypeKey = arguments.length > 1 ? arguments[1] : undefined;\n  return await (await await fetch(`${DIOM_BASED_URLS}/locations/resourcetype/${resourceTypeKey}/locations`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of getallresources  in DIOM\r\n */\n\n_c = GetLocationfocusdest;\nexport const getResourcetypeResources = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let id = arguments.length > 1 ? arguments[1] : undefined;\n  return await (await await fetch(`${DIOM_BASED_URLS}/admin-resource-types-inventories/${id}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of gethourlyDayRateFunc  in DIOM\r\n */\n\nexport const getHourlyDayRate = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let id = arguments.length > 1 ? arguments[1] : undefined;\n  return await (await await fetch(`${DIOM_BASED_URLS}/admin-resource-types-inventories/${id}/prices`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of getalllocationsfunc  in DIOM\r\n */\n\nexport const getlocationsresourceTypes = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let id = arguments.length > 1 ? arguments[1] : undefined;\n  return await (await await fetch(`${DIOM_BASED_URLS}/admin-business-locations`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"GetLocationfocusdest\");","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/1diom-frontend/diom-frontend/src/APIS/resourceType.js"],"names":["DIOM_BASED_URLS","getResourceTypes","size","page","token","applyFilter","filters","res","fetch","method","redirect","headers","Authorization","ok","resJson","json","Error","error","message","resourceTypeData","data","map","element","index","id","_id","ResourceType","Name","resourceTypeKey","locationName","businessName","total","hasNextPage","hasPreviousPage","getSearchedResourceTypes","searchedresourceTypeData","getResourceResourceType","GetLocationfocusdest","getResourcetypeResources","getHourlyDayRate","getlocationsresourceTypes"],"mappings":"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","sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns all resource types\r\n */\r\n\r\nexport const getResourceTypes = async (\r\n  size,\r\n  page,\r\n  token = \"\",\r\n  applyFilter = false,\r\n  filters = {}\r\n) => {\r\n  const res = await fetch(\r\n    !applyFilter\r\n      ? `${DIOM_BASED_URLS}/admin-resource-types-inventories?size=${size}&page=${page}`\r\n      : `${DIOM_BASED_URLS}/admin-resource-types-inventories?size=${size}&page=${page}&filter={\"where\":${filters}}`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  const resourceTypeData = resJson.data.map((element, index) => ({\r\n    id: index + 1,\r\n    _id: element.id,\r\n    ResourceType: element.Name,\r\n    resourceTypeKey: element.resourceTypeKey,\r\n    //locationName: element.images.map((e) => e.locationName),\r\n    locationName: element.businessName,\r\n  }));\r\n\r\n  return {\r\n    data: resourceTypeData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns  searched resource types\r\n */\r\n\r\nexport const getSearchedResourceTypes = async (token = \"\") => {\r\n  const res = await fetch(\r\n    `${DIOM_BASED_URLS}/admin-resource-types-inventories`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  const searchedresourceTypeData = resJson.data.map((element, index) => ({\r\n    id: index + 1,\r\n    _id: element.id,\r\n    ResourceType: element.Name,\r\n    resourceTypeKey: element.resourceTypeKey,\r\n    //locationName: element.images.map((e) => e.locationName),\r\n    locationName: element.businessName,\r\n  }));\r\n\r\n  return {\r\n    data: searchedresourceTypeData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of resourcetype  in DIOM\r\n */\r\n\r\nexport const getResourceResourceType = async (token = \"\", id) => {\r\n  return await (\r\n    await await fetch(\r\n      // `${DIOM_BASED_URLS}/admin-resources-inventories?filter={ \"where\" : { \"businessName\" : ${id}}}`,\r\n      `${DIOM_BASED_URLS}/admin-resources-inventories?filter={ \"where\" : { \"ResourceTypeId\" : ${id}}}`,\r\n      {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n  ).json();\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of GetLocationfocusdest  in DIOM\r\n */\r\n\r\nexport const GetLocationfocusdest = async (token = \"\", resourceTypeKey) => {\r\n  return await (\r\n    await await fetch(\r\n      `${DIOM_BASED_URLS}/locations/resourcetype/${resourceTypeKey}/locations`,\r\n      {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n  ).json();\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of getallresources  in DIOM\r\n */\r\n\r\nexport const getResourcetypeResources = async (token = \"\", id) => {\r\n  return await (\r\n    await await fetch(\r\n      `${DIOM_BASED_URLS}/admin-resource-types-inventories/${id}`,\r\n      {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n  ).json();\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of gethourlyDayRateFunc  in DIOM\r\n */\r\n\r\nexport const getHourlyDayRate = async (token = \"\", id) => {\r\n  return await (\r\n    await await fetch(\r\n      `${DIOM_BASED_URLS}/admin-resource-types-inventories/${id}/prices`,\r\n      {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n  ).json();\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of getalllocationsfunc  in DIOM\r\n */\r\n\r\nexport const getlocationsresourceTypes = async (token = \"\", id) => {\r\n  return await (\r\n    await await fetch(`${DIOM_BASED_URLS}/admin-business-locations`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n  ).json();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}