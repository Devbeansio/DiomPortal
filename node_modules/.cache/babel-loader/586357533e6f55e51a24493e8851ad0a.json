{"ast":null,"code":"import React from\"react\";import{useQuery}from\"react-query\";import{getAdminNotifications}from\"../../APIS/notifications\";import{DIOM_BASED_URLS}from\"../../config/url\";import{useQueryClient}from\"react-query\";function UseNotifications(){var token=localStorage.getItem(\"Token\");var QueryClient=useQueryClient();var markAllReadFunc=function markAllReadFunc(){fetch(\"\".concat(DIOM_BASED_URLS,\"/admin-notifications\"),{method:\"PATCH\",headers:{Accept:\"application/json, text/plain\",\"Content-Type\":\"application/json;charset=UTF-8\",Authorization:\"Bearer \"+token},body:JSON.stringify({markRead:true})}).then(function(result3){QueryClient.invalidateQueries(\"adminNotifications\");}).catch(function(error){return toast.error(\" Something went wrong\");});};var notificationSeenFunc=function notificationSeenFunc(e){console.log(\"notificationSeenFunc \",e.id);fetch(\"\".concat(DIOM_BASED_URLS,\"/admin-notifications/\").concat(e.id),{method:\"PATCH\",headers:{Accept:\"application/json, text/plain\",\"Content-Type\":\"application/json;charset=UTF-8\",Authorization:\"Bearer \"+token},body:JSON.stringify({markRead:true})}).then(function(result3){QueryClient.invalidateQueries(\"adminNotifications\");}).catch(function(error){return toast.error(\" Something went wrong\");});};// *************\nvar adminNotificationsdata=useQuery([\"adminNotifications\"],function(){return getAdminNotifications(token);});var adminNotificationdata=adminNotificationsdata.data;// console.log(\"adminNotificationdata : \",adminNotificationdata?.data)\n// *************\nreturn{adminNotificationdata:adminNotificationdata,notificationSeenFunc:notificationSeenFunc,markAllReadFunc:markAllReadFunc};}export default UseNotifications;","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/diom (1)/diom/src/pages/Notifications/useNotifications.js"],"names":["React","useQuery","getAdminNotifications","DIOM_BASED_URLS","useQueryClient","UseNotifications","token","localStorage","getItem","QueryClient","markAllReadFunc","fetch","method","headers","Accept","Authorization","body","JSON","stringify","markRead","then","result3","invalidateQueries","catch","error","toast","notificationSeenFunc","e","console","log","id","adminNotificationsdata","adminNotificationdata","data"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,qBAAT,KAAsC,0BAAtC,CACA,OAASC,eAAT,KAAgC,kBAAhC,CACA,OAASC,cAAT,KAA+B,aAA/B,CAEA,QAASC,CAAAA,gBAAT,EAA4B,CAC1B,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,GAAMC,CAAAA,WAAW,CAAGL,cAAc,EAAlC,CAKA,GAAMM,CAAAA,eAAe,CAAC,QAAhBA,CAAAA,eAAgB,EAAI,CAExBC,KAAK,WAAIR,eAAJ,yBAA2C,CAC9CS,MAAM,CAAE,OADsC,CAE9CC,OAAO,CAAE,CACPC,MAAM,CAAE,8BADD,CAEP,eAAgB,gCAFT,CAGPC,aAAa,CAAE,UAAYT,KAHpB,CAFqC,CAO9CU,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,QAAQ,CAAE,IADS,CAAf,CAPwC,CAA3C,CAAL,CAWGC,IAXH,CAWQ,SAACC,OAAD,CAAa,CACjBZ,WAAW,CAACa,iBAAZ,CAA8B,oBAA9B,EAGD,CAfH,EAgBGC,KAhBH,CAgBS,SAACC,KAAD,QAAWC,CAAAA,KAAK,CAACD,KAAN,CAAY,uBAAZ,CAAX,EAhBT,EAkBD,CApBD,CAsBA,GAAME,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,CAAD,CAAK,CAEhCC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAoCF,CAAC,CAACG,EAAtC,EAGAnB,KAAK,WAAIR,eAAJ,iCAA2CwB,CAAC,CAACG,EAA7C,EAAmD,CACtDlB,MAAM,CAAE,OAD8C,CAEtDC,OAAO,CAAE,CACPC,MAAM,CAAE,8BADD,CAEP,eAAgB,gCAFT,CAGPC,aAAa,CAAE,UAAYT,KAHpB,CAF6C,CAOtDU,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,QAAQ,CAAE,IADS,CAAf,CAPgD,CAAnD,CAAL,CAWGC,IAXH,CAWQ,SAACC,OAAD,CAAa,CACjBZ,WAAW,CAACa,iBAAZ,CAA8B,oBAA9B,EAGD,CAfH,EAgBGC,KAhBH,CAgBS,SAACC,KAAD,QAAWC,CAAAA,KAAK,CAACD,KAAN,CAAY,uBAAZ,CAAX,EAhBT,EAiBD,CAtBD,CAyBA;AACA,GAAMO,CAAAA,sBAAsB,CAAG9B,QAAQ,CAAC,CAAC,oBAAD,CAAD,CAAyB,iBAC9DC,CAAAA,qBAAqB,CAACI,KAAD,CADyC,EAAzB,CAAvC,CAGA,GAAM0B,CAAAA,qBAAqB,CAAGD,sBAAsB,CAACE,IAArD,CACA;AAEA;AAKA,MAAO,CAAED,qBAAqB,CAArBA,qBAAF,CAAwBN,oBAAoB,CAApBA,oBAAxB,CAA6ChB,eAAe,CAAfA,eAA7C,CAAP,CACD,CAED,cAAeL,CAAAA,gBAAf","sourcesContent":["import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getAdminNotifications } from \"../../APIS/notifications\";\r\nimport { DIOM_BASED_URLS } from \"../../config/url\";\r\nimport { useQueryClient } from \"react-query\";\r\n\r\nfunction UseNotifications() {\r\n  const token = localStorage.getItem(\"Token\");\r\n  const QueryClient = useQueryClient()\r\n\r\n\r\n\r\n\r\n  const markAllReadFunc=()=>{\r\n\r\n    fetch(`${DIOM_BASED_URLS}/admin-notifications`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body: JSON.stringify({\r\n        markRead: true,\r\n      }),\r\n    })\r\n      .then((result3) => {\r\n        QueryClient.invalidateQueries(\"adminNotifications\");\r\n       \r\n      \r\n      })\r\n      .catch((error) => toast.error(\" Something went wrong\"));\r\n\r\n  }\r\n\r\n  const notificationSeenFunc = (e)=>{\r\n   \r\n    console.log(\"notificationSeenFunc \",e.id)\r\n\r\n\r\n    fetch(`${DIOM_BASED_URLS}/admin-notifications/${e.id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body: JSON.stringify({\r\n        markRead: true,\r\n      }),\r\n    })\r\n      .then((result3) => {\r\n        QueryClient.invalidateQueries(\"adminNotifications\");\r\n       \r\n      \r\n      })\r\n      .catch((error) => toast.error(\" Something went wrong\"));\r\n  }\r\n\r\n\r\n  // *************\r\n  const adminNotificationsdata = useQuery([\"adminNotifications\"], () =>\r\n    getAdminNotifications(token)\r\n  );\r\n  const adminNotificationdata = adminNotificationsdata.data;\r\n  // console.log(\"adminNotificationdata : \",adminNotificationdata?.data)\r\n\r\n  // *************\r\n\r\n\r\n\r\n\r\n  return { adminNotificationdata,notificationSeenFunc,markAllReadFunc };\r\n}\r\n\r\nexport default UseNotifications;\r\n"]},"metadata":{},"sourceType":"module"}