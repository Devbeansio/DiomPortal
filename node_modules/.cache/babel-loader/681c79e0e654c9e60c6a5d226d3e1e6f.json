{"ast":null,"code":"import { DIOM_BASED_URLS } from \"../config/url\";\nimport moment from \"moment\";\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all cehckedIn Customers in DIOM\r\n */\n\nexport const getcustomers = async function (filter) {\n  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;\n  let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let token = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  let applyLocationFilter = arguments.length > 4 ? arguments[4] : undefined;\n  const res = await fetch(!applyLocationFilter ? `${DIOM_BASED_URLS}/users/checked-in` : `${DIOM_BASED_URLS}/admin-diom-location/${filter}/active-customers`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json(); // console.log(\"resJson : \", resJson);\n\n  const customerCheckInData = resJson.data.map((e, index) => {\n    return { ...e,\n      id: index + 1,\n      _id: e.id,\n      checkInTime: moment(e.checkInTime).format(\"DD/MM/YYYY hh:mm\")\n    };\n  });\n  return {\n    data: customerCheckInData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all cehckedIn details in DIOM\r\n */\n\nexport const getcustomer = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let id = arguments.length > 3 ? arguments[3] : undefined;\n  const res = await fetch(`${DIOM_BASED_URLS}/users/${id}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const customerdetailedData = await resJson.json();\n  return {\n    data: customerdetailedData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of today bookings in DIOM\r\n */\n\nexport const getUseractivebookings = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let id = arguments.length > 3 ? arguments[3] : undefined;\n  const res = await fetch(`${DIOM_BASED_URLS}/admin-diom-bookings/${id}/active`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json(); // const userActiveBookingData = resJson.bookings.map((booking, index) => ({\n\n  const userActiveBookingData = resJson.data.map((booking, index) => ({ ...booking,\n    id: index + 1,\n    createdAt: moment(booking.createdAt).format(\"YYYY-MM-DD HH:mm\"),\n    _id: booking.id\n  }));\n  return {\n    data: userActiveBookingData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\nexport const getUserscheduledbookings = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let id = arguments.length > 3 ? arguments[3] : undefined;\n  const res = await fetch(`${DIOM_BASED_URLS}/bookings/users/${id}/scheduled`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const userSechduledBookigsData = resJson.bookings.map((booking, index) => ({ ...booking,\n    id: index + 1,\n    createdAt: moment(booking.createdAt).format(\"YYYY-MM-DD HH:mm\"),\n    _id: booking.id\n  }));\n  return {\n    data: userSechduledBookigsData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\nexport const getUserpastbookings = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let id = arguments.length > 3 ? arguments[3] : undefined;\n  const res = await fetch(`${DIOM_BASED_URLS}/bookings/users/${id}/history`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json(); // const usePastBookingsData = resJson.bookings.map((booking, index) => ({\n\n  const usePastBookingsData = resJson.data.map((booking, index) => ({ ...booking,\n    id: index + 1,\n    createdAt: moment(booking.createdAt).format(\"YYYY-MM-DD HH:mm\"),\n    _id: booking.id\n  }));\n  return {\n    data: usePastBookingsData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};","map":{"version":3,"names":["DIOM_BASED_URLS","moment","getcustomers","filter","size","page","token","applyLocationFilter","res","fetch","method","headers","Authorization","ok","resJson","json","Error","error","message","customerCheckInData","data","map","e","index","id","_id","checkInTime","format","total","hasNextPage","hasPreviousPage","getcustomer","customerdetailedData","getUseractivebookings","userActiveBookingData","booking","createdAt","getUserscheduledbookings","userSechduledBookigsData","bookings","getUserpastbookings","usePastBookingsData"],"sources":["C:/Users/tech sign/Desktop/xyz/src/APIS/customerCheckedIn.js"],"sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\n\r\nimport moment from \"moment\";\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all cehckedIn Customers in DIOM\r\n */\r\n\r\nexport const getcustomers = async (\r\n  filter,\r\n  size = 30,\r\n  page = 1,\r\n  token = \"\",\r\n  applyLocationFilter\r\n) => {\r\n  const res = await fetch(\r\n    !applyLocationFilter\r\n      ? `${DIOM_BASED_URLS}/users/checked-in`\r\n      : `${DIOM_BASED_URLS}/admin-diom-location/${filter}/active-customers`,\r\n    {\r\n      method: \"GET\",\r\n      \r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  // console.log(\"resJson : \", resJson);\r\n  const customerCheckInData = resJson.data.map((e, index) => {\r\n    return {\r\n      ...e,\r\n      id: index + 1,\r\n      _id: e.id,\r\n      checkInTime: moment(e.checkInTime).format(\"DD/MM/YYYY hh:mm\"),\r\n    };\r\n  });\r\n\r\n  return {\r\n    data: customerCheckInData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all cehckedIn details in DIOM\r\n */\r\n\r\nexport const getcustomer = async (size = 30, page = 1, token = \"\", id) => {\r\n  const res = await fetch(\r\n    `${DIOM_BASED_URLS}/users/${id}`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n\r\n  const customerdetailedData = await resJson.json();\r\n\r\n  return {\r\n    data: customerdetailedData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of today bookings in DIOM\r\n */\r\n\r\nexport const getUseractivebookings = async (\r\n  size = 30,\r\n  page = 1,\r\n  token = \"\",\r\n  id\r\n) => {\r\n  const res = await fetch(\r\n    `${DIOM_BASED_URLS}/admin-diom-bookings/${id}/active`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  // const userActiveBookingData = resJson.bookings.map((booking, index) => ({\r\n\r\n  const userActiveBookingData = resJson.data.map((booking, index) => ({\r\n    ...booking,\r\n    id: index + 1,\r\n    createdAt: moment(booking.createdAt).format(\"YYYY-MM-DD HH:mm\"),\r\n    _id: booking.id,\r\n  }));\r\n  return {\r\n    data: userActiveBookingData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\nexport const getUserscheduledbookings = async (\r\n  size = 30,\r\n  page = 1,\r\n  token = \"\",\r\n  id\r\n) => {\r\n  const res = await fetch(\r\n    `${DIOM_BASED_URLS}/bookings/users/${id}/scheduled`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n\r\n  const userSechduledBookigsData = resJson.bookings.map((booking, index) => ({\r\n    ...booking,\r\n    id: index + 1,\r\n    createdAt: moment(booking.createdAt).format(\"YYYY-MM-DD HH:mm\"),\r\n    _id: booking.id,\r\n  }));\r\n  return {\r\n    data: userSechduledBookigsData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\nexport const getUserpastbookings = async (\r\n  size = 30,\r\n  page = 1,\r\n  token = \"\",\r\n  id\r\n) => {\r\n  const res = await fetch(\r\n    `${DIOM_BASED_URLS}/bookings/users/${id}/history`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  // const usePastBookingsData = resJson.bookings.map((booking, index) => ({\r\n  const usePastBookingsData = resJson.data.map((booking, index) => ({\r\n    ...booking,\r\n    id: index + 1,\r\n    createdAt: moment(booking.createdAt).format(\"YYYY-MM-DD HH:mm\"),\r\n    _id: booking.id,\r\n  }));\r\n  return {\r\n    data: usePastBookingsData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}