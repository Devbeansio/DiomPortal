{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { getAdminNotifications } from \"../../APIS/notifications\";\nimport { DIOM_BASED_URLS } from \"../../config/url\";\nimport { useQueryClient } from \"react-query\";\n\nfunction UseNotifications() {\n  _s();\n\n  const token = localStorage.getItem(\"Token\");\n  const QueryClient = useQueryClient();\n\n  const notificationSeenFunc = e => {\n    console.log(\"notificationSeenFunc \", e.id);\n    fetch(`${DIOM_BASED_URLS}/admin-notifications/${e.id}`, {\n      method: \"PATCH\",\n      headers: {\n        Accept: \"application/json, text/plain\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n        Authorization: \"Bearer \" + token\n      },\n      body: JSON.stringify({\n        markRead: true\n      })\n    }).then(result3 => {\n      QueryClient.invalidateQueries(\"adminNotifications\");\n    }).catch(error => toast.error(\" Something went wrong\"));\n  }; // *************\n\n\n  const adminNotificationsdata = useQuery([\"adminNotifications\"], () => getAdminNotifications(token));\n  const adminNotificationdata = adminNotificationsdata.data; // console.log(\"adminNotificationdata : \",adminNotificationdata?.data)\n  // *************\n\n  return {\n    adminNotificationdata,\n    notificationSeenFunc\n  };\n}\n\n_s(UseNotifications, \"2v5msc9f9VyMbqLY18RYa9MsX9Q=\", false, function () {\n  return [useQueryClient, useQuery];\n});\n\n_c = UseNotifications;\nexport default UseNotifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseNotifications\");","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/diom (1)/diom/src/pages/Notifications/useNotifications.js"],"names":["React","useQuery","getAdminNotifications","DIOM_BASED_URLS","useQueryClient","UseNotifications","token","localStorage","getItem","QueryClient","notificationSeenFunc","e","console","log","id","fetch","method","headers","Accept","Authorization","body","JSON","stringify","markRead","then","result3","invalidateQueries","catch","error","toast","adminNotificationsdata","adminNotificationdata","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,cAAT,QAA+B,aAA/B;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,WAAW,GAAGL,cAAc,EAAlC;;AAGA,QAAMM,oBAAoB,GAAIC,CAAD,IAAK;AAEhCC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCF,CAAC,CAACG,EAAtC;AAGAC,IAAAA,KAAK,CAAE,GAAEZ,eAAgB,wBAAuBQ,CAAC,CAACG,EAAG,EAAhD,EAAmD;AACtDE,MAAAA,MAAM,EAAE,OAD8C;AAEtDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,8BADD;AAEP,wBAAgB,gCAFT;AAGPC,QAAAA,aAAa,EAAE,YAAYb;AAHpB,OAF6C;AAOtDc,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,QAAQ,EAAE;AADS,OAAf;AAPgD,KAAnD,CAAL,CAWGC,IAXH,CAWSC,OAAD,IAAa;AACjBhB,MAAAA,WAAW,CAACiB,iBAAZ,CAA8B,oBAA9B;AAGD,KAfH,EAgBGC,KAhBH,CAgBUC,KAAD,IAAWC,KAAK,CAACD,KAAN,CAAY,uBAAZ,CAhBpB;AAiBD,GAtBD,CAL0B,CA8B1B;;;AACA,QAAME,sBAAsB,GAAG7B,QAAQ,CAAC,CAAC,oBAAD,CAAD,EAAyB,MAC9DC,qBAAqB,CAACI,KAAD,CADgB,CAAvC;AAGA,QAAMyB,qBAAqB,GAAGD,sBAAsB,CAACE,IAArD,CAlC0B,CAmC1B;AAEA;;AAKA,SAAO;AAAED,IAAAA,qBAAF;AAAwBrB,IAAAA;AAAxB,GAAP;AACD;;GA3CQL,gB;UAEaD,c,EA6BWH,Q;;;KA/BxBI,gB;AA6CT,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getAdminNotifications } from \"../../APIS/notifications\";\r\nimport { DIOM_BASED_URLS } from \"../../config/url\";\r\nimport { useQueryClient } from \"react-query\";\r\n\r\nfunction UseNotifications() {\r\n  const token = localStorage.getItem(\"Token\");\r\n  const QueryClient = useQueryClient();\r\n\r\n\r\n  const notificationSeenFunc = (e)=>{\r\n   \r\n    console.log(\"notificationSeenFunc \",e.id)\r\n\r\n\r\n    fetch(`${DIOM_BASED_URLS}/admin-notifications/${e.id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body: JSON.stringify({\r\n        markRead: true,\r\n      }),\r\n    })\r\n      .then((result3) => {\r\n        QueryClient.invalidateQueries(\"adminNotifications\");\r\n       \r\n      \r\n      })\r\n      .catch((error) => toast.error(\" Something went wrong\"));\r\n  }\r\n\r\n\r\n  // *************\r\n  const adminNotificationsdata = useQuery([\"adminNotifications\"], () =>\r\n    getAdminNotifications(token)\r\n  );\r\n  const adminNotificationdata = adminNotificationsdata.data;\r\n  // console.log(\"adminNotificationdata : \",adminNotificationdata?.data)\r\n\r\n  // *************\r\n\r\n\r\n\r\n\r\n  return { adminNotificationdata,notificationSeenFunc };\r\n}\r\n\r\nexport default UseNotifications;\r\n"]},"metadata":{},"sourceType":"module"}