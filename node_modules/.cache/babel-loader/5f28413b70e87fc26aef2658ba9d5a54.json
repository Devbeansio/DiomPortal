{"ast":null,"code":"import { DIOM_BASED_URLS } from \"../config/url\";\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a Finance in DIOM\r\n */\n\nexport const getFinanceCard = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let history = arguments.length > 1 ? arguments[1] : undefined;\n  // return await (\n  const res = await fetch(`${DIOM_BASED_URLS}/stats/finance`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    if (res.status === 401) {\n      history.push(\"/login\");\n      throw new Error(resJson.error.message);\n    }\n\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const data = await res.json();\n  return {\n    data\n  }; // ).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a General in DIOM\r\n */\n\nexport const getGenaralCard = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let history = arguments.length > 1 ? arguments[1] : undefined;\n  // return await (\n  const res = await fetch(`${DIOM_BASED_URLS}/stats/general`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    if (res.status === 401) {\n      history.push(\"/login\");\n      throw new Error(resJson.error.message);\n    }\n\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const data = await res.json();\n  return {\n    data\n  }; // ).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a Location in DIOM\r\n */\n\nexport const getLocationCard = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let history = arguments.length > 1 ? arguments[1] : undefined;\n  // return await (\n  const res = await fetch(`${DIOM_BASED_URLS}/stats/locations`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }); // ).json();\n\n  if (!res.ok) {\n    if (res.status === 401) {\n      history.push(\"/login\");\n      throw new Error(resJson.error.message);\n    }\n\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const data = await res.json();\n  return {\n    data\n  };\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a brand in DIOM\r\n */\n\nexport const getBrandCard = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let history = arguments.length > 1 ? arguments[1] : undefined;\n  // return await (\n  const res = await fetch(`${DIOM_BASED_URLS}/stats/brands`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    if (res.status === 401) {\n      history.push(\"/login\");\n      throw new Error(resJson.error.message);\n    }\n\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const data = await res.json();\n  return {\n    data\n  }; // ).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a users in DIOM\r\n */\n\nexport const getUsersCard = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let history = arguments.length > 1 ? arguments[1] : undefined;\n  // return await (\n  const res = await fetch(`${DIOM_BASED_URLS}/stats/users`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }); // ).json();\n\n  if (!res.ok) {\n    if (res.status === 401) {\n      history.push(\"/login\");\n      throw new Error(resJson.error.message);\n    }\n\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const data = await res.json();\n  return {\n    data\n  };\n};","map":{"version":3,"names":["DIOM_BASED_URLS","getFinanceCard","token","history","res","fetch","method","redirect","headers","Authorization","ok","status","push","Error","resJson","error","message","json","data","getGenaralCard","getLocationCard","getBrandCard","getUsersCard"],"sources":["C:/Users/tech sign/Desktop/xyz/src/APIS/dashboard.js"],"sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a Finance in DIOM\r\n */\r\n\r\nexport const getFinanceCard = async (token = \"\",history) => {\r\n  // return await (\r\n    const res = await fetch(`${DIOM_BASED_URLS}/stats/finance`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n    if (!res.ok) {\r\n      if(res.status === 401){\r\n        history.push(\"/login\");\r\n        throw new Error(resJson.error.message);\r\n     \r\n    }\r\n      const resJson = await res.json();\r\n      throw new Error(resJson.error.message);\r\n    }\r\n    const data = await res.json();\r\n    \r\n    return {\r\n      data\r\n    };\r\n  // ).json();\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a General in DIOM\r\n */\r\n\r\nexport const getGenaralCard = async (token = \"\",history) => {\r\n  // return await (\r\n    const res = await fetch(`${DIOM_BASED_URLS}/stats/general`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n    if (!res.ok) {\r\n      if(res.status === 401){\r\n        history.push(\"/login\");\r\n        throw new Error(resJson.error.message);\r\n     \r\n    }\r\n      const resJson = await res.json();\r\n      throw new Error(resJson.error.message);\r\n    }\r\n    const data = await res.json();\r\n    \r\n    return {\r\n      data\r\n    };\r\n  // ).json();\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a Location in DIOM\r\n */\r\n\r\nexport const getLocationCard = async (token = \"\",history) => {\r\n  // return await (\r\n    const res =  await fetch(`${DIOM_BASED_URLS}/stats/locations`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n  // ).json();\r\n  if (!res.ok) {\r\n    if(res.status === 401){\r\n      history.push(\"/login\");\r\n      throw new Error(resJson.error.message);\r\n   \r\n  }\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const data = await res.json();\r\n  \r\n  return {\r\n    data\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a brand in DIOM\r\n */\r\n\r\nexport const getBrandCard = async (token = \"\",history) => {\r\n  // return await (\r\n    const res= await fetch(`${DIOM_BASED_URLS}/stats/brands`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n    if (!res.ok) {\r\n      if(res.status === 401){\r\n        history.push(\"/login\");\r\n        throw new Error(resJson.error.message);\r\n     \r\n    }\r\n      const resJson = await res.json();\r\n      throw new Error(resJson.error.message);\r\n    }\r\n    const data = await res.json();\r\n    \r\n    return {\r\n      data\r\n    };\r\n  // ).json();\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a users in DIOM\r\n */\r\n\r\nexport const getUsersCard = async (token = \"\",history) => {\r\n  // return await (\r\n    const res =  await fetch(`${DIOM_BASED_URLS}/stats/users`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n  // ).json();\r\n  if (!res.ok) {\r\n    if(res.status === 401){\r\n      history.push(\"/login\");\r\n      throw new Error(resJson.error.message);\r\n   \r\n  }\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const data = await res.json();\r\n  \r\n  return {\r\n    data\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,eAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAG,kBAA8B;EAAA,IAAvBC,KAAuB,uEAAf,EAAe;EAAA,IAAZC,OAAY;EAC1D;EACE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEL,eAAgB,gBAApB,EAAqC;IAC1DM,MAAM,EAAE,KADkD;IAE1DC,QAAQ,EAAE,QAFgD;IAG1DC,OAAO,EAAE;MACPC,aAAa,EAAE,YAAYP;IADpB;EAHiD,CAArC,CAAvB;;EAOA,IAAI,CAACE,GAAG,CAACM,EAAT,EAAa;IACX,IAAGN,GAAG,CAACO,MAAJ,KAAe,GAAlB,EAAsB;MACpBR,OAAO,CAACS,IAAR,CAAa,QAAb;MACA,MAAM,IAAIC,KAAJ,CAAUC,OAAO,CAACC,KAAR,CAAcC,OAAxB,CAAN;IAEH;;IACC,MAAMF,OAAO,GAAG,MAAMV,GAAG,CAACa,IAAJ,EAAtB;IACA,MAAM,IAAIJ,KAAJ,CAAUC,OAAO,CAACC,KAAR,CAAcC,OAAxB,CAAN;EACD;;EACD,MAAME,IAAI,GAAG,MAAMd,GAAG,CAACa,IAAJ,EAAnB;EAEA,OAAO;IACLC;EADK,CAAP,CApBwD,CAuB1D;AACD,CAxBM;AA0BP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAG,kBAA8B;EAAA,IAAvBjB,KAAuB,uEAAf,EAAe;EAAA,IAAZC,OAAY;EAC1D;EACE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEL,eAAgB,gBAApB,EAAqC;IAC1DM,MAAM,EAAE,KADkD;IAE1DC,QAAQ,EAAE,QAFgD;IAG1DC,OAAO,EAAE;MACPC,aAAa,EAAE,YAAYP;IADpB;EAHiD,CAArC,CAAvB;;EAOA,IAAI,CAACE,GAAG,CAACM,EAAT,EAAa;IACX,IAAGN,GAAG,CAACO,MAAJ,KAAe,GAAlB,EAAsB;MACpBR,OAAO,CAACS,IAAR,CAAa,QAAb;MACA,MAAM,IAAIC,KAAJ,CAAUC,OAAO,CAACC,KAAR,CAAcC,OAAxB,CAAN;IAEH;;IACC,MAAMF,OAAO,GAAG,MAAMV,GAAG,CAACa,IAAJ,EAAtB;IACA,MAAM,IAAIJ,KAAJ,CAAUC,OAAO,CAACC,KAAR,CAAcC,OAAxB,CAAN;EACD;;EACD,MAAME,IAAI,GAAG,MAAMd,GAAG,CAACa,IAAJ,EAAnB;EAEA,OAAO;IACLC;EADK,CAAP,CApBwD,CAuB1D;AACD,CAxBM;AA0BP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,eAAe,GAAG,kBAA8B;EAAA,IAAvBlB,KAAuB,uEAAf,EAAe;EAAA,IAAZC,OAAY;EAC3D;EACE,MAAMC,GAAG,GAAI,MAAMC,KAAK,CAAE,GAAEL,eAAgB,kBAApB,EAAuC;IAC7DM,MAAM,EAAE,KADqD;IAE7DC,QAAQ,EAAE,QAFmD;IAG7DC,OAAO,EAAE;MACPC,aAAa,EAAE,YAAYP;IADpB;EAHoD,CAAvC,CAAxB,CAFyD,CAS3D;;EACA,IAAI,CAACE,GAAG,CAACM,EAAT,EAAa;IACX,IAAGN,GAAG,CAACO,MAAJ,KAAe,GAAlB,EAAsB;MACpBR,OAAO,CAACS,IAAR,CAAa,QAAb;MACA,MAAM,IAAIC,KAAJ,CAAUC,OAAO,CAACC,KAAR,CAAcC,OAAxB,CAAN;IAEH;;IACC,MAAMF,OAAO,GAAG,MAAMV,GAAG,CAACa,IAAJ,EAAtB;IACA,MAAM,IAAIJ,KAAJ,CAAUC,OAAO,CAACC,KAAR,CAAcC,OAAxB,CAAN;EACD;;EACD,MAAME,IAAI,GAAG,MAAMd,GAAG,CAACa,IAAJ,EAAnB;EAEA,OAAO;IACLC;EADK,CAAP;AAGD,CAxBM;AA0BP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMG,YAAY,GAAG,kBAA8B;EAAA,IAAvBnB,KAAuB,uEAAf,EAAe;EAAA,IAAZC,OAAY;EACxD;EACE,MAAMC,GAAG,GAAE,MAAMC,KAAK,CAAE,GAAEL,eAAgB,eAApB,EAAoC;IACxDM,MAAM,EAAE,KADgD;IAExDC,QAAQ,EAAE,QAF8C;IAGxDC,OAAO,EAAE;MACPC,aAAa,EAAE,YAAYP;IADpB;EAH+C,CAApC,CAAtB;;EAOA,IAAI,CAACE,GAAG,CAACM,EAAT,EAAa;IACX,IAAGN,GAAG,CAACO,MAAJ,KAAe,GAAlB,EAAsB;MACpBR,OAAO,CAACS,IAAR,CAAa,QAAb;MACA,MAAM,IAAIC,KAAJ,CAAUC,OAAO,CAACC,KAAR,CAAcC,OAAxB,CAAN;IAEH;;IACC,MAAMF,OAAO,GAAG,MAAMV,GAAG,CAACa,IAAJ,EAAtB;IACA,MAAM,IAAIJ,KAAJ,CAAUC,OAAO,CAACC,KAAR,CAAcC,OAAxB,CAAN;EACD;;EACD,MAAME,IAAI,GAAG,MAAMd,GAAG,CAACa,IAAJ,EAAnB;EAEA,OAAO;IACLC;EADK,CAAP,CApBsD,CAuBxD;AACD,CAxBM;AA0BP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMI,YAAY,GAAG,kBAA8B;EAAA,IAAvBpB,KAAuB,uEAAf,EAAe;EAAA,IAAZC,OAAY;EACxD;EACE,MAAMC,GAAG,GAAI,MAAMC,KAAK,CAAE,GAAEL,eAAgB,cAApB,EAAmC;IACzDM,MAAM,EAAE,KADiD;IAEzDC,QAAQ,EAAE,QAF+C;IAGzDC,OAAO,EAAE;MACPC,aAAa,EAAE,YAAYP;IADpB;EAHgD,CAAnC,CAAxB,CAFsD,CASxD;;EACA,IAAI,CAACE,GAAG,CAACM,EAAT,EAAa;IACX,IAAGN,GAAG,CAACO,MAAJ,KAAe,GAAlB,EAAsB;MACpBR,OAAO,CAACS,IAAR,CAAa,QAAb;MACA,MAAM,IAAIC,KAAJ,CAAUC,OAAO,CAACC,KAAR,CAAcC,OAAxB,CAAN;IAEH;;IACC,MAAMF,OAAO,GAAG,MAAMV,GAAG,CAACa,IAAJ,EAAtB;IACA,MAAM,IAAIJ,KAAJ,CAAUC,OAAO,CAACC,KAAR,CAAcC,OAAxB,CAAN;EACD;;EACD,MAAME,IAAI,GAAG,MAAMd,GAAG,CAACa,IAAJ,EAAnB;EAEA,OAAO;IACLC;EADK,CAAP;AAGD,CAxBM"},"metadata":{},"sourceType":"module"}