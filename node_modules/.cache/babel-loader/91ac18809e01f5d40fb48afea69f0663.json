{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { usePaginatedQuery } from \"../../../hooks/query\";\nimport { getuserdetails } from \"../../../APIS/userProfle\";\nimport { useParams } from \"react-router-dom\";\nimport { getUseractivebookings } from \"../../../APIS/userProfle\";\nimport { getUserPastBookings } from \"../../../APIS/userProfle\";\nimport { getUserScheduledBookings } from \"../../../APIS/userProfle\";\nexport const useUserProfileDetail = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const {\n    id\n  } = useParams();\n  const token = localStorage.getItem(\"Token\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(50);\n\n  const changeCurrentPage = pageNum => setCurrentPage(pageNum);\n\n  const queryClient = useQueryClient();\n  const {\n    data: {\n      data: userdetailsData\n    },\n    isLoading\n  } = usePaginatedQuery([\"userprofiledetails\", id], () => getuserdetails(pageSize, currentPage, token, id));\n  const {\n    data: {\n      data: userActivebookingsData,\n      hasNextPage,\n      hasPreviousPage,\n      total\n    }\n  } = usePaginatedQuery([\"activebookings\", id], () => getUseractivebookings(pageSize, currentPage, token, id));\n  const {\n    data: {\n      data: userPastBookingsData\n    }\n  } = usePaginatedQuery([\"pastbookings\", id], () => getUserPastBookings(pageSize, currentPage, token, id));\n  const {\n    data: {\n      data: userScheduledBookingsData\n    }\n  } = usePaginatedQuery([\"scheduledbookings\", id], () => getUserScheduledBookings(pageSize, currentPage, token, id));\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const pagelengthnum = e => {\n    if (e.target.value === \"1\") {\n      setPageSize(10);\n    } else if (e.target.value === \"2\") {\n      setPageSize(30);\n    } else if (e.target.value === \"3\") {\n      setPageSize(50);\n    }\n  };\n\n  const pageOptions = {\n    sizePerPage: pageSize,\n    totalSize: total !== null && total !== void 0 ? total : 0,\n    custom: true\n  };\n  useEffect(() => {\n    // FOR PRE-FETCHING NEXT PAGE\n    if (hasNextPage) {\n      const nextPage = currentPage + 1;\n      queryClient.prefetchQuery([\"userprofiledetails\", nextPage], () => getuserdetails(pageSize, currentPage, token, id));\n    }\n  }, [currentPage, queryClient]);\n  return {\n    currentPage,\n    pageOptions,\n    userdetailsData,\n    userActivebookingsData,\n    userPastBookingsData,\n    userScheduledBookingsData,\n    hasNextPage,\n    hasPreviousPage,\n    total,\n    isLoading,\n    pagelengthnum,\n    pageSize,\n    toggle,\n    isOpen,\n    changeCurrentPage\n  };\n};\n\n_s(useUserProfileDetail, \"hp/sdPFfcKhfdQRMQwxnUKYljnc=\", false, function () {\n  return [useParams, useQueryClient, usePaginatedQuery, usePaginatedQuery, usePaginatedQuery, usePaginatedQuery];\n});","map":{"version":3,"sources":["D:/diom working project/staging/src/pages/UserProfile/UserProfileDetail/useUserProfileDetail.js"],"names":["useEffect","useState","useQueryClient","usePaginatedQuery","getuserdetails","useParams","getUseractivebookings","getUserPastBookings","getUserScheduledBookings","useUserProfileDetail","isOpen","setIsOpen","id","token","localStorage","getItem","currentPage","setCurrentPage","pageSize","setPageSize","changeCurrentPage","pageNum","queryClient","data","userdetailsData","isLoading","userActivebookingsData","hasNextPage","hasPreviousPage","total","userPastBookingsData","userScheduledBookingsData","toggle","pagelengthnum","e","target","value","pageOptions","sizePerPage","totalSize","custom","nextPage","prefetchQuery"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { usePaginatedQuery } from \"../../../hooks/query\";\r\nimport { getuserdetails } from \"../../../APIS/userProfle\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getUseractivebookings } from \"../../../APIS/userProfle\";\r\nimport { getUserPastBookings } from \"../../../APIS/userProfle\";\r\nimport { getUserScheduledBookings } from \"../../../APIS/userProfle\";\r\n\r\nexport const useUserProfileDetail = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const { id } = useParams();\r\n  const token = localStorage.getItem(\"Token\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(50);\r\n  const changeCurrentPage = (pageNum) => setCurrentPage(pageNum);\r\n  const queryClient = useQueryClient();\r\n\r\n  const {\r\n    data: { data: userdetailsData },\r\n    isLoading,\r\n  } = usePaginatedQuery([\"userprofiledetails\", id], () =>\r\n    getuserdetails(pageSize, currentPage, token, id)\r\n  );\r\n\r\n  const {\r\n    data: { data: userActivebookingsData, hasNextPage, hasPreviousPage, total },\r\n  } = usePaginatedQuery([\"activebookings\", id], () =>\r\n    getUseractivebookings(pageSize, currentPage, token, id)\r\n  );\r\n  const {\r\n    data: { data: userPastBookingsData },\r\n  } = usePaginatedQuery([\"pastbookings\", id], () =>\r\n    getUserPastBookings(pageSize, currentPage, token, id)\r\n  );\r\n\r\n  const {\r\n    data: { data: userScheduledBookingsData },\r\n  } = usePaginatedQuery([\"scheduledbookings\", id], () =>\r\n    getUserScheduledBookings(pageSize, currentPage, token, id)\r\n  );\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const pagelengthnum = (e) => {\r\n    if (e.target.value === \"1\") {\r\n      setPageSize(10);\r\n    } else if (e.target.value === \"2\") {\r\n      setPageSize(30);\r\n    } else if (e.target.value === \"3\") {\r\n      setPageSize(50);\r\n    }\r\n  };\r\n  const pageOptions = {\r\n    sizePerPage: pageSize,\r\n    totalSize: total ?? 0,\r\n    custom: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n    if (hasNextPage) {\r\n      const nextPage = currentPage + 1;\r\n      queryClient.prefetchQuery([\"userprofiledetails\", nextPage], () =>\r\n        getuserdetails(pageSize, currentPage, token, id)\r\n      );\r\n    }\r\n  }, [currentPage, queryClient]);\r\n  return {\r\n    currentPage,\r\n    pageOptions,\r\n    userdetailsData,\r\n    userActivebookingsData,\r\n    userPastBookingsData,\r\n    userScheduledBookingsData,\r\n    hasNextPage,\r\n    hasPreviousPage,\r\n    total,\r\n    isLoading,\r\n    pagelengthnum,\r\n    pageSize,\r\n    toggle,\r\n    isOpen,\r\n    changeCurrentPage,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}