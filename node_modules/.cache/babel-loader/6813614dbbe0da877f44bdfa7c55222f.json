{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useQueryClient, useQuery } from \"react-query\";\nimport { getLocations } from \"../../APIS\";\nimport { getreportLocationBrand, getreportLocations } from \"../../APIS/reports\";\nimport { getUserByProfession } from \"../../APIS/userProfle\";\nimport { useAllDataQuery } from \"../../hooks/query\";\n\nconst UseReports = () => {\n  _s();\n\n  const token = localStorage.getItem(\"Token\");\n  const [reportFinalData, setReportFinalData] = useState({});\n  const reportTypeOptions = [{\n    label: \"Booking Report\",\n    value: 0\n  }, {\n    label: \"User Report\",\n    value: 1\n  }, {\n    label: \"User Ananlysis Report\",\n    value: 2\n  }, {\n    label: \"Cancelled Bookings\",\n    value: 3\n  }];\n  const timeSlotOptions = [{\n    label: \"08 AM - 04 PM\",\n    value: 0\n  }, {\n    label: \"04 PM - 12 AM\",\n    value: 1\n  }, {\n    label: \"12 AM - 08 AM\",\n    value: 2\n  }];\n\n  const reportTypeHandeler = e => {\n    // console.log(\"reportTypeHandeler : \", e);\n    setReportFinalData({ ...reportFinalData,\n      reportType: e\n    });\n  };\n\n  const timeSlotHandler = e => {\n    // console.log(\"timeSlotHandler : \", e);\n    setReportFinalData({ ...reportFinalData,\n      timeSlot: e\n    });\n  };\n\n  const diomBrandHandler = e => {\n    // console.log(\"diomBrandHandler : \", e);\n    const aa = Object.keys(e);\n    setReportFinalData({ ...reportFinalData,\n      diomBrand: aa\n    });\n  };\n\n  const diomLocationHandler = e => {\n    // console.log(\"diomLocationHandler : \", e);\n    setReportFinalData({ ...reportFinalData,\n      diomLocations: e\n    });\n  };\n\n  const resourceTypeHandler = e => {\n    // console.log(\"resourceTypeHandler : \", e);\n    setReportFinalData({ ...reportFinalData,\n      resourceTypes: e\n    });\n  };\n\n  const userTypeIndustryHandler = e => {\n    // console.log(\"userTypeIndustryHandler : \", e);\n    setReportFinalData({ ...reportFinalData,\n      userTypeByIndustry: e\n    });\n  };\n\n  const userTypePositionHandler = e => {\n    // console.log(\"userTypePositionHandler : \", e);\n    setReportFinalData({ ...reportFinalData,\n      userTypeByPosition: e\n    });\n  };\n\n  const startdateFunc = e => {\n    // console.log(\"startdateFunc : \", e);\n    const starttdate = e.target.value;\n    const startdate = new Date(starttdate).toISOString();\n    setReportFinalData({ ...reportFinalData,\n      startDate: startdate\n    });\n  };\n\n  const endDateFunc = e => {\n    // console.log(\"endDateFunc : \", e.target.value);\n    const endddate = e.target.value;\n    const enddate = new Date(endddate).toISOString();\n    setReportFinalData({ ...reportFinalData,\n      endDate: enddate\n    });\n  }; // ***************\n\n\n  const {\n    data: locationsData,\n    isLoading: loadingLocations\n  } = useAllDataQuery([\"locationsreports\", \"visible\"], () => getreportLocations(token));\n  const locationData = locationsData; // *******************\n\n  const {\n    data: brandData\n  } = useAllDataQuery([\"reportlocationbrandData\", \"visible\"], () => getreportLocationBrand(token)); // *************\n\n  const userByProfession = useQuery([\"getuserbyprofession\"], () => getUserByProfession(token));\n  const userByProfessionData = userByProfession.data;\n  const userByProfessionDataa = userByProfessionData === null || userByProfessionData === void 0 ? void 0 : userByProfessionData.data; // console.log(\"userByProfessionData \", userByProfessionDataa);\n\n  const userbyprofessionindustry = userByProfessionDataa === null || userByProfessionDataa === void 0 ? void 0 : userByProfessionDataa.industries.map((element, index) => ({\n    value: element.id,\n    label: element.name\n  })); // console.log(\"userbyprofessionindustry \", userbyprofessionindustry);\n\n  const userbyprofessionPosition = userByProfessionDataa === null || userByProfessionDataa === void 0 ? void 0 : userByProfessionDataa.positions.map((element, index) => {\n    return {\n      //   ...element,\n      value: element.id,\n      label: element.name\n    };\n  }); // console.log(\"userbyprofessionPosition \", userbyprofessionPosition);\n  // *************\n\n  const reportExport = () => {\n    console.log(\"reportFinalData : \", reportFinalData);\n  };\n\n  return {\n    reportTypeOptions,\n    userByProfessionData,\n    userbyprofessionPosition,\n    userbyprofessionindustry,\n    timeSlotOptions,\n    locationData,\n    brandData,\n    reportTypeHandeler,\n    timeSlotHandler,\n    diomBrandHandler,\n    diomLocationHandler,\n    resourceTypeHandler,\n    userTypeIndustryHandler,\n    userTypePositionHandler,\n    startdateFunc,\n    endDateFunc,\n    reportExport\n  };\n};\n\n_s(UseReports, \"wGNrDSFln708D7eWz5XrDg+NHpI=\", false, function () {\n  return [useAllDataQuery, useAllDataQuery, useQuery];\n});\n\n_c = UseReports;\nexport default UseReports;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseReports\");","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/1diom-frontend/diom-frontend/src/pages/Reports/useReports.js"],"names":["React","useState","useQueryClient","useQuery","getLocations","getreportLocationBrand","getreportLocations","getUserByProfession","useAllDataQuery","UseReports","token","localStorage","getItem","reportFinalData","setReportFinalData","reportTypeOptions","label","value","timeSlotOptions","reportTypeHandeler","e","reportType","timeSlotHandler","timeSlot","diomBrandHandler","aa","Object","keys","diomBrand","diomLocationHandler","diomLocations","resourceTypeHandler","resourceTypes","userTypeIndustryHandler","userTypeByIndustry","userTypePositionHandler","userTypeByPosition","startdateFunc","starttdate","target","startdate","Date","toISOString","startDate","endDateFunc","endddate","enddate","endDate","data","locationsData","isLoading","loadingLocations","locationData","brandData","userByProfession","userByProfessionData","userByProfessionDataa","userbyprofessionindustry","industries","map","element","index","id","name","userbyprofessionPosition","positions","reportExport","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useQueryClient, useQuery } from \"react-query\";\r\nimport { getLocations } from \"../../APIS\";\r\nimport { getreportLocationBrand, getreportLocations } from \"../../APIS/reports\";\r\nimport { getUserByProfession } from \"../../APIS/userProfle\";\r\nimport { useAllDataQuery } from \"../../hooks/query\";\r\n\r\nconst UseReports = () => {\r\n  const token = localStorage.getItem(\"Token\");\r\n  const [reportFinalData, setReportFinalData] = useState({});\r\n  const reportTypeOptions = [\r\n    { label: \"Booking Report\", value: 0 },\r\n    { label: \"User Report\", value: 1 },\r\n    { label: \"User Ananlysis Report\", value: 2 },\r\n    { label: \"Cancelled Bookings\", value: 3 },\r\n  ];\r\n  const timeSlotOptions = [\r\n    { label: \"08 AM - 04 PM\", value: 0 },\r\n    { label: \"04 PM - 12 AM\", value: 1 },\r\n    { label: \"12 AM - 08 AM\", value: 2 },\r\n  ];\r\n\r\n  const reportTypeHandeler = (e) => {\r\n    // console.log(\"reportTypeHandeler : \", e);\r\n    setReportFinalData({ ...reportFinalData, reportType: e });\r\n  };\r\n  const timeSlotHandler = (e) => {\r\n    // console.log(\"timeSlotHandler : \", e);\r\n    setReportFinalData({ ...reportFinalData, timeSlot: e });\r\n  };\r\n  const diomBrandHandler = (e) => {\r\n    // console.log(\"diomBrandHandler : \", e);\r\n    const aa = Object.keys(e);\r\n    setReportFinalData({ ...reportFinalData, diomBrand: aa });\r\n  };\r\n  const diomLocationHandler = (e) => {\r\n    // console.log(\"diomLocationHandler : \", e);\r\n    setReportFinalData({ ...reportFinalData, diomLocations: e });\r\n  };\r\n  const resourceTypeHandler = (e) => {\r\n    // console.log(\"resourceTypeHandler : \", e);\r\n    setReportFinalData({ ...reportFinalData, resourceTypes: e });\r\n  };\r\n  const userTypeIndustryHandler = (e) => {\r\n    // console.log(\"userTypeIndustryHandler : \", e);\r\n    setReportFinalData({ ...reportFinalData, userTypeByIndustry: e });\r\n  };\r\n  const userTypePositionHandler = (e) => {\r\n    // console.log(\"userTypePositionHandler : \", e);\r\n    setReportFinalData({ ...reportFinalData, userTypeByPosition: e });\r\n  };\r\n  const startdateFunc = (e) => {\r\n    // console.log(\"startdateFunc : \", e);\r\n    const starttdate = e.target.value;\r\n    const startdate = new Date(starttdate).toISOString();\r\n    setReportFinalData({ ...reportFinalData, startDate: startdate });\r\n  };\r\n  const endDateFunc = (e) => {\r\n    // console.log(\"endDateFunc : \", e.target.value);\r\n    const endddate = e.target.value;\r\n    const enddate = new Date(endddate).toISOString();\r\n    setReportFinalData({ ...reportFinalData, endDate: enddate });\r\n  };\r\n\r\n  // ***************\r\n  const { data: locationsData, isLoading: loadingLocations } = useAllDataQuery(\r\n    [\"locationsreports\", \"visible\"],\r\n    () => getreportLocations(token)\r\n  );\r\n  const locationData = locationsData;\r\n\r\n  // *******************\r\n  const { data: brandData } = useAllDataQuery(\r\n    [\"reportlocationbrandData\", \"visible\"],\r\n    () => getreportLocationBrand(token)\r\n  );\r\n\r\n  // *************\r\n  const userByProfession = useQuery([\"getuserbyprofession\"], () =>\r\n    getUserByProfession(token)\r\n  );\r\n  const userByProfessionData = userByProfession.data;\r\n  const userByProfessionDataa = userByProfessionData?.data;\r\n  // console.log(\"userByProfessionData \", userByProfessionDataa);\r\n  const userbyprofessionindustry = userByProfessionDataa?.industries.map(\r\n    (element, index) => ({\r\n      value: element.id,\r\n      label: element.name,\r\n    })\r\n  );\r\n\r\n  // console.log(\"userbyprofessionindustry \", userbyprofessionindustry);\r\n  const userbyprofessionPosition = userByProfessionDataa?.positions.map(\r\n    (element, index) => {\r\n      return {\r\n        //   ...element,\r\n\r\n        value: element.id,\r\n        label: element.name,\r\n      };\r\n    }\r\n  );\r\n  // console.log(\"userbyprofessionPosition \", userbyprofessionPosition);\r\n  // *************\r\n\r\n  const reportExport = () => {\r\n    console.log(\"reportFinalData : \", reportFinalData);\r\n  };\r\n\r\n  return {\r\n    reportTypeOptions,\r\n    userByProfessionData,\r\n    userbyprofessionPosition,\r\n    userbyprofessionindustry,\r\n    timeSlotOptions,\r\n    locationData,\r\n    brandData,\r\n    reportTypeHandeler,\r\n    timeSlotHandler,\r\n    diomBrandHandler,\r\n    diomLocationHandler,\r\n    resourceTypeHandler,\r\n    userTypeIndustryHandler,\r\n    userTypePositionHandler,\r\n    startdateFunc,\r\n    endDateFunc,\r\n    reportExport,\r\n  };\r\n};\r\n\r\nexport default UseReports;\r\n"]},"metadata":{},"sourceType":"module"}