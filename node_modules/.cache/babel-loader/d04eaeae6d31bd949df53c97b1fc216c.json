{"ast":null,"code":"import{useQuery}from\"react-query\";/**\r\n *\r\n * @param {query key} key\r\n * @param { async callback function which return data from server} getData\r\n * @returns a response of paginated  api\r\n */export function usePaginatedQuery(key,getData){var fallback={data:[],hasNextPage:false,hasPreviousPage:false,total:0};var _useQuery=useQuery(key,getData,{keepPreviousData:true,staleTime:2000,retry:false}),_useQuery$data=_useQuery.data,data=_useQuery$data===void 0?fallback:_useQuery$data,_useQuery$isLoading=_useQuery.isLoading,isLoading=_useQuery$isLoading===void 0?true:_useQuery$isLoading;return{data:data,isLoading:isLoading};}/**\r\n *\r\n * @param {query key} key\r\n * @param { async callback function which return data from server} getData\r\n * @returns a list of records\r\n */export function useAllDataQuery(key,getData){var _useQuery2=useQuery(key,getData,{keepPreviousData:true,staleTime:2000,retry:false}),_useQuery2$data=_useQuery2.data,data=_useQuery2$data===void 0?[]:_useQuery2$data,_useQuery2$isLoading=_useQuery2.isLoading,isLoading=_useQuery2$isLoading===void 0?true:_useQuery2$isLoading;return{data:data,isLoading:isLoading};}","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/1diom-frontend/diom-frontend/src/hooks/query.js"],"names":["useQuery","usePaginatedQuery","key","getData","fallback","data","hasNextPage","hasPreviousPage","total","keepPreviousData","staleTime","retry","isLoading","useAllDataQuery"],"mappings":"AAAA,OAASA,QAAT,KAAyB,aAAzB,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAASC,CAAAA,iBAAT,CAA2BC,GAA3B,CAAgCC,OAAhC,CAAyC,CAC9C,GAAMC,CAAAA,QAAQ,CAAG,CACfC,IAAI,CAAE,EADS,CAEfC,WAAW,CAAE,KAFE,CAGfC,eAAe,CAAE,KAHF,CAIfC,KAAK,CAAE,CAJQ,CAAjB,CAMA,cAA8CR,QAAQ,CAACE,GAAD,CAAMC,OAAN,CAAe,CACnEM,gBAAgB,CAAE,IADiD,CAEnEC,SAAS,CAAE,IAFwD,CAGnEC,KAAK,CAAE,KAH4D,CAAf,CAAtD,0BAAQN,IAAR,CAAQA,IAAR,yBAAeD,QAAf,8CAAyBQ,SAAzB,CAAyBA,SAAzB,8BAAqC,IAArC,qBAKA,MAAO,CAAEP,IAAI,CAAJA,IAAF,CAAQO,SAAS,CAATA,SAAR,CAAP,CACD,CAED;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAASC,CAAAA,eAAT,CAAyBX,GAAzB,CAA8BC,OAA9B,CAAuC,CAC5C,eAAwCH,QAAQ,CAACE,GAAD,CAAMC,OAAN,CAAe,CAC7DM,gBAAgB,CAAE,IAD2C,CAE7DC,SAAS,CAAE,IAFkD,CAG7DC,KAAK,CAAE,KAHsD,CAAf,CAAhD,4BAAQN,IAAR,CAAQA,IAAR,0BAAe,EAAf,iDAAmBO,SAAnB,CAAmBA,SAAnB,+BAA+B,IAA/B,sBAKA,MAAO,CAAEP,IAAI,CAAJA,IAAF,CAAQO,SAAS,CAATA,SAAR,CAAP,CACD","sourcesContent":["import { useQuery } from \"react-query\";\r\n\r\n/**\r\n *\r\n * @param {query key} key\r\n * @param { async callback function which return data from server} getData\r\n * @returns a response of paginated  api\r\n */\r\nexport function usePaginatedQuery(key, getData) {\r\n  const fallback = {\r\n    data: [],\r\n    hasNextPage: false,\r\n    hasPreviousPage: false,\r\n    total: 0,\r\n  };\r\n  const { data = fallback, isLoading = true } = useQuery(key, getData, {\r\n    keepPreviousData: true,\r\n    staleTime: 2000,\r\n    retry: false,\r\n  });\r\n  return { data, isLoading };\r\n}\r\n\r\n/**\r\n *\r\n * @param {query key} key\r\n * @param { async callback function which return data from server} getData\r\n * @returns a list of records\r\n */\r\nexport function useAllDataQuery(key, getData) {\r\n  const { data = [], isLoading = true } = useQuery(key, getData, {\r\n    keepPreviousData: true,\r\n    staleTime: 2000,\r\n    retry: false,\r\n  });\r\n  return { data, isLoading };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}