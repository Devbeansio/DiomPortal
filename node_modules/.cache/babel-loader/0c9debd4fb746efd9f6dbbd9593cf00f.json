{"ast":null,"code":"import _asyncToGenerator from\"D:/diom working project/staging/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"D:\\\\diom working project\\\\staging\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{DIOM_BASED_URLS}from\"../config/url\";/**\r\n *\r\n * @param size\r\n * @param page\r\n * @returns a list of Notifications in DIOM\r\n */export var getAdminNotifications=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(token,pageNumber){var size,res,resJson,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:size=\"10\";// return await (\n_context.next=3;return fetch(\"\".concat(DIOM_BASED_URLS,\"/admin-notifications\"),{// await fetch(`${DIOM_BASED_URLS}/admin-notifications?size=${size}&page=${pageNumber}`, {\nmethod:\"GET\",headers:{Authorization:\"Bearer \"+token}});case 3:res=_context.sent;if(res.ok){_context.next=9;break;}_context.next=7;return res.json();case 7:resJson=_context.sent;throw new Error(resJson.error.message);case 9:_context.next=11;return res.json();case 11:data=_context.sent;return _context.abrupt(\"return\",{data:data});case 13:case\"end\":return _context.stop();}}},_callee);}));return function getAdminNotifications(_x,_x2){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["D:/diom working project/staging/src/APIS/notifications.js"],"names":["DIOM_BASED_URLS","getAdminNotifications","token","pageNumber","size","fetch","method","headers","Authorization","res","ok","json","resJson","Error","error","message","data"],"mappings":"oPAAA,OAASA,eAAT,KAAgC,eAAhC,CACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,IAAMC,CAAAA,qBAAqB,0FAAG,iBAAOC,KAAP,CAAaC,UAAb,4IAC7BC,IAD6B,CACtB,IADsB,CAEnC;AAFmC,sBAIfC,CAAAA,KAAK,WAAIL,eAAJ,yBAA2C,CAChE;AACAM,MAAM,CAAE,KAFwD,CAGhEC,OAAO,CAAE,CACPC,aAAa,CAAE,UAAYN,KADpB,CAHuD,CAA3C,CAJU,QAI3BO,GAJ2B,kBAY9BA,GAAG,CAACC,EAZ0B,+CAaXD,CAAAA,GAAG,CAACE,IAAJ,EAbW,QAa3BC,OAb2B,oBAc3B,IAAIC,CAAAA,KAAJ,CAAUD,OAAO,CAACE,KAAR,CAAcC,OAAxB,CAd2B,+BAgBhBN,CAAAA,GAAG,CAACE,IAAJ,EAhBgB,SAgB7BK,IAhB6B,+CAkB5B,CACLA,IAAI,CAAJA,IADK,CAlB4B,yDAAH,kBAArBf,CAAAA,qBAAqB,gDAA3B","sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @returns a list of Notifications in DIOM\r\n */\r\n\r\nexport const getAdminNotifications = async (token,pageNumber) => {\r\n  const size = \"10\";\r\n  // return await (\r\n\r\n    const res = await fetch(`${DIOM_BASED_URLS}/admin-notifications`, {\r\n      // await fetch(`${DIOM_BASED_URLS}/admin-notifications?size=${size}&page=${pageNumber}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n  // ).json();\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const data = await res.json();\r\n  \r\n  return {\r\n    data\r\n  };\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}