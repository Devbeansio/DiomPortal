{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { DIOM_BASED_URLS } from \"../../../../config/url\";\nimport { toast } from \"react-toastify\";\nexport const useCreateLocationBrand = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [modal_static, setModal_static] = useState(false);\n  const [nameCreate, setNameCreate] = useState(\"\");\n  const [descriptionCreate, setDescriptionCreate] = useState(\"\");\n  const token = localStorage.getItem(\"Token\");\n\n  const LocationBrandNameOnChange = event => {\n    setNameCreate(event.target.value);\n  };\n\n  const textareachange = event => {\n    setDescriptionCreate(event.target.value);\n  };\n\n  const removeBodyCss = () => {\n    document.body.classList.add(\"no_padding\");\n  };\n\n  const tog_static = () => {\n    setModal_static(!modal_static);\n    removeBodyCss();\n  };\n\n  const updateNameAndDescription = () => {\n    fetch(`${DIOM_BASED_URLS}/admin-location-categories`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, text/plain\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n        Authorization: \"Bearer \" + token\n      },\n      body: JSON.stringify({\n        name: nameCreate,\n        description: descriptionCreate\n      })\n    }).then(result3 => {\n      if (result3.status === 200) {\n        toast.success(\"Updated Successfully\");\n      } else {\n        toast.error(\" Something went wrong\");\n      }\n\n      setModal_static(false);\n    }).catch(error => setError(error.message), console.log(\"error\", error));\n  };\n\n  return {\n    error,\n    setError,\n    modal_static,\n    setModal_static,\n    nameCreate,\n    setNameCreate,\n    nameCreate,\n    descriptionCreate,\n    setDescriptionCreate,\n    LocationBrandNameOnChange,\n    textareachange,\n    tog_static,\n    updateNameAndDescription\n  };\n};\n\n_s(useCreateLocationBrand, \"c21y7K8D3gsQYm4zkbmw3240qQ8=\");","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/1diom-frontend/diom-frontend/src/pages/Locations/LocationBrands/CreateLocationBrand/useCreateLocationBrand.js"],"names":["useState","DIOM_BASED_URLS","toast","useCreateLocationBrand","error","setError","modal_static","setModal_static","nameCreate","setNameCreate","descriptionCreate","setDescriptionCreate","token","localStorage","getItem","LocationBrandNameOnChange","event","target","value","textareachange","removeBodyCss","document","body","classList","add","tog_static","updateNameAndDescription","fetch","method","headers","Accept","Authorization","JSON","stringify","name","description","then","result3","status","success","catch","message","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,iBAAD,EAAoBC,oBAApB,IAA4CX,QAAQ,CAAC,EAAD,CAA1D;AAEA,QAAMY,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAMC,yBAAyB,GAAIC,KAAD,IAAW;AAC3CP,IAAAA,aAAa,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIH,KAAD,IAAW;AAChCL,IAAAA,oBAAoB,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApB;AACD,GAFD;;AAIA,QAAME,aAAa,GAAG,MAAM;AAC1BC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,YAA5B;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAG,MAAM;AACvBlB,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AAEAc,IAAAA,aAAa;AACd,GAJD;;AAMA,QAAMM,wBAAwB,GAAG,MAAM;AACrCC,IAAAA,KAAK,CAAE,GAAE1B,eAAgB,4BAApB,EAAiD;AACpD2B,MAAAA,MAAM,EAAE,MAD4C;AAEpDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,8BADD;AAEP,wBAAgB,gCAFT;AAGPC,QAAAA,aAAa,EAAE,YAAYnB;AAHpB,OAF2C;AAOpDU,MAAAA,IAAI,EAAEU,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAE1B,UADa;AAEnB2B,QAAAA,WAAW,EAAEzB;AAFM,OAAf;AAP8C,KAAjD,CAAL,CAYG0B,IAZH,CAYSC,OAAD,IAAa;AACjB,UAAIA,OAAO,CAACC,MAAR,KAAmB,GAAvB,EAA4B;AAC1BpC,QAAAA,KAAK,CAACqC,OAAN,CAAc,sBAAd;AACD,OAFD,MAEO;AACLrC,QAAAA,KAAK,CAACE,KAAN,CAAY,uBAAZ;AACD;;AACDG,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAnBH,EAoBGiC,KApBH,CAoBUpC,KAAD,IAAWC,QAAQ,CAACD,KAAK,CAACqC,OAAP,CApB5B,EAoB6CC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBvC,KAArB,CApB7C;AAqBD,GAtBD;;AAwBA,SAAO;AACLA,IAAAA,KADK;AAELC,IAAAA,QAFK;AAGLC,IAAAA,YAHK;AAILC,IAAAA,eAJK;AAKLC,IAAAA,UALK;AAMLC,IAAAA,aANK;AAOLD,IAAAA,UAPK;AAQLE,IAAAA,iBARK;AASLC,IAAAA,oBATK;AAULI,IAAAA,yBAVK;AAWLI,IAAAA,cAXK;AAYLM,IAAAA,UAZK;AAaLC,IAAAA;AAbK,GAAP;AAeD,CAhEM;;GAAMvB,sB","sourcesContent":["import { useState } from \"react\";\r\nimport { DIOM_BASED_URLS } from \"../../../../config/url\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const useCreateLocationBrand = () => {\r\n  const [error, setError] = useState(null);\r\n  const [modal_static, setModal_static] = useState(false);\r\n  const [nameCreate, setNameCreate] = useState(\"\");\r\n  const [descriptionCreate, setDescriptionCreate] = useState(\"\");\r\n\r\n  const token = localStorage.getItem(\"Token\");\r\n\r\n  const LocationBrandNameOnChange = (event) => {\r\n    setNameCreate(event.target.value);\r\n  };\r\n\r\n  const textareachange = (event) => {\r\n    setDescriptionCreate(event.target.value);\r\n  };\r\n\r\n  const removeBodyCss = () => {\r\n    document.body.classList.add(\"no_padding\");\r\n  };\r\n  const tog_static = () => {\r\n    setModal_static(!modal_static);\r\n\r\n    removeBodyCss();\r\n  };\r\n\r\n  const updateNameAndDescription = () => {\r\n    fetch(`${DIOM_BASED_URLS}/admin-location-categories`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json, text/plain\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body: JSON.stringify({\r\n        name: nameCreate,\r\n        description: descriptionCreate,\r\n      }),\r\n    })\r\n      .then((result3) => {\r\n        if (result3.status === 200) {\r\n          toast.success(\"Updated Successfully\");\r\n        } else {\r\n          toast.error(\" Something went wrong\");\r\n        }\r\n        setModal_static(false);\r\n      })\r\n      .catch((error) => setError(error.message), console.log(\"error\", error));\r\n  };\r\n\r\n  return {\r\n    error,\r\n    setError,\r\n    modal_static,\r\n    setModal_static,\r\n    nameCreate,\r\n    setNameCreate,\r\n    nameCreate,\r\n    descriptionCreate,\r\n    setDescriptionCreate,\r\n    LocationBrandNameOnChange,\r\n    textareachange,\r\n    tog_static,\r\n    updateNameAndDescription,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}