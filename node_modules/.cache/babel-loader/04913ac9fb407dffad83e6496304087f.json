{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\"; // import { useAllDataQuery, usePaginatedQuery } from \"../../../hooks/query\";\n\nimport { usePaginatedQuery } from \"../../../hooks/query\";\nimport { getTaxation } from \"../../../APIS/taxation\";\nimport { useQueryClient } from \"react-query\";\nimport LoaderHook from \"./../../../hooks/loaderHook\";\nexport const useTaxation = () => {\n  _s();\n\n  const {\n    setLoading\n  } = LoaderHook();\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(50);\n\n  const changeCurrentPage = pageNum => setCurrentPage(pageNum);\n\n  const token = localStorage.getItem(\"Token\");\n  const queryClient = useQueryClient();\n  const {\n    data: {\n      data: taxationData,\n      hasNextPage,\n      hasPreviousPage,\n      total\n    },\n    isLoading\n  } = usePaginatedQuery([\"taxation\", currentPage], () => getTaxation(pageSize, currentPage, token));\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const pagelengthnum = e => {\n    if (e.target.value === \"1\") {\n      setPageSize(10);\n    } else if (e.target.value === \"2\") {\n      setPageSize(30);\n    } else if (e.target.value === \"3\") {\n      setPageSize(50);\n    }\n  };\n\n  const pageOptions = {\n    sizePerPage: pageSize,\n    totalSize: total !== null && total !== void 0 ? total : 0,\n    custom: true\n  };\n\n  const loadingFunc = () => {\n    setLoading(isLoading);\n  };\n\n  useEffect(() => {\n    isLoading && loadingFunc();\n  }, [isLoading]);\n  useEffect(() => {\n    // FOR PRE-FETCHING NEXT PAGE\n    if (hasNextPage) {\n      const nextPage = currentPage + 1;\n      queryClient.prefetchQuery([\"taxation\", nextPage], () => getTaxation(pageSize, nextPage, token));\n    }\n  }, [currentPage, queryClient]);\n  return {\n    currentPage,\n    taxationData,\n    pageOptions,\n    isLoading,\n    hasNextPage,\n    hasPreviousPage,\n    total,\n    pagelengthnum,\n    pageSize,\n    toggle,\n    isOpen,\n    changeCurrentPage\n  };\n};\n\n_s(useTaxation, \"kwkTxaihqLoAZxLCyCq+XpUB6X8=\", false, function () {\n  return [useQueryClient, usePaginatedQuery];\n});","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/1diom-frontend/diom-frontend/src/pages/Finance/Taxation/useTaxation.js"],"names":["useEffect","useState","usePaginatedQuery","getTaxation","useQueryClient","LoaderHook","useTaxation","setLoading","isOpen","setIsOpen","currentPage","setCurrentPage","pageSize","setPageSize","changeCurrentPage","pageNum","token","localStorage","getItem","queryClient","data","taxationData","hasNextPage","hasPreviousPage","total","isLoading","toggle","pagelengthnum","e","target","value","pageOptions","sizePerPage","totalSize","custom","loadingFunc","nextPage","prefetchQuery"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\n// import { useAllDataQuery, usePaginatedQuery } from \"../../../hooks/query\";\r\nimport { usePaginatedQuery } from \"../../../hooks/query\";\r\nimport { getTaxation } from \"../../../APIS/taxation\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport LoaderHook from \"./../../../hooks/loaderHook\";\r\n\r\nexport const useTaxation = () => {\r\n  const { setLoading } = LoaderHook();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(50);\r\n  const changeCurrentPage = (pageNum) => setCurrentPage(pageNum);\r\n  const token = localStorage.getItem(\"Token\");\r\n  const queryClient = useQueryClient();\r\n\r\n  const {\r\n    data: { data: taxationData, hasNextPage, hasPreviousPage, total },\r\n    isLoading,\r\n  } = usePaginatedQuery([\"taxation\", currentPage], () =>\r\n    getTaxation(pageSize, currentPage, token)\r\n  );\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const pagelengthnum = (e) => {\r\n    if (e.target.value === \"1\") {\r\n      setPageSize(10);\r\n    } else if (e.target.value === \"2\") {\r\n      setPageSize(30);\r\n    } else if (e.target.value === \"3\") {\r\n      setPageSize(50);\r\n    }\r\n  };\r\n\r\n  const pageOptions = {\r\n    sizePerPage: pageSize,\r\n    totalSize: total ?? 0,\r\n    custom: true,\r\n  };\r\n  const loadingFunc = () => {\r\n    setLoading(isLoading);\r\n  };\r\n  useEffect(() => {\r\n    isLoading && loadingFunc();\r\n  }, [isLoading]);\r\n\r\n  useEffect(() => {\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n\r\n    if (hasNextPage) {\r\n      const nextPage = currentPage + 1;\r\n      queryClient.prefetchQuery([\"taxation\", nextPage], () =>\r\n        getTaxation(pageSize, nextPage, token)\r\n      );\r\n    }\r\n  }, [currentPage, queryClient]);\r\n\r\n  return {\r\n    currentPage,\r\n    taxationData,\r\n    pageOptions,\r\n    isLoading,\r\n    hasNextPage,\r\n    hasPreviousPage,\r\n    total,\r\n    pagelengthnum,\r\n    pageSize,\r\n    toggle,\r\n    isOpen,\r\n    changeCurrentPage,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}