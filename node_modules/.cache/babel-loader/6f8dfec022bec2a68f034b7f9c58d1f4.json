{"ast":null,"code":"import { DIOM_BASED_URLS } from \"../config/url\";\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @returns a list of Notifications in DIOM\r\n */\n\nexport const getAdminNotifications = async (token, pageNumber) => {\n  const size = \"10\"; // return await (\n\n  const res = await fetch(`${DIOM_BASED_URLS}/admin-notifications`, {\n    // await fetch(`${DIOM_BASED_URLS}/admin-notifications?size=${size}&page=${pageNumber}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }); // ).json();\n\n  if (!res.ok) {\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const data = await res.json();\n  return {\n    data\n  };\n};","map":{"version":3,"sources":["D:/diom working project/staging/src/APIS/notifications.js"],"names":["DIOM_BASED_URLS","getAdminNotifications","token","pageNumber","size","res","fetch","method","headers","Authorization","ok","resJson","json","Error","error","message","data"],"mappings":"AAAA,SAASA,eAAT,QAAgC,eAAhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAOC,KAAP,EAAaC,UAAb,KAA4B;AAC/D,QAAMC,IAAI,GAAG,IAAb,CAD+D,CAE/D;;AAEE,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEN,eAAgB,sBAApB,EAA2C;AAChE;AACAO,IAAAA,MAAM,EAAE,KAFwD;AAGhEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYP;AADpB;AAHuD,GAA3C,CAAvB,CAJ6D,CAW/D;;AACA,MAAI,CAACG,GAAG,CAACK,EAAT,EAAa;AACX,UAAMC,OAAO,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAtB;AACA,UAAM,IAAIC,KAAJ,CAAUF,OAAO,CAACG,KAAR,CAAcC,OAAxB,CAAN;AACD;;AACD,QAAMC,IAAI,GAAG,MAAMX,GAAG,CAACO,IAAJ,EAAnB;AAEA,SAAO;AACLI,IAAAA;AADK,GAAP;AAGD,CArBM","sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @returns a list of Notifications in DIOM\r\n */\r\n\r\nexport const getAdminNotifications = async (token,pageNumber) => {\r\n  const size = \"10\";\r\n  // return await (\r\n\r\n    const res = await fetch(`${DIOM_BASED_URLS}/admin-notifications`, {\r\n      // await fetch(`${DIOM_BASED_URLS}/admin-notifications?size=${size}&page=${pageNumber}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n  // ).json();\r\n  if (!res.ok) {\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const data = await res.json();\r\n  \r\n  return {\r\n    data\r\n  };\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}