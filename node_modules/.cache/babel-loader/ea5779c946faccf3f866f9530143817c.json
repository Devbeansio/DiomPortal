{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useAllDataQuery, usePaginatedQuery } from \"../../hooks/query\";\nimport { getLocationBrand, getsearchedLocationListing } from \"../../APIS\";\nimport { getLocationListing } from \"../../APIS\";\nimport { useHistory } from \"react-router-dom\";\nexport const useLocationsListing = () => {\n  _s();\n\n  let history = useHistory();\n  const [isOpen, setIsOpen] = useState(false);\n  const token = localStorage.getItem(\"Token\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(50);\n\n  const changeCurrentPage = pageNum => setCurrentPage(pageNum);\n\n  const queryClient = useQueryClient();\n  const [applyLocationFilter, setApplyFilter] = useState(false);\n  const [filter, setFilter] = useState(\"All\");\n  const {\n    data: {\n      data: locationLisitngData,\n      hasNextPage,\n      hasPreviousPage,\n      total\n    },\n    isLoading\n  } = usePaginatedQuery([\"locations\", `${pageSize}`, `${currentPage}`, `${filter}`], () => getLocationListing(pageSize, currentPage, token, applyLocationFilter, filter));\n  const {\n    data: {\n      data: searchedlocationLisitngData\n    }\n  } = usePaginatedQuery([\"searchedlocations\"], () => getsearchedLocationListing(token, history));\n  const {\n    data: locationsData,\n    isLoading: loadingLocations\n  } = useAllDataQuery([\"locationbrandData\", \"visible\"], () => getLocationBrand(token, history));\n  const brandData = locationsData;\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const pagelengthnum = e => {\n    if (e.target.value === \"1\") {\n      setPageSize(10);\n    } else if (e.target.value === \"2\") {\n      setPageSize(30);\n    } else if (e.target.value === \"3\") {\n      setPageSize(50);\n    }\n  };\n\n  const pageOptions = {\n    sizePerPage: pageSize,\n    totalSize: total !== null && total !== void 0 ? total : 0,\n    custom: true\n  };\n\n  const handeldiomlocation = val => {\n    if (val === \"All\") {\n      setCurrentPage(1);\n      setApplyFilter(false);\n      setFilter(\"All\");\n    } else {\n      setCurrentPage(1);\n      setApplyFilter(true);\n      setFilter(`{\"locationCategoriesId\":\"${val}\"}`);\n    }\n  };\n\n  useEffect(() => {\n    // FOR PRE-FETCHING NEXT PAGE\n    if (hasNextPage) {\n      const nextPage = currentPage + 1;\n      queryClient.prefetchQuery([\"locations\", `${pageSize}`, `${currentPage}`, `${filter}`], () => getLocationListing(pageSize, nextPage, token, history));\n    }\n  }, [currentPage, queryClient, filter]);\n  return {\n    currentPage,\n    pageOptions,\n    locationLisitngData,\n    hasNextPage,\n    hasPreviousPage,\n    total,\n    locationsData,\n    loadingLocations,\n    isLoading,\n    pagelengthnum,\n    pageSize,\n    brandData,\n    toggle,\n    isOpen,\n    handeldiomlocation,\n    changeCurrentPage,\n    filter,\n    searchedlocationLisitngData\n  };\n};\n\n_s(useLocationsListing, \"5TI7RAEJ1c/HB2d+efWxUr7gQ+M=\", false, function () {\n  return [useHistory, useQueryClient, usePaginatedQuery, usePaginatedQuery, useAllDataQuery];\n});","map":{"version":3,"names":["useEffect","useState","useQueryClient","useAllDataQuery","usePaginatedQuery","getLocationBrand","getsearchedLocationListing","getLocationListing","useHistory","useLocationsListing","history","isOpen","setIsOpen","token","localStorage","getItem","currentPage","setCurrentPage","pageSize","setPageSize","changeCurrentPage","pageNum","queryClient","applyLocationFilter","setApplyFilter","filter","setFilter","data","locationLisitngData","hasNextPage","hasPreviousPage","total","isLoading","searchedlocationLisitngData","locationsData","loadingLocations","brandData","toggle","pagelengthnum","e","target","value","pageOptions","sizePerPage","totalSize","custom","handeldiomlocation","val","nextPage","prefetchQuery"],"sources":["C:/Users/tech sign/Desktop/xyz/src/pages/Locations/useLocations.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { useAllDataQuery, usePaginatedQuery } from \"../../hooks/query\";\r\nimport { getLocationBrand, getsearchedLocationListing } from \"../../APIS\";\r\nimport { getLocationListing } from \"../../APIS\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport const useLocationsListing = () => {\r\n  let history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const token = localStorage.getItem(\"Token\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(50);\r\n  const changeCurrentPage = (pageNum) => setCurrentPage(pageNum);\r\n  const queryClient = useQueryClient();\r\n  const [applyLocationFilter, setApplyFilter] = useState(false);\r\n  const [filter, setFilter] = useState(\"All\");\r\n\r\n  const {\r\n    data: { data: locationLisitngData, hasNextPage, hasPreviousPage, total },\r\n    isLoading,\r\n  } = usePaginatedQuery([\"locations\", `${pageSize}`,`${currentPage}`, `${filter}`], () =>\r\n    getLocationListing(\r\n      pageSize,\r\n      currentPage,\r\n      token,\r\n      applyLocationFilter,\r\n      filter\r\n    )\r\n  );\r\n\r\n  const {\r\n    data: { data: searchedlocationLisitngData },\r\n  } = usePaginatedQuery([\"searchedlocations\"], () =>\r\n    getsearchedLocationListing(token,history)\r\n  );\r\n\r\n  const { data: locationsData, isLoading: loadingLocations } = useAllDataQuery(\r\n    [\"locationbrandData\", \"visible\"],\r\n    () => getLocationBrand(token,history)\r\n  );\r\n  const brandData = locationsData;\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const pagelengthnum = (e) => {\r\n    if (e.target.value === \"1\") {\r\n      setPageSize(10);\r\n    } else if (e.target.value === \"2\") {\r\n      setPageSize(30);\r\n    } else if (e.target.value === \"3\") {\r\n      setPageSize(50);\r\n    }\r\n  };\r\n\r\n  const pageOptions = {\r\n    sizePerPage: pageSize,\r\n    totalSize: total ?? 0,\r\n    custom: true,\r\n  };\r\n\r\n  const handeldiomlocation = (val) => {\r\n    if (val === \"All\") {\r\n      setCurrentPage(1);\r\n      setApplyFilter(false);\r\n      setFilter(\"All\");\r\n    } else {\r\n      setCurrentPage(1);\r\n      setApplyFilter(true);\r\n      setFilter(`{\"locationCategoriesId\":\"${val}\"}`);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n\r\n    if (hasNextPage) {\r\n      const nextPage = currentPage + 1;\r\n      queryClient.prefetchQuery([\"locations\",`${pageSize}`,`${currentPage}`, `${filter}`], () =>\r\n        getLocationListing(pageSize, nextPage, token,history)\r\n      );\r\n    }\r\n  }, [currentPage, queryClient, filter]);\r\n\r\n  return {\r\n    currentPage,\r\n    pageOptions,\r\n    locationLisitngData,\r\n    hasNextPage,\r\n    hasPreviousPage,\r\n    total,\r\n    locationsData,\r\n    loadingLocations,\r\n    isLoading,\r\n    pagelengthnum,\r\n    pageSize,\r\n    brandData,\r\n    toggle,\r\n    isOpen,\r\n    handeldiomlocation,\r\n    changeCurrentPage,\r\n    filter,\r\n    searchedlocationLisitngData,\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}