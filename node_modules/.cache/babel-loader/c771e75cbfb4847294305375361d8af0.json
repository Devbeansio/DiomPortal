{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Ecommerce Redux States\n\nimport { GET_CART_DATA, GET_CUSTOMERS, GET_ORDERS, GET_PRODUCT_DETAIL, GET_PRODUCTS, GET_SHOPS } from \"./actionTypes\";\nimport { getCartDataFail, getCartDataSuccess, getCustomersFail, getCustomersSuccess, getOrdersFail, getOrdersSuccess, getProductDetailFail, getProductDetailSuccess, getProductsFail, getProductsSuccess, getShopsFail, getShopsSuccess } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getCartData, getCustomers, getOrders, getProducts, getShops, getProductDetail } from \"../../helpers/fackBackend_Helper\";\n\nfunction* fetchProducts() {\n  try {\n    const response = yield call(getProducts);\n    yield put(getProductsSuccess(response));\n  } catch (error) {\n    yield put(getProductsFail(error));\n  }\n}\n\nfunction* fetchProductDetail(_ref) {\n  let {\n    productId\n  } = _ref;\n\n  try {\n    const response = yield call(getProductDetail, productId);\n    yield put(getProductDetailSuccess(response));\n  } catch (error) {\n    yield put(getProductDetailFail(error));\n  }\n}\n\nfunction* fetchOrders() {\n  try {\n    const response = yield call(getOrders);\n    yield put(getOrdersSuccess(response));\n  } catch (error) {\n    yield put(getOrdersFail(error));\n  }\n}\n\nfunction* fetchCartData() {\n  try {\n    const response = yield call(getCartData);\n    yield put(getCartDataSuccess(response));\n  } catch (error) {\n    yield put(getCartDataFail(error));\n  }\n}\n\nfunction* fetchCustomers() {\n  try {\n    const response = yield call(getCustomers);\n    yield put(getCustomersSuccess(response));\n  } catch (error) {\n    yield put(getCustomersFail(error));\n  }\n}\n\nfunction* fetchShops() {\n  try {\n    const response = yield call(getShops);\n    yield put(getShopsSuccess(response));\n  } catch (error) {\n    yield put(getShopsFail(error));\n  }\n}\n\nfunction* ecommerceSaga() {\n  yield takeEvery(GET_PRODUCTS, fetchProducts);\n  yield takeEvery(GET_PRODUCT_DETAIL, fetchProductDetail);\n  yield takeEvery(GET_ORDERS, fetchOrders);\n  yield takeEvery(GET_CART_DATA, fetchCartData);\n  yield takeEvery(GET_CUSTOMERS, fetchCustomers);\n  yield takeEvery(GET_SHOPS, fetchShops);\n}\n\nexport default ecommerceSaga;","map":{"version":3,"names":["call","put","takeEvery","GET_CART_DATA","GET_CUSTOMERS","GET_ORDERS","GET_PRODUCT_DETAIL","GET_PRODUCTS","GET_SHOPS","getCartDataFail","getCartDataSuccess","getCustomersFail","getCustomersSuccess","getOrdersFail","getOrdersSuccess","getProductDetailFail","getProductDetailSuccess","getProductsFail","getProductsSuccess","getShopsFail","getShopsSuccess","getCartData","getCustomers","getOrders","getProducts","getShops","getProductDetail","fetchProducts","response","error","fetchProductDetail","productId","fetchOrders","fetchCartData","fetchCustomers","fetchShops","ecommerceSaga"],"sources":["D:/diom working project/staging/src/store/e-commerce/saga.js"],"sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\r\n\r\n// Ecommerce Redux States\r\nimport {\r\n  GET_CART_DATA,\r\n  GET_CUSTOMERS,\r\n  GET_ORDERS,\r\n  GET_PRODUCT_DETAIL,\r\n  GET_PRODUCTS,\r\n  GET_SHOPS,\r\n} from \"./actionTypes\"\r\nimport {\r\n  getCartDataFail,\r\n  getCartDataSuccess,\r\n  getCustomersFail,\r\n  getCustomersSuccess,\r\n  getOrdersFail,\r\n  getOrdersSuccess,\r\n  getProductDetailFail,\r\n  getProductDetailSuccess,\r\n  getProductsFail,\r\n  getProductsSuccess,\r\n  getShopsFail,\r\n  getShopsSuccess,\r\n} from \"./actions\"\r\n\r\n//Include Both Helper File with needed methods\r\nimport {\r\n  getCartData,\r\n  getCustomers,\r\n  getOrders,\r\n  getProducts,\r\n  getShops,\r\n  getProductDetail,\r\n} from \"../../helpers/fackBackend_Helper\"\r\n\r\nfunction* fetchProducts() {\r\n  try {\r\n    const response = yield call(getProducts)\r\n    yield put(getProductsSuccess(response))\r\n  } catch (error) {\r\n    yield put(getProductsFail(error))\r\n  }\r\n}\r\n\r\nfunction* fetchProductDetail({ productId }) {\r\n  try {\r\n    const response = yield call(getProductDetail, productId)\r\n    yield put(getProductDetailSuccess(response))\r\n  } catch (error) {\r\n    yield put(getProductDetailFail(error))\r\n  }\r\n}\r\n\r\nfunction* fetchOrders() {\r\n  try {\r\n    const response = yield call(getOrders)\r\n    yield put(getOrdersSuccess(response))\r\n  } catch (error) {\r\n    yield put(getOrdersFail(error))\r\n  }\r\n}\r\n\r\nfunction* fetchCartData() {\r\n  try {\r\n    const response = yield call(getCartData)\r\n    yield put(getCartDataSuccess(response))\r\n  } catch (error) {\r\n    yield put(getCartDataFail(error))\r\n  }\r\n}\r\n\r\nfunction* fetchCustomers() {\r\n  try {\r\n    const response = yield call(getCustomers)\r\n    yield put(getCustomersSuccess(response))\r\n  } catch (error) {\r\n    yield put(getCustomersFail(error))\r\n  }\r\n}\r\n\r\nfunction* fetchShops() {\r\n  try {\r\n    const response = yield call(getShops)\r\n    yield put(getShopsSuccess(response))\r\n  } catch (error) {\r\n    yield put(getShopsFail(error))\r\n  }\r\n}\r\n\r\nfunction* ecommerceSaga() {\r\n  yield takeEvery(GET_PRODUCTS, fetchProducts)\r\n  yield takeEvery(GET_PRODUCT_DETAIL, fetchProductDetail)\r\n  yield takeEvery(GET_ORDERS, fetchOrders)\r\n  yield takeEvery(GET_CART_DATA, fetchCartData)\r\n  yield takeEvery(GET_CUSTOMERS, fetchCustomers)\r\n  yield takeEvery(GET_SHOPS, fetchShops)\r\n}\r\n\r\nexport default ecommerceSaga\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}