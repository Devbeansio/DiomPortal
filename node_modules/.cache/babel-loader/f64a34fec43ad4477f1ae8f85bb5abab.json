{"ast":null,"code":"import { DIOM_BASED_URLS } from \"../config/url\";\nexport const getreportLocations = async (token, locationApplyFilter, reportFinalValues, locationInvalidatequerry) => {\n  var _await$await$fetch$js;\n\n  const diomBrandValues = parse.JSON(reportFinalValues === null || reportFinalValues === void 0 ? void 0 : reportFinalValues.diomBrand);\n  const res = (_await$await$fetch$js = await (await fetch(!locationApplyFilter || diomBrandValues.length === 0 ? `${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"visibility\":true}}` : `${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"locationCategoriesId\":{\"inq\":${JSON.stringify(diomBrandValues)}}}}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json()) === null || _await$await$fetch$js === void 0 ? void 0 : _await$await$fetch$js.map(element => ({\n    value: element.id,\n    label: element.Name\n  }));\n  return [{\n    label: \"--All Locations\",\n    options: [...res]\n  }];\n};\nexport const getreportLocationBrand = async token => {\n  const res = (await (await fetch(`${DIOM_BASED_URLS}/admin-location-categories`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json()).map(element => ({\n    value: element.id,\n    label: element.name\n  }));\n  return [{\n    label: \"--All Brands\",\n    options: [...res]\n  }];\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of resourcetype dropdown in DIOM\r\n */\n\nexport const getResourcetypereports = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let resourcetypeApplyFilter = arguments.length > 1 ? arguments[1] : undefined;\n  let reportFinalValues = arguments.length > 2 ? arguments[2] : undefined;\n  const diomLocationValue = reportFinalValues === null || reportFinalValues === void 0 ? void 0 : reportFinalValues.diomLocations;\n  return await (await fetch(!resourcetypeApplyFilter || diomLocationValue.length === 0 ? `${DIOM_BASED_URLS}/admin-resource-types-inventories` : `${DIOM_BASED_URLS}/admin-resource-types-inventories?filter={\"where\":{\"BusinessId\":{\"inq\":${JSON.stringify(diomLocationValue)}}}}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/diom(3)/src/APIS/reports.js"],"names":["DIOM_BASED_URLS","getreportLocations","token","locationApplyFilter","reportFinalValues","locationInvalidatequerry","diomBrandValues","parse","JSON","diomBrand","res","fetch","length","stringify","method","redirect","headers","Authorization","json","map","element","value","id","label","Name","options","getreportLocationBrand","name","getResourcetypereports","resourcetypeApplyFilter","diomLocationValue","diomLocations"],"mappings":"AAAA,SAASA,eAAT,QAAgC,eAAhC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,OAChCC,KADgC,EAEhCC,mBAFgC,EAGhCC,iBAHgC,EAIhCC,wBAJgC,KAK7B;AAAA;;AACH,QAAMC,eAAe,GAAGC,KAAK,CAACC,IAAN,CAAWJ,iBAAX,aAAWA,iBAAX,uBAAWA,iBAAiB,CAAEK,SAA9B,CAAxB;AAEA,QAAMC,GAAG,4BACP,MAAM,CACJ,MAAMC,KAAK,CACT,CAACR,mBAAD,IAAwBG,eAAe,CAACM,MAAhB,KAA2B,CAAnD,GACK,GAAEZ,eAAgB,gEADvB,GAEK,GAAEA,eAAgB,4EAA2EQ,IAAI,CAACK,SAAL,CAC5FP,eAD4F,CAE5F,KALG,EAMT;AACEQ,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYf;AADpB;AAHX,GANS,CADP,EAeJgB,IAfI,EADC,0DAAG,sBAiBTC,GAjBS,CAiBJC,OAAD,KAAc;AACnBC,IAAAA,KAAK,EAAED,OAAO,CAACE,EADI;AAEnBC,IAAAA,KAAK,EAAEH,OAAO,CAACI;AAFI,GAAd,CAjBK,CAAZ;AAqBA,SAAO,CACL;AACED,IAAAA,KAAK,EAAE,iBADT;AAEEE,IAAAA,OAAO,EAAE,CAAC,GAAGf,GAAJ;AAFX,GADK,CAAP;AAMD,CAnCM;AAqCP,OAAO,MAAMgB,sBAAsB,GAAG,MAAOxB,KAAP,IAAiB;AACrD,QAAMQ,GAAG,GAAG,CACV,MAAM,CACJ,MAAMC,KAAK,CAAE,GAAEX,eAAgB,4BAApB,EAAiD;AAC1Dc,IAAAA,MAAM,EAAE,KADkD;AAE1DC,IAAAA,QAAQ,EAAE,QAFgD;AAG1DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYf;AADpB;AAHiD,GAAjD,CADP,EAQJgB,IARI,EADI,EAUVC,GAVU,CAULC,OAAD,KAAc;AAClBC,IAAAA,KAAK,EAAED,OAAO,CAACE,EADG;AAElBC,IAAAA,KAAK,EAAEH,OAAO,CAACO;AAFG,GAAd,CAVM,CAAZ;AAcA,SAAO,CACL;AACEJ,IAAAA,KAAK,EAAE,cADT;AAEEE,IAAAA,OAAO,EAAE,CAAC,GAAGf,GAAJ;AAFX,GADK,CAAP;AAMD,CArBM;AAuBP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMkB,sBAAsB,GAAG,kBAIjC;AAAA,MAHH1B,KAGG,uEAHK,EAGL;AAAA,MAFH2B,uBAEG;AAAA,MADHzB,iBACG;AACH,QAAM0B,iBAAiB,GAAG1B,iBAAH,aAAGA,iBAAH,uBAAGA,iBAAiB,CAAE2B,aAA7C;AAEA,SAAO,MAAM,CACX,MAAMpB,KAAK,CACT,CAACkB,uBAAD,IAA4BC,iBAAiB,CAAClB,MAAlB,KAA6B,CAAzD,GACK,GAAEZ,eAAgB,mCADvB,GAEK,GAAEA,eAAgB,0EAAyEQ,IAAI,CAACK,SAAL,CAC1FiB,iBAD0F,CAE1F,KALG,EAMT;AACEhB,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYf;AADpB;AAHX,GANS,CADA,EAeXgB,IAfW,EAAb;AAgBD,CAvBM","sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\n\r\nexport const getreportLocations = async (\r\n  token,\r\n  locationApplyFilter,\r\n  reportFinalValues,\r\n  locationInvalidatequerry\r\n) => {\r\n  const diomBrandValues = parse.JSON(reportFinalValues?.diomBrand);\r\n  \r\n  const res = (\r\n    await (\r\n      await fetch(\r\n        !locationApplyFilter || diomBrandValues.length === 0\r\n          ? `${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"visibility\":true}}`\r\n          : `${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"locationCategoriesId\":{\"inq\":${JSON.stringify(\r\n              diomBrandValues\r\n            )}}}}`,\r\n        {\r\n          method: \"GET\",\r\n          redirect: \"follow\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        }\r\n      )\r\n    ).json()\r\n  )?.map((element) => ({\r\n    value: element.id,\r\n    label: element.Name,\r\n  }));\r\n  return [\r\n    {\r\n      label: \"--All Locations\",\r\n      options: [...res],\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getreportLocationBrand = async (token) => {\r\n  const res = (\r\n    await (\r\n      await fetch(`${DIOM_BASED_URLS}/admin-location-categories`, {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n    ).json()\r\n  ).map((element) => ({\r\n    value: element.id,\r\n    label: element.name,\r\n  }));\r\n  return [\r\n    {\r\n      label: \"--All Brands\",\r\n      options: [...res],\r\n    },\r\n  ];\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of resourcetype dropdown in DIOM\r\n */\r\n\r\nexport const getResourcetypereports = async (\r\n  token = \"\",\r\n  resourcetypeApplyFilter,\r\n  reportFinalValues\r\n) => {\r\n  const diomLocationValue = reportFinalValues?.diomLocations;\r\n\r\n  return await (\r\n    await fetch(\r\n      !resourcetypeApplyFilter || diomLocationValue.length === 0\r\n        ? `${DIOM_BASED_URLS}/admin-resource-types-inventories`\r\n        : `${DIOM_BASED_URLS}/admin-resource-types-inventories?filter={\"where\":{\"BusinessId\":{\"inq\":${JSON.stringify(\r\n            diomLocationValue\r\n          )}}}}`,\r\n      {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n  ).json();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}