{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useAllDataQuery, usePaginatedQuery } from \"../../../hooks/query\";\nimport { getResourceTypes, getSearchedResourceTypes } from \"../../../APIS/resourceType\";\nimport { getLocations } from \"../../../APIS\";\nexport const useResourceType = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const token = localStorage.getItem(\"Token\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(50);\n\n  const changeCurrentPage = pageNum => setCurrentPage(pageNum);\n\n  const queryClient = useQueryClient();\n  const [applyLocationFilter, setApplyFilter] = useState(false);\n  const [filter, setFilter] = useState(\"All\");\n  const {\n    data: {\n      data: resourceTypeData,\n      hasNextPage,\n      hasPreviousPage,\n      total\n    },\n    isLoading\n  } = usePaginatedQuery([\"resourceTypes\", pageSize, currentPage, filter], () => getResourceTypes(pageSize, currentPage, token, applyLocationFilter, filter));\n  const {\n    data: {\n      data: searchedresourceTypeData\n    }\n  } = usePaginatedQuery([\"searchedresourceTypes\", `${pageSize}`, `${currentPage}`], () => getSearchedResourceTypes(token));\n  const {\n    data: locationsData,\n    isLoading: loadingLocations\n  } = useAllDataQuery([\"locations\", \"visible\"], () => getLocations(token));\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const pagelengthnum = e => {\n    if (e.target.value === \"1\") {\n      setPageSize(10);\n    } else if (e.target.value === \"2\") {\n      setPageSize(30);\n    } else if (e.target.value === \"3\") {\n      setPageSize(50);\n    }\n  };\n\n  const pageOptions = {\n    sizePerPage: pageSize,\n    totalSize: total !== null && total !== void 0 ? total : 0,\n    custom: true\n  };\n\n  const onchangeandeldiomlocation = val => {\n    if (val === \"All\") {\n      setCurrentPage(1);\n      setApplyFilter(false);\n      setFilter(\"All\");\n    } else {\n      setCurrentPage(1);\n      setApplyFilter(true);\n      setFilter(`{\"BusinessId\":${val}}`);\n    }\n  };\n\n  useEffect(() => {\n    // FOR PRE-FETCHING NEXT PAGE\n    if (hasNextPage) {\n      const nextPage = currentPage + 1;\n      queryClient.prefetchQuery([\"resourceTypes\", `${pageSize}`, `${currentPage}`], () => getResourceTypes(pageSize, nextPage, token));\n    }\n  }, [currentPage, queryClient, filter, pageSize]);\n  return {\n    currentPage,\n    pageOptions,\n    resourceTypeData,\n    hasNextPage,\n    hasPreviousPage,\n    total,\n    locationsData,\n    loadingLocations,\n    isLoading,\n    onchangeandeldiomlocation,\n    changeCurrentPage,\n    pagelengthnum,\n    pageSize,\n    toggle,\n    isOpen,\n    searchedresourceTypeData,\n    filter\n  };\n};\n\n_s(useResourceType, \"WmX4kiDC4yxD71HawiaVYaV20Ug=\", false, function () {\n  return [useQueryClient, usePaginatedQuery, usePaginatedQuery, useAllDataQuery];\n});","map":{"version":3,"sources":["D:/diom working project/staging/src/pages/Inventories/ResourceType/useResourceType.js"],"names":["useEffect","useState","useQueryClient","useAllDataQuery","usePaginatedQuery","getResourceTypes","getSearchedResourceTypes","getLocations","useResourceType","isOpen","setIsOpen","token","localStorage","getItem","currentPage","setCurrentPage","pageSize","setPageSize","changeCurrentPage","pageNum","queryClient","applyLocationFilter","setApplyFilter","filter","setFilter","data","resourceTypeData","hasNextPage","hasPreviousPage","total","isLoading","searchedresourceTypeData","locationsData","loadingLocations","toggle","pagelengthnum","e","target","value","pageOptions","sizePerPage","totalSize","custom","onchangeandeldiomlocation","val","nextPage","prefetchQuery"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { useAllDataQuery, usePaginatedQuery } from \"../../../hooks/query\";\r\nimport {\r\n  getResourceTypes,\r\n  getSearchedResourceTypes,\r\n} from \"../../../APIS/resourceType\";\r\nimport { getLocations } from \"../../../APIS\";\r\n\r\nexport const useResourceType = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const token = localStorage.getItem(\"Token\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(50);\r\n  const changeCurrentPage = (pageNum) => setCurrentPage(pageNum);\r\n  const queryClient = useQueryClient();\r\n  const [applyLocationFilter, setApplyFilter] = useState(false);\r\n  const [filter, setFilter] = useState(\"All\");\r\n\r\n  const {\r\n    data: { data: resourceTypeData, hasNextPage, hasPreviousPage, total },\r\n    isLoading,\r\n  } = usePaginatedQuery([\"resourceTypes\", pageSize, currentPage, filter], () =>\r\n    getResourceTypes(pageSize, currentPage, token, applyLocationFilter, filter)\r\n  );\r\n  \r\n\r\n  const {\r\n    data: { data: searchedresourceTypeData },\r\n  } = usePaginatedQuery([\"searchedresourceTypes\",`${pageSize}`,`${currentPage}`], () =>\r\n    getSearchedResourceTypes(token)\r\n  );\r\n\r\n  const { data: locationsData, isLoading: loadingLocations } = useAllDataQuery(\r\n    [\"locations\", \"visible\"],\r\n    () => getLocations(token)\r\n  );\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const pagelengthnum = (e) => {\r\n    if (e.target.value === \"1\") {\r\n      setPageSize(10);\r\n    } else if (e.target.value === \"2\") {\r\n      setPageSize(30);\r\n    } else if (e.target.value === \"3\") {\r\n      setPageSize(50);\r\n    }\r\n  };\r\n\r\n  const pageOptions = {\r\n    sizePerPage: pageSize,\r\n    totalSize: total ?? 0,\r\n    custom: true,\r\n  };\r\n\r\n  const onchangeandeldiomlocation = (val) => {\r\n    if (val === \"All\") {\r\n      setCurrentPage(1);\r\n      setApplyFilter(false);\r\n      setFilter(\"All\");\r\n    } else {\r\n      setCurrentPage(1);\r\n      setApplyFilter(true);\r\n      setFilter(`{\"BusinessId\":${val}}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n\r\n    if (hasNextPage) {\r\n      const nextPage = currentPage + 1;\r\n\r\n      queryClient.prefetchQuery(\r\n        [\"resourceTypes\",`${pageSize}`,`${currentPage}`],\r\n        () => getResourceTypes(pageSize, nextPage, token)\r\n      );\r\n    }\r\n  }, [currentPage, queryClient, filter, pageSize]);\r\n\r\n  return {\r\n    currentPage,\r\n    pageOptions,\r\n    resourceTypeData,\r\n    hasNextPage,\r\n    hasPreviousPage,\r\n    total,\r\n    locationsData,\r\n    loadingLocations,\r\n    isLoading,\r\n    onchangeandeldiomlocation,\r\n    changeCurrentPage,\r\n    pagelengthnum,\r\n    pageSize,\r\n    toggle,\r\n    isOpen,\r\n    searchedresourceTypeData,\r\n    filter,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}