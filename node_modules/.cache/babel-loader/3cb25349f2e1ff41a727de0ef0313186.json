{"ast":null,"code":"import { DIOM_BASED_URLS } from \"../config/url\";\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\n\nexport const getCategories = async function () {\n  let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let history = arguments.length > 3 ? arguments[3] : undefined;\n  const res = await fetch(`${DIOM_BASED_URLS}/resource-type-categories`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    if (res.status === 401) {\n      history.push(\"/login\");\n      throw new Error(resJson.error.message);\n    }\n\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const resJson = await res.json();\n  const categoriesData = resJson.data.map((e, i) => ({\n    id: i + 1,\n    _id: e.id,\n    categoryName: e.name,\n    resourcetype: e.resourceTypes.map(f => f.name).join(\", \")\n  }));\n  return {\n    data: categoriesData,\n    total: resJson.total,\n    hasNextPage: resJson.hasNextPage,\n    hasPreviousPage: resJson.hasPreviousPage\n  };\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of category details in DIOM\r\n */\n\nexport const getCategoryDetails = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let id = arguments.length > 1 ? arguments[1] : undefined;\n  let history = arguments.length > 2 ? arguments[2] : undefined;\n  // return await (\n  const res = await fetch(`${DIOM_BASED_URLS}/resource-type-categories/${id}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  }); // ).json();\n\n  if (!res.ok) {\n    if (res.status === 401) {\n      history.push(\"/login\");\n      throw new Error(resJson.error.message);\n    }\n\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const data = await res.json();\n  return {\n    data\n  };\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of category detail dropdown in DIOM\r\n */\n\nexport const getCategoryDetaildropdown = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let id = arguments.length > 1 ? arguments[1] : undefined;\n  let history = arguments.length > 2 ? arguments[2] : undefined;\n  // return await (\n  const res = await fetch(`${DIOM_BASED_URLS}/admin-resource-types-inventories?filter={\"where\":{\"resourceTypeCategoryId\":\"${id}\"}}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    if (res.status === 401) {\n      history.push(\"/login\");\n      throw new Error(resJson.error.message);\n    }\n\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const data = await res.json();\n  return {\n    data\n  }; // ).json();\n};\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of resourcetype dropdown in DIOM\r\n */\n\nexport const getResourcetypeDropdown = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let id = arguments.length > 1 ? arguments[1] : undefined;\n  let history = arguments.length > 2 ? arguments[2] : undefined;\n  // return await (\n  const res = await fetch(`${DIOM_BASED_URLS}/admin-resource-types-inventories`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  });\n\n  if (!res.ok) {\n    if (res.status === 401) {\n      history.push(\"/login\");\n      throw new Error(resJson.error.message);\n    }\n\n    const resJson = await res.json();\n    throw new Error(resJson.error.message);\n  }\n\n  const data = await res.json();\n  return {\n    data\n  }; // ).json();\n};","map":{"version":3,"names":["DIOM_BASED_URLS","getCategories","size","page","token","history","res","fetch","method","redirect","headers","Authorization","ok","status","push","Error","resJson","error","message","json","categoriesData","data","map","e","i","id","_id","categoryName","name","resourcetype","resourceTypes","f","join","total","hasNextPage","hasPreviousPage","getCategoryDetails","getCategoryDetaildropdown","getResourcetypeDropdown"],"sources":["C:/Users/tech sign/Desktop/xyz/src/APIS/categories.js"],"sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of all resource in DIOM\r\n */\r\n\r\nexport const getCategories = async (size = 30, page = 1, token = \"\",history) => {\r\n  const res = await fetch(\r\n    `${DIOM_BASED_URLS}/resource-type-categories`,\r\n\r\n    {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }\r\n  );\r\n  if (!res.ok) {\r\n    if(res.status === 401){\r\n      history.push(\"/login\");\r\n      throw new Error(resJson.error.message);\r\n   \r\n  }\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const resJson = await res.json();\r\n  const categoriesData = resJson.data.map((e, i) => ({\r\n    id: i + 1,\r\n    _id: e.id,\r\n    categoryName: e.name,\r\n    resourcetype: e.resourceTypes.map((f) => f.name).join(\", \"),\r\n  }));\r\n\r\n  return {\r\n    data: categoriesData,\r\n    total: resJson.total,\r\n    hasNextPage: resJson.hasNextPage,\r\n    hasPreviousPage: resJson.hasPreviousPage,\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of category details in DIOM\r\n */\r\n\r\nexport const getCategoryDetails = async (token = \"\", id,history) => {\r\n  // return await (\r\n    const res= await fetch(`${DIOM_BASED_URLS}/resource-type-categories/${id}`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n  // ).json();\r\n  if (!res.ok) {\r\n    if(res.status === 401){\r\n      history.push(\"/login\");\r\n      throw new Error(resJson.error.message);\r\n   \r\n  }\r\n    const resJson = await res.json();\r\n    throw new Error(resJson.error.message);\r\n  }\r\n  const data = await res.json();\r\n  \r\n  return {\r\n    data\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of category detail dropdown in DIOM\r\n */\r\n\r\nexport const getCategoryDetaildropdown = async (token = \"\", id,history) => {\r\n  // return await (\r\n    const res= await fetch(\r\n      `${DIOM_BASED_URLS}/admin-resource-types-inventories?filter={\"where\":{\"resourceTypeCategoryId\":\"${id}\"}}`,\r\n      {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n    if (!res.ok) {\r\n      if(res.status === 401){\r\n        history.push(\"/login\");\r\n        throw new Error(resJson.error.message);\r\n     \r\n    }\r\n      const resJson = await res.json();\r\n      throw new Error(resJson.error.message);\r\n    }\r\n    const data = await res.json();\r\n    \r\n    return {\r\n      data\r\n    };\r\n  // ).json();\r\n};\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of resourcetype dropdown in DIOM\r\n */\r\n\r\nexport const getResourcetypeDropdown = async (token = \"\", id,history) => {\r\n  // return await (\r\n    const res= await fetch(`${DIOM_BASED_URLS}/admin-resource-types-inventories`, {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n    if (!res.ok) {\r\n      if(res.status === 401){\r\n        history.push(\"/login\");\r\n        throw new Error(resJson.error.message);\r\n     \r\n    }\r\n      const resJson = await res.json();\r\n      throw new Error(resJson.error.message);\r\n    }\r\n    const data = await res.json();\r\n    \r\n    return {\r\n      data\r\n    };\r\n  // ).json();\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}