{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import moment from \"moment\";\n// import \"./css/booking.css\";\n// import { Row, Col, Card, CardBody } from \"reactstrap\";\n// // datatable related plugins\n// import BootstrapTable from \"react-bootstrap-table-next\";\n// import paginationFactory, {\n//   PaginationProvider,\n//   PaginationListStandalone,\n//   SizePerPageDropdownStandalone,\n// } from \"react-bootstrap-table2-paginator\";\n// import { Link } from \"react-router-dom\";\n// import ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\n// import \"../Tables/datatables.scss\";\n// import { DIOM_BASED_URLS } from \"../../config/url\";\n// var Loader = require('react-loader');\nconst Booking = () => {// const [bookingsToday, setBookingsToday] = useState([]);\n  // const [loaded, setLoaded] = useState(false);\n  // const columns = [\n  //   {\n  //     dataField: \"id\",\n  //     text: \"No.\",\n  //     sort: true,\n  //   },\n  //   {\n  //     dataField: \"updatedAt\",\n  //     text: \"Booking Date\",\n  //     sort: true,\n  //   },\n  //   {\n  //     dataField: '_id',\n  //     text: \"Booking ID\",\n  //     sort: true,\n  //     formatter: (cell, row) => (\n  //       <Link to={`/bookingdetail/${row._id}`} className=\"link\">\n  //         {\" \"}\n  //         {cell}{\" \"}\n  //       </Link>\n  //     ),\n  //   },\n  //   {\n  //     dataField: \"locationAddress\",\n  //     text: \"Location\",\n  //     sort: true,\n  //   },\n  //   {\n  //     dataField: \"resourceName\",\n  //     text: \"Resource\",\n  //     sort: true,\n  //   },\n  //   {\n  //     dataField: \"bookingType\",\n  //     text: \"Booking Type\",\n  //     sort: true,\n  //   },\n  //   {\n  //     dataField: \"invoiceNumber\",\n  //     // dataField: \"nexudusInvoiceNumber\",\n  //     text: \"Invoice ID\",\n  //     sort: true,\n  //   },\n  //   {\n  //     dataField: \"totalAmount\",\n  //     text: \"Total Paid\",\n  //     sort: true,\n  //   },\n  // ];\n  // const defaultSorted = [\n  //   {\n  //     dataField: \"id\",\n  //     order: \"asc\",\n  //   },\n  // ];\n  // const pageOptions = {\n  //   sizePerPage: 10,\n  //   totalSize: bookingsToday.length, // replace later with size(customers),\n  //   custom: true,\n  // };\n  // const { SearchBar } = Search;\n  // const bookingstoday = async () => {\n  //   setLoaded(true);\n  //   fetch(\n  //     `${DIOM_BASED_URLS}/admin-diom-bookings/today/${localStorage.getItem(\n  //       \"locationId\"\n  //     )}`,\n  //     {\n  //       method: \"GET\",\n  //       redirect: \"follow\",\n  //     }\n  //   )\n  //     .then((response) => response.json())\n  //     .then((result) => {\n  //       const mappedBookings = result.bookings.map((booking, index) => ({\n  //         ...booking,\n  //         id: index + 1,\n  //         updatedAt: moment(booking.updatedAt).format(\"YYYY-MM-DD HH:mm\"),\n  //         _id: booking.id,\n  //       }));\n  //       setBookingsToday(mappedBookings);\n  //       setLoaded(false);\n  //       // setBookingsToday(result);\n  //     })\n  //     .catch((error) => console.log(\"error\", error));\n  // };\n  // useEffect(() => {\n  //   (async () => {\n  //   await  bookingstoday();\n  //   })();\n  // }, []);\n  // return (\n  //   <>\n  //     {loaded?<Loader loaded={false}  className=\"spinner\" />:\n  //   <div className=\"page-content\">\n  //     <Row className=\"mb-3\">\n  //       <Col md={3}>\n  //         <Link to={`mydashboard`} className=\"link\">   <span className=\"fas fa-angle-left arrowheightwidth\"></span></Link>\n  //         <span className=\" bookingtodaytitle ml-4\">Bookings Today</span>\n  //       </Col>\n  //       <Col md={9}></Col>\n  //     </Row>\n  //     <Row>\n  //       <Col md={12}>\n  //         <Card>\n  //           <CardBody>\n  //             <PaginationProvider\n  //               pagination={paginationFactory(pageOptions)}\n  //               keyField=\"id\"\n  //               columns={columns}\n  //               // data={productData}\n  //               data={bookingsToday}\n  //             >\n  //               {({ paginationProps, paginationTableProps }) => (\n  //                 <ToolkitProvider\n  //                   keyField=\"id\"\n  //                   columns={columns}\n  //                   // data={productData}\n  //                   data={bookingsToday}\n  //                   search\n  //                 >\n  //                   {(toolkitProps) => (\n  //                     <React.Fragment>\n  //                       <Row className=\"mb-2\">\n  //                         <Col md=\"4\">\n  //                           <div className=\"search-box me-2 mb-2 d-inline-block\">\n  //                             <div className=\"position-relative\">\n  //                               <SearchBar {...toolkitProps.searchProps} />\n  //                               <i className=\"search-box chat-search-box\" />\n  //                             </div>\n  //                           </div>\n  //                         </Col>\n  //                       </Row>\n  //                       <Row>\n  //                         <Col xl=\"12\">\n  //                           <div className=\"table-responsive\">\n  //                             <BootstrapTable\n  //                               hover\n  //                               keyField={\"id\"}\n  //                               responsive\n  //                               bordered={false}\n  //                               striped={false}\n  //                               defaultSorted={defaultSorted}\n  //                               // selectRow={selectRow}\n  //                               classes={\"table align-middle table-nowrap\"}\n  //                               headerWrapperClasses={\"thead-light\"}\n  //                               {...toolkitProps.baseProps}\n  //                               {...paginationTableProps}\n  //                             />\n  //                           </div>\n  //                         </Col>\n  //                       </Row>\n  //                       <Row className=\"align-items-md-center mt-30 mt-3\">\n  //                         <Col className=\"inner-custom-pagination d-flex\">\n  //                           <span className=\"paginationitmes \">Items</span>\n  //                           <div className=\"d-inline\">\n  //                             <SizePerPageDropdownStandalone\n  //                               {...paginationProps}\n  //                             />\n  //                           </div>\n  //                           <span className=\"paginationitmes1 \">show</span>\n  //                           <div className=\"text-md-right ms-auto\">\n  //                             <PaginationListStandalone {...paginationProps} />\n  //                           </div>\n  //                         </Col>\n  //                       </Row>\n  //                     </React.Fragment>\n  //                   )}\n  //                 </ToolkitProvider>\n  //               )}\n  //             </PaginationProvider>\n  //           </CardBody>\n  //         </Card>\n  //       </Col>\n  //     </Row>\n  //       </div>\n  //     }\n  //     </>\n  // );\n};\n\n_c = Booking;\nexport default Booking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/1diom-frontend/diom-frontend/src/pages/Booking/index.js"],"names":["Booking"],"mappings":"AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,MAAMA,OAAO,GAAG,MAAM,CACptLD;;KAAMA,O;AAwLN,eAAeA,OAAf","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import moment from \"moment\";\r\n\r\n// import \"./css/booking.css\";\r\n// import { Row, Col, Card, CardBody } from \"reactstrap\";\r\n\r\n// // datatable related plugins\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n// import paginationFactory, {\r\n//   PaginationProvider,\r\n//   PaginationListStandalone,\r\n//   SizePerPageDropdownStandalone,\r\n// } from \"react-bootstrap-table2-paginator\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// import ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\n// import \"../Tables/datatables.scss\";\r\n// import { DIOM_BASED_URLS } from \"../../config/url\";\r\n// var Loader = require('react-loader');\r\n\r\nconst Booking = () => {\r\n  // const [bookingsToday, setBookingsToday] = useState([]);\r\n  // const [loaded, setLoaded] = useState(false);\r\n  // const columns = [\r\n  //   {\r\n  //     dataField: \"id\",\r\n  //     text: \"No.\",\r\n  //     sort: true,\r\n  //   },\r\n  //   {\r\n  //     dataField: \"updatedAt\",\r\n  //     text: \"Booking Date\",\r\n  //     sort: true,\r\n  //   },\r\n  //   {\r\n  //     dataField: '_id',\r\n  //     text: \"Booking ID\",\r\n  //     sort: true,\r\n  //     formatter: (cell, row) => (\r\n  //       <Link to={`/bookingdetail/${row._id}`} className=\"link\">\r\n  //         {\" \"}\r\n  //         {cell}{\" \"}\r\n  //       </Link>\r\n  //     ),\r\n  //   },\r\n  //   {\r\n  //     dataField: \"locationAddress\",\r\n  //     text: \"Location\",\r\n  //     sort: true,\r\n  //   },\r\n  //   {\r\n  //     dataField: \"resourceName\",\r\n  //     text: \"Resource\",\r\n  //     sort: true,\r\n  //   },\r\n  //   {\r\n  //     dataField: \"bookingType\",\r\n  //     text: \"Booking Type\",\r\n  //     sort: true,\r\n  //   },\r\n  //   {\r\n  //     dataField: \"invoiceNumber\",\r\n  //     // dataField: \"nexudusInvoiceNumber\",\r\n  //     text: \"Invoice ID\",\r\n  //     sort: true,\r\n  //   },\r\n  //   {\r\n  //     dataField: \"totalAmount\",\r\n  //     text: \"Total Paid\",\r\n  //     sort: true,\r\n  //   },\r\n  // ];\r\n  // const defaultSorted = [\r\n  //   {\r\n  //     dataField: \"id\",\r\n  //     order: \"asc\",\r\n  //   },\r\n  // ];\r\n  // const pageOptions = {\r\n  //   sizePerPage: 10,\r\n  //   totalSize: bookingsToday.length, // replace later with size(customers),\r\n  //   custom: true,\r\n  // };\r\n  // const { SearchBar } = Search;\r\n  // const bookingstoday = async () => {\r\n  //   setLoaded(true);\r\n  //   fetch(\r\n  //     `${DIOM_BASED_URLS}/admin-diom-bookings/today/${localStorage.getItem(\r\n  //       \"locationId\"\r\n  //     )}`,\r\n  //     {\r\n  //       method: \"GET\",\r\n  //       redirect: \"follow\",\r\n  //     }\r\n  //   )\r\n  //     .then((response) => response.json())\r\n  //     .then((result) => {\r\n  //       const mappedBookings = result.bookings.map((booking, index) => ({\r\n  //         ...booking,\r\n  //         id: index + 1,\r\n  //         updatedAt: moment(booking.updatedAt).format(\"YYYY-MM-DD HH:mm\"),\r\n  //         _id: booking.id,\r\n  //       }));\r\n  //       setBookingsToday(mappedBookings);\r\n  //       setLoaded(false);\r\n  //       // setBookingsToday(result);\r\n  //     })\r\n  //     .catch((error) => console.log(\"error\", error));\r\n  // };\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //   await  bookingstoday();\r\n  //   })();\r\n  // }, []);\r\n  // return (\r\n  //   <>\r\n  //     {loaded?<Loader loaded={false}  className=\"spinner\" />:\r\n  //   <div className=\"page-content\">\r\n  //     <Row className=\"mb-3\">\r\n  //       <Col md={3}>\r\n  //         <Link to={`mydashboard`} className=\"link\">   <span className=\"fas fa-angle-left arrowheightwidth\"></span></Link>\r\n  //         <span className=\" bookingtodaytitle ml-4\">Bookings Today</span>\r\n  //       </Col>\r\n  //       <Col md={9}></Col>\r\n  //     </Row>\r\n  //     <Row>\r\n  //       <Col md={12}>\r\n  //         <Card>\r\n  //           <CardBody>\r\n  //             <PaginationProvider\r\n  //               pagination={paginationFactory(pageOptions)}\r\n  //               keyField=\"id\"\r\n  //               columns={columns}\r\n  //               // data={productData}\r\n  //               data={bookingsToday}\r\n  //             >\r\n  //               {({ paginationProps, paginationTableProps }) => (\r\n  //                 <ToolkitProvider\r\n  //                   keyField=\"id\"\r\n  //                   columns={columns}\r\n  //                   // data={productData}\r\n  //                   data={bookingsToday}\r\n  //                   search\r\n  //                 >\r\n  //                   {(toolkitProps) => (\r\n  //                     <React.Fragment>\r\n  //                       <Row className=\"mb-2\">\r\n  //                         <Col md=\"4\">\r\n  //                           <div className=\"search-box me-2 mb-2 d-inline-block\">\r\n  //                             <div className=\"position-relative\">\r\n  //                               <SearchBar {...toolkitProps.searchProps} />\r\n  //                               <i className=\"search-box chat-search-box\" />\r\n  //                             </div>\r\n  //                           </div>\r\n  //                         </Col>\r\n  //                       </Row>\r\n  //                       <Row>\r\n  //                         <Col xl=\"12\">\r\n  //                           <div className=\"table-responsive\">\r\n  //                             <BootstrapTable\r\n  //                               hover\r\n  //                               keyField={\"id\"}\r\n  //                               responsive\r\n  //                               bordered={false}\r\n  //                               striped={false}\r\n  //                               defaultSorted={defaultSorted}\r\n  //                               // selectRow={selectRow}\r\n  //                               classes={\"table align-middle table-nowrap\"}\r\n  //                               headerWrapperClasses={\"thead-light\"}\r\n  //                               {...toolkitProps.baseProps}\r\n  //                               {...paginationTableProps}\r\n  //                             />\r\n  //                           </div>\r\n  //                         </Col>\r\n  //                       </Row>\r\n  //                       <Row className=\"align-items-md-center mt-30 mt-3\">\r\n  //                         <Col className=\"inner-custom-pagination d-flex\">\r\n  //                           <span className=\"paginationitmes \">Items</span>\r\n  //                           <div className=\"d-inline\">\r\n  //                             <SizePerPageDropdownStandalone\r\n  //                               {...paginationProps}\r\n  //                             />\r\n  //                           </div>\r\n  //                           <span className=\"paginationitmes1 \">show</span>\r\n  //                           <div className=\"text-md-right ms-auto\">\r\n  //                             <PaginationListStandalone {...paginationProps} />\r\n  //                           </div>\r\n  //                         </Col>\r\n  //                       </Row>\r\n  //                     </React.Fragment>\r\n  //                   )}\r\n  //                 </ToolkitProvider>\r\n  //               )}\r\n  //             </PaginationProvider>\r\n  //           </CardBody>\r\n  //         </Card>\r\n  //       </Col>\r\n  //     </Row>\r\n  //       </div>\r\n  //     }\r\n  //     </>\r\n  // );\r\n};\r\n\r\nexport default Booking;\r\n"]},"metadata":{},"sourceType":"module"}