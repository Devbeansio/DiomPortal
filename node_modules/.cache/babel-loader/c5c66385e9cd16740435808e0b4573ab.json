{"ast":null,"code":"import { DIOM_BASED_URLS } from \"../config/url\";\nexport const getreportLocations = async (token, locationApplyFilter, reportFinalValues, locationInvalidatequerry) => {\n  // console.log(\"locationApplyFilter====>  \", locationApplyFilter);\n  // console.log(\n  //   \"reportFinalValues ====^^^ : \",\n  //   JSON.stringify(reportFinalValues?.diomBrand)\n  // );\n  const diomBrandValue = json(reportFinalValues === null || reportFinalValues === void 0 ? void 0 : reportFinalValues.diomBrand);\n  const res = (await (await fetch(!locationApplyFilter || diomBrandValue.length == 0 ? `${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"visibility\":true}}` : `${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"locationCategoriesId\":{\"inq\":${diomBrandValue}}}}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json()).map(element => ({\n    value: element.id,\n    label: element.Name\n  }));\n  return [{\n    label: \"--All Locations\",\n    options: [...res]\n  }];\n};\nexport const getreportLocationBrand = async token => {\n  const res = (await (await fetch(`${DIOM_BASED_URLS}/admin-location-categories`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json()).map(element => ({\n    value: element.id,\n    label: element.name\n  }));\n  return [{\n    label: \"--All Brands\",\n    options: [...res]\n  }];\n}; // ********@ resourcetypefilter\n// export const getResourcetypeDropdown = async (token = \"\", id) => {\n//   return await (\n//     await await fetch(`${DIOM_BASED_URLS}/admin-resource-types-inventories`, {\n//       method: \"GET\",\n//       redirect: \"follow\",\n//       headers: {\n//         Authorization: \"Bearer \" + token,\n//       },\n//     })\n//   ).json();\n// };\n\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of resourcetype dropdown in DIOM\r\n */\n\nexport const getResourcetypereports = async function () {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let resourcetypeApplyFilter = arguments.length > 1 ? arguments[1] : undefined;\n  let reportFinalValues = arguments.length > 2 ? arguments[2] : undefined;\n  const diomLocationValue = JSON.stringify(reportFinalValues === null || reportFinalValues === void 0 ? void 0 : reportFinalValues.diomLocations);\n  return await (await fetch(!resourcetypeApplyFilter ? `${DIOM_BASED_URLS}/admin-resource-types-inventories` : `${DIOM_BASED_URLS}/admin-resource-types-inventories?filter={\"where\":{\"BusinessId\":{\"inq\":${diomLocationValue}}}}`, {\n    method: \"GET\",\n    redirect: \"follow\",\n    headers: {\n      Authorization: \"Bearer \" + token\n    }\n  })).json();\n};","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/1diom-frontend/diom-frontend/src/APIS/reports.js"],"names":["DIOM_BASED_URLS","getreportLocations","token","locationApplyFilter","reportFinalValues","locationInvalidatequerry","diomBrandValue","json","diomBrand","res","fetch","length","method","redirect","headers","Authorization","map","element","value","id","label","Name","options","getreportLocationBrand","name","getResourcetypereports","resourcetypeApplyFilter","diomLocationValue","JSON","stringify","diomLocations"],"mappings":"AAAA,SAASA,eAAT,QAAgC,eAAhC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,OAChCC,KADgC,EAEhCC,mBAFgC,EAGhCC,iBAHgC,EAIhCC,wBAJgC,KAK7B;AACH;AACA;AACA;AACA;AACA;AAEA,QAAMC,cAAc,GAAGC,IAAI,CAACH,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAEI,SAApB,CAA3B;AAEA,QAAMC,GAAG,GAAG,CACV,MAAM,CACJ,MAAMC,KAAK,CACT,CAACP,mBAAD,IAAwBG,cAAc,CAACK,MAAf,IAAyB,CAAjD,GACK,GAAEX,eAAgB,gEADvB,GAEK,GAAEA,eAAgB,4EAA2EM,cAAe,KAHxG,EAIT;AACEM,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYb;AADpB;AAHX,GAJS,CADP,EAaJK,IAbI,EADI,EAeVS,GAfU,CAeLC,OAAD,KAAc;AAClBC,IAAAA,KAAK,EAAED,OAAO,CAACE,EADG;AAElBC,IAAAA,KAAK,EAAEH,OAAO,CAACI;AAFG,GAAd,CAfM,CAAZ;AAmBA,SAAO,CACL;AACED,IAAAA,KAAK,EAAE,iBADT;AAEEE,IAAAA,OAAO,EAAE,CAAC,GAAGb,GAAJ;AAFX,GADK,CAAP;AAMD,CAvCM;AAyCP,OAAO,MAAMc,sBAAsB,GAAG,MAAOrB,KAAP,IAAiB;AACrD,QAAMO,GAAG,GAAG,CACV,MAAM,CACJ,MAAMC,KAAK,CAAE,GAAEV,eAAgB,4BAApB,EAAiD;AAC1DY,IAAAA,MAAM,EAAE,KADkD;AAE1DC,IAAAA,QAAQ,EAAE,QAFgD;AAG1DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYb;AADpB;AAHiD,GAAjD,CADP,EAQJK,IARI,EADI,EAUVS,GAVU,CAULC,OAAD,KAAc;AAClBC,IAAAA,KAAK,EAAED,OAAO,CAACE,EADG;AAElBC,IAAAA,KAAK,EAAEH,OAAO,CAACO;AAFG,GAAd,CAVM,CAAZ;AAcA,SAAO,CACL;AACEJ,IAAAA,KAAK,EAAE,cADT;AAEEE,IAAAA,OAAO,EAAE,CAAC,GAAGb,GAAJ;AAFX,GADK,CAAP;AAMD,CArBM,C,CAuBP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMgB,sBAAsB,GAAG,kBAIjC;AAAA,MAHHvB,KAGG,uEAHK,EAGL;AAAA,MAFHwB,uBAEG;AAAA,MADHtB,iBACG;AACH,QAAMuB,iBAAiB,GAAGC,IAAI,CAACC,SAAL,CAAezB,iBAAf,aAAeA,iBAAf,uBAAeA,iBAAiB,CAAE0B,aAAlC,CAA1B;AAEA,SAAO,MAAM,CACX,MAAMpB,KAAK,CACT,CAACgB,uBAAD,GACK,GAAE1B,eAAgB,mCADvB,GAEK,GAAEA,eAAgB,0EAAyE2B,iBAAkB,KAHzG,EAIT;AACEf,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,QAAQ,EAAE,QAFZ;AAGEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,YAAYb;AADpB;AAHX,GAJS,CADA,EAaXK,IAbW,EAAb;AAcD,CArBM","sourcesContent":["import { DIOM_BASED_URLS } from \"../config/url\";\r\n\r\nexport const getreportLocations = async (\r\n  token,\r\n  locationApplyFilter,\r\n  reportFinalValues,\r\n  locationInvalidatequerry\r\n) => {\r\n  // console.log(\"locationApplyFilter====>  \", locationApplyFilter);\r\n  // console.log(\r\n  //   \"reportFinalValues ====^^^ : \",\r\n  //   JSON.stringify(reportFinalValues?.diomBrand)\r\n  // );\r\n\r\n  const diomBrandValue = json(reportFinalValues?.diomBrand);\r\n\r\n  const res = (\r\n    await (\r\n      await fetch(\r\n        !locationApplyFilter || diomBrandValue.length == 0\r\n          ? `${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"visibility\":true}}`\r\n          : `${DIOM_BASED_URLS}/admin-business-locations?filter={\"where\":{\"locationCategoriesId\":{\"inq\":${diomBrandValue}}}}`,\r\n        {\r\n          method: \"GET\",\r\n          redirect: \"follow\",\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        }\r\n      )\r\n    ).json()\r\n  ).map((element) => ({\r\n    value: element.id,\r\n    label: element.Name,\r\n  }));\r\n  return [\r\n    {\r\n      label: \"--All Locations\",\r\n      options: [...res],\r\n    },\r\n  ];\r\n};\r\n\r\nexport const getreportLocationBrand = async (token) => {\r\n  const res = (\r\n    await (\r\n      await fetch(`${DIOM_BASED_URLS}/admin-location-categories`, {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n    ).json()\r\n  ).map((element) => ({\r\n    value: element.id,\r\n    label: element.name,\r\n  }));\r\n  return [\r\n    {\r\n      label: \"--All Brands\",\r\n      options: [...res],\r\n    },\r\n  ];\r\n};\r\n\r\n// ********@ resourcetypefilter\r\n\r\n// export const getResourcetypeDropdown = async (token = \"\", id) => {\r\n//   return await (\r\n//     await await fetch(`${DIOM_BASED_URLS}/admin-resource-types-inventories`, {\r\n//       method: \"GET\",\r\n//       redirect: \"follow\",\r\n//       headers: {\r\n//         Authorization: \"Bearer \" + token,\r\n//       },\r\n//     })\r\n//   ).json();\r\n// };\r\n\r\n/**\r\n *\r\n * @param size\r\n * @param page\r\n * @param {JWT} token\r\n * @returns a list of resourcetype dropdown in DIOM\r\n */\r\n\r\nexport const getResourcetypereports = async (\r\n  token = \"\",\r\n  resourcetypeApplyFilter,\r\n  reportFinalValues\r\n) => {\r\n  const diomLocationValue = JSON.stringify(reportFinalValues?.diomLocations);\r\n\r\n  return await (\r\n    await fetch(\r\n      !resourcetypeApplyFilter\r\n        ? `${DIOM_BASED_URLS}/admin-resource-types-inventories`\r\n        : `${DIOM_BASED_URLS}/admin-resource-types-inventories?filter={\"where\":{\"BusinessId\":{\"inq\":${diomLocationValue}}}}`,\r\n      {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    )\r\n  ).json();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}