{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useAllDataQuery, usePaginatedQuery } from \"../../hooks/query\";\nimport { getLocationBrand, getsearchedLocationListing } from \"../../APIS\";\nimport { getLocationListing } from \"../../APIS\";\nexport const useLocationsListing = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const token = localStorage.getItem(\"Token\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(50);\n\n  const changeCurrentPage = pageNum => setCurrentPage(pageNum);\n\n  const queryClient = useQueryClient();\n  const [applyLocationFilter, setApplyFilter] = useState(false);\n  const [filter, setFilter] = useState(\"All\");\n  const {\n    data: {\n      data: locationLisitngData,\n      hasNextPage,\n      hasPreviousPage,\n      total\n    },\n    isLoading\n  } = usePaginatedQuery([\"locations\", currentPage, filter], () => getLocationListing(pageSize, currentPage, token, applyLocationFilter, filter));\n  const {\n    data: {\n      data: searchedlocationLisitngData\n    }\n  } = usePaginatedQuery([\"searchedlocations\"], () => getsearchedLocationListing(token));\n  const {\n    data: locationsData,\n    isLoading: loadingLocations\n  } = useAllDataQuery([\"locationbrandData\", \"visible\"], () => getLocationBrand(token));\n  const brandData = locationsData;\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const pagelengthnum = e => {\n    if (e.target.value === \"1\") {\n      setPageSize(10);\n    } else if (e.target.value === \"2\") {\n      setPageSize(30);\n    } else if (e.target.value === \"3\") {\n      setPageSize(50);\n    }\n  };\n\n  const pageOptions = {\n    sizePerPage: pageSize,\n    totalSize: total !== null && total !== void 0 ? total : 0,\n    custom: true\n  };\n\n  const handeldiomlocation = val => {\n    if (val === \"All\") {\n      setCurrentPage(1);\n      setApplyFilter(false);\n      setFilter(\"All\");\n    } else {\n      setCurrentPage(1);\n      setApplyFilter(true);\n      setFilter(`{\"locationCategoriesId\":\"${val}\"}`);\n    }\n  };\n\n  useEffect(() => {\n    // FOR PRE-FETCHING NEXT PAGE\n    if (hasNextPage) {\n      const nextPage = currentPage + 1;\n      queryClient.prefetchQuery([\"locations\", nextPage, filter], () => getLocationListing(pageSize, nextPage, token));\n    }\n  }, [currentPage, queryClient, filter]);\n  return {\n    currentPage,\n    pageOptions,\n    locationLisitngData,\n    hasNextPage,\n    hasPreviousPage,\n    total,\n    locationsData,\n    loadingLocations,\n    isLoading,\n    pagelengthnum,\n    pageSize,\n    brandData,\n    toggle,\n    isOpen,\n    handeldiomlocation,\n    changeCurrentPage,\n    filter,\n    searchedlocationLisitngData\n  };\n};\n\n_s(useLocationsListing, \"g7kp/RUCEpzf9r4DoUYu8evB+/A=\", false, function () {\n  return [useQueryClient, usePaginatedQuery, usePaginatedQuery, useAllDataQuery];\n});","map":{"version":3,"sources":["C:/Users/tech sign/Desktop/1diom-frontend/diom-frontend/src/pages/Locations/useLocations.js"],"names":["useEffect","useState","useQueryClient","useAllDataQuery","usePaginatedQuery","getLocationBrand","getsearchedLocationListing","getLocationListing","useLocationsListing","isOpen","setIsOpen","token","localStorage","getItem","currentPage","setCurrentPage","pageSize","setPageSize","changeCurrentPage","pageNum","queryClient","applyLocationFilter","setApplyFilter","filter","setFilter","data","locationLisitngData","hasNextPage","hasPreviousPage","total","isLoading","searchedlocationLisitngData","locationsData","loadingLocations","brandData","toggle","pagelengthnum","e","target","value","pageOptions","sizePerPage","totalSize","custom","handeldiomlocation","val","nextPage","prefetchQuery"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { useAllDataQuery, usePaginatedQuery } from \"../../hooks/query\";\r\nimport { getLocationBrand, getsearchedLocationListing } from \"../../APIS\";\r\nimport { getLocationListing } from \"../../APIS\";\r\nexport const useLocationsListing = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const token = localStorage.getItem(\"Token\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(50);\r\n  const changeCurrentPage = (pageNum) => setCurrentPage(pageNum);\r\n  const queryClient = useQueryClient();\r\n  const [applyLocationFilter, setApplyFilter] = useState(false);\r\n  const [filter, setFilter] = useState(\"All\");\r\n\r\n  const {\r\n    data: { data: locationLisitngData, hasNextPage, hasPreviousPage, total },\r\n    isLoading,\r\n  } = usePaginatedQuery([\"locations\", currentPage, filter], () =>\r\n    getLocationListing(\r\n      pageSize,\r\n      currentPage,\r\n      token,\r\n      applyLocationFilter,\r\n      filter\r\n    )\r\n  );\r\n\r\n  const {\r\n    data: { data: searchedlocationLisitngData },\r\n  } = usePaginatedQuery([\"searchedlocations\"], () =>\r\n    getsearchedLocationListing(token)\r\n  );\r\n\r\n  const { data: locationsData, isLoading: loadingLocations } = useAllDataQuery(\r\n    [\"locationbrandData\", \"visible\"],\r\n    () => getLocationBrand(token)\r\n  );\r\n  const brandData = locationsData;\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const pagelengthnum = (e) => {\r\n    if (e.target.value === \"1\") {\r\n      setPageSize(10);\r\n    } else if (e.target.value === \"2\") {\r\n      setPageSize(30);\r\n    } else if (e.target.value === \"3\") {\r\n      setPageSize(50);\r\n    }\r\n  };\r\n\r\n  const pageOptions = {\r\n    sizePerPage: pageSize,\r\n    totalSize: total ?? 0,\r\n    custom: true,\r\n  };\r\n\r\n  const handeldiomlocation = (val) => {\r\n    if (val === \"All\") {\r\n      setCurrentPage(1);\r\n      setApplyFilter(false);\r\n      setFilter(\"All\");\r\n    } else {\r\n      setCurrentPage(1);\r\n      setApplyFilter(true);\r\n      setFilter(`{\"locationCategoriesId\":\"${val}\"}`);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n\r\n    if (hasNextPage) {\r\n      const nextPage = currentPage + 1;\r\n      queryClient.prefetchQuery([\"locations\", nextPage, filter], () =>\r\n        getLocationListing(pageSize, nextPage, token)\r\n      );\r\n    }\r\n  }, [currentPage, queryClient, filter]);\r\n\r\n  return {\r\n    currentPage,\r\n    pageOptions,\r\n    locationLisitngData,\r\n    hasNextPage,\r\n    hasPreviousPage,\r\n    total,\r\n    locationsData,\r\n    loadingLocations,\r\n    isLoading,\r\n    pagelengthnum,\r\n    pageSize,\r\n    brandData,\r\n    toggle,\r\n    isOpen,\r\n    handeldiomlocation,\r\n    changeCurrentPage,\r\n    filter,\r\n    searchedlocationLisitngData,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}