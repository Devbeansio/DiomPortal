{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { getcustomer } from \"../../../../APIS/customerCheckedIn\";\nimport { getuserdetails } from \"../../../../APIS/userProfle\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { usePaginatedQuery } from \"../../../../hooks/query\";\nimport { getUserpastbookings } from \"../../../../APIS/customerCheckedIn\";\nimport { getUserscheduledbookings } from \"../../../../APIS/customerCheckedIn\";\nimport { getUseractivebookings } from \"../../../../APIS/customerCheckedIn\";\nexport const UseCheckedinCustomerDetailed = () => {\n  _s();\n\n  let history = useHistory();\n  const [isOpen, setIsOpen] = useState(false);\n  const {\n    id\n  } = useParams();\n  const token = localStorage.getItem(\"Token\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(50);\n\n  const changeCurrentPage = pageNum => setCurrentPage(pageNum);\n\n  const [activeTabJustify, setActiveTabJustify] = useState(\"1\");\n  const queryClient = useQueryClient();\n  const {\n    data: {\n      data: customerdetailedData\n    },\n    isLoading\n  } = usePaginatedQuery([\"customerdetails\", id], () => getuserdetails(pageSize, currentPage, token, id, history));\n  const {\n    data: {\n      data: userActiveBookingData,\n      total,\n      hasNextPage,\n      hasPreviousPage\n    }\n  } = usePaginatedQuery([\"activecustomer\", `${pageSize}`, `${currentPage}`], () => getUseractivebookings(pageSize, currentPage, token, id, history));\n  const {\n    data: {\n      data: userSechduledBookigsData,\n      hasNextPage: scheduledHasNextPage\n    }\n  } = usePaginatedQuery([\"scheduledcustomer\", `${pageSize}`, `${currentPage}`], () => getUserscheduledbookings(pageSize, currentPage, token, id, history));\n  const {\n    data: {\n      data: usePastBookingsData,\n      hasNextPage: pastHasNextPage\n    }\n  } = usePaginatedQuery([\"pastcustomer\", `${pageSize}`, `${currentPage}`], () => getUserpastbookings(pageSize, currentPage, token, id, history));\n\n  const toggleCustomJustified = tab => {\n    if (activeTabJustify !== tab) {\n      setActiveTabJustify(tab);\n    }\n  };\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const pagelengthnum = e => {\n    if (e.target.value === \"1\") {\n      setPageSize(10);\n    } else if (e.target.value === \"2\") {\n      setPageSize(30);\n    } else if (e.target.value === \"3\") {\n      setPageSize(50);\n    }\n  };\n\n  const pageOptions = {\n    sizePerPage: pageSize,\n    totalSize: total !== null && total !== void 0 ? total : 0,\n    custom: true\n  };\n  useEffect(() => {\n    // FOR PRE-FETCHING NEXT PAGE\n    if (hasNextPage) {\n      const nextPage = currentPage + 1;\n      queryClient.prefetchQuery([\"customerdetails\", nextPage], () => getuserdetails(pageSize, currentPage, token, id, history));\n    }\n  }, [currentPage, queryClient]);\n  return {\n    currentPage,\n    pageOptions,\n    customerdetailedData,\n    userActiveBookingData,\n    userSechduledBookigsData,\n    usePastBookingsData,\n    // activeTabJustify,\n    isLoading,\n    toggleCustomJustified,\n    scheduledHasNextPage,\n    pastHasNextPage,\n    activeTabJustify,\n    setActiveTabJustify,\n    pagelengthnum,\n    pageSize,\n    toggle,\n    isOpen,\n    changeCurrentPage\n  };\n};\n\n_s(UseCheckedinCustomerDetailed, \"svsXgxE/LoJ6PjwLVD3TThEJ0qY=\", false, function () {\n  return [useHistory, useParams, useQueryClient, usePaginatedQuery, usePaginatedQuery, usePaginatedQuery, usePaginatedQuery];\n});\n\n_c = UseCheckedinCustomerDetailed;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseCheckedinCustomerDetailed\");","map":{"version":3,"names":["useEffect","useState","useQueryClient","getcustomer","getuserdetails","useHistory","useParams","usePaginatedQuery","getUserpastbookings","getUserscheduledbookings","getUseractivebookings","UseCheckedinCustomerDetailed","history","isOpen","setIsOpen","id","token","localStorage","getItem","currentPage","setCurrentPage","pageSize","setPageSize","changeCurrentPage","pageNum","activeTabJustify","setActiveTabJustify","queryClient","data","customerdetailedData","isLoading","userActiveBookingData","total","hasNextPage","hasPreviousPage","userSechduledBookigsData","scheduledHasNextPage","usePastBookingsData","pastHasNextPage","toggleCustomJustified","tab","toggle","pagelengthnum","e","target","value","pageOptions","sizePerPage","totalSize","custom","nextPage","prefetchQuery"],"sources":["C:/Users/tech sign/Desktop/xyz/src/pages/MyDashboard/CheckedinCustomer/CheckedinCustomerDetail/useCheckedinCustomerDetailed.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { getcustomer } from \"../../../../APIS/customerCheckedIn\";\r\nimport { getuserdetails } from \"../../../../APIS/userProfle\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { usePaginatedQuery } from \"../../../../hooks/query\";\r\nimport { getUserpastbookings } from \"../../../../APIS/customerCheckedIn\";\r\nimport { getUserscheduledbookings } from \"../../../../APIS/customerCheckedIn\";\r\nimport { getUseractivebookings } from \"../../../../APIS/customerCheckedIn\";\r\n\r\nexport const UseCheckedinCustomerDetailed = () => {\r\n  let history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const { id } = useParams();\r\n  const token = localStorage.getItem(\"Token\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(50);\r\n  const changeCurrentPage = (pageNum) => setCurrentPage(pageNum);\r\n  const [activeTabJustify, setActiveTabJustify] = useState(\"1\");\r\n  const queryClient = useQueryClient();\r\n\r\n  const {\r\n    data: { data: customerdetailedData },\r\n    isLoading,\r\n  } = usePaginatedQuery([\"customerdetails\", id], () =>\r\n    getuserdetails(pageSize, currentPage, token, id,history)\r\n  );\r\n\r\n  const {\r\n    data: { data: userActiveBookingData, total, hasNextPage, hasPreviousPage },\r\n  } = usePaginatedQuery([\"activecustomer\",`${pageSize}`,`${currentPage}`], () =>\r\n    getUseractivebookings(pageSize, currentPage, token, id,history)\r\n  );\r\n\r\n  const {\r\n    data: { data: userSechduledBookigsData,hasNextPage:scheduledHasNextPage },\r\n  } = usePaginatedQuery([\"scheduledcustomer\",`${pageSize}`,`${currentPage}`], () =>\r\n    getUserscheduledbookings(pageSize, currentPage, token, id,history)\r\n  );\r\n  \r\n  const {\r\n    data: { data: usePastBookingsData,hasNextPage:pastHasNextPage },\r\n  } = usePaginatedQuery([\"pastcustomer\", `${pageSize}`,`${currentPage}`], () =>\r\n    getUserpastbookings(pageSize, currentPage, token, id,history)\r\n  );\r\n\r\n  const toggleCustomJustified = (tab) => {\r\n    if (activeTabJustify !== tab) {\r\n      setActiveTabJustify(tab);\r\n    }\r\n  };\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const pagelengthnum = (e) => {\r\n    if (e.target.value === \"1\") {\r\n      setPageSize(10);\r\n    } else if (e.target.value === \"2\") {\r\n      setPageSize(30);\r\n    } else if (e.target.value === \"3\") {\r\n      setPageSize(50);\r\n    }\r\n  };\r\n  const pageOptions = {\r\n    sizePerPage: pageSize,\r\n    totalSize: total ?? 0,\r\n    custom: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    // FOR PRE-FETCHING NEXT PAGE\r\n    if (hasNextPage) {\r\n      const nextPage = currentPage + 1;\r\n      queryClient.prefetchQuery([\"customerdetails\", nextPage], () =>\r\n        getuserdetails(pageSize, currentPage, token, id,history)\r\n      );\r\n    }\r\n  }, [currentPage, queryClient]);\r\n\r\n  return {\r\n    currentPage,\r\n    pageOptions,\r\n    customerdetailedData,\r\n    userActiveBookingData,\r\n    userSechduledBookigsData,\r\n    usePastBookingsData,\r\n    // activeTabJustify,\r\n    isLoading,\r\n    toggleCustomJustified,\r\n    scheduledHasNextPage,pastHasNextPage,\r\n    activeTabJustify,\r\n    setActiveTabJustify,\r\n    pagelengthnum,\r\n    pageSize,\r\n    toggle,\r\n    isOpen,\r\n    changeCurrentPage,\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}